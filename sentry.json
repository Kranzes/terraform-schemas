{
  "format_version": "1.0",
  "provider_schemas": {
    "registry.terraform.io/jianyuan/sentry": {
      "provider": {
        "version": 0,
        "block": {
          "attributes": {
            "base_url": {
              "type": "string",
              "description": "The target Sentry Base API URL in the format `https://[hostname]/api/`. The default value is `https://sentry.io/api/`. The value must be provided when working with Sentry On-Premise. The value can be sourced from the `SENTRY_BASE_URL` environment variable.",
              "description_kind": "markdown",
              "optional": true
            },
            "token": {
              "type": "string",
              "description": "The authentication token used to connect to Sentry. The value can be sourced from the `SENTRY_AUTH_TOKEN` environment variable.",
              "description_kind": "markdown",
              "optional": true,
              "sensitive": true
            }
          },
          "description_kind": "plain"
        }
      },
      "resource_schemas": {
        "sentry_dashboard": {
          "version": 0,
          "block": {
            "attributes": {
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "internal_id": {
                "type": "string",
                "description": "The internal ID for this dashboard.",
                "description_kind": "markdown",
                "computed": true
              },
              "organization": {
                "type": "string",
                "description": "The slug of the organization the dashboard belongs to.",
                "description_kind": "markdown",
                "required": true
              },
              "title": {
                "type": "string",
                "description": "Dashboard title.",
                "description_kind": "markdown",
                "required": true
              }
            },
            "block_types": {
              "widget": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "display_type": {
                      "type": "string",
                      "description_kind": "plain",
                      "required": true
                    },
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "computed": true
                    },
                    "interval": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "limit": {
                      "type": "number",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "title": {
                      "type": "string",
                      "description_kind": "plain",
                      "required": true
                    },
                    "widget_type": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "block_types": {
                    "layout": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "h": {
                            "type": "number",
                            "description_kind": "plain",
                            "required": true
                          },
                          "min_h": {
                            "type": "number",
                            "description_kind": "plain",
                            "required": true
                          },
                          "w": {
                            "type": "number",
                            "description_kind": "plain",
                            "required": true
                          },
                          "x": {
                            "type": "number",
                            "description_kind": "plain",
                            "required": true
                          },
                          "y": {
                            "type": "number",
                            "description_kind": "plain",
                            "required": true
                          }
                        },
                        "description_kind": "plain"
                      },
                      "min_items": 1,
                      "max_items": 1
                    },
                    "query": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "aggregates": {
                            "type": [
                              "set",
                              "string"
                            ],
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "columns": {
                            "type": [
                              "set",
                              "string"
                            ],
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "conditions": {
                            "type": "string",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "field_aliases": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "fields": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "id": {
                            "type": "string",
                            "description_kind": "plain",
                            "computed": true
                          },
                          "name": {
                            "type": "string",
                            "description_kind": "plain",
                            "optional": true
                          },
                          "order_by": {
                            "type": "string",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "description_kind": "plain"
                      },
                      "min_items": 1
                    }
                  },
                  "description": "Dashboard widgets.",
                  "description_kind": "markdown"
                }
              }
            },
            "description": "Sentry Dashboard resource.",
            "description_kind": "markdown"
          }
        },
        "sentry_issue_alert": {
          "version": 2,
          "block": {
            "attributes": {
              "action_match": {
                "type": "string",
                "description": "Trigger actions when an event is captured by Sentry and `any` or `all` of the specified conditions happen.",
                "description_kind": "markdown",
                "required": true
              },
              "actions": {
                "type": "string",
                "description": "List of actions. In JSON string format.",
                "description_kind": "markdown",
                "required": true
              },
              "conditions": {
                "type": "string",
                "description": "List of conditions. In JSON string format.",
                "description_kind": "markdown",
                "required": true
              },
              "environment": {
                "type": "string",
                "description": "Perform issue alert in a specific environment.",
                "description_kind": "markdown",
                "optional": true
              },
              "filter_match": {
                "type": "string",
                "description": "A string determining which filters need to be true before any actions take place. Required when a value is provided for `filters`.",
                "description_kind": "markdown",
                "optional": true
              },
              "filters": {
                "type": "string",
                "description": "A list of filters that determine if a rule fires after the necessary conditions have been met. In JSON string format.",
                "description_kind": "markdown",
                "optional": true
              },
              "frequency": {
                "type": "number",
                "description": "Perform actions at most once every `X` minutes for this issue.",
                "description_kind": "markdown",
                "required": true
              },
              "id": {
                "type": "string",
                "description": "The ID of this resource.",
                "description_kind": "markdown",
                "computed": true
              },
              "name": {
                "type": "string",
                "description": "The issue alert name.",
                "description_kind": "markdown",
                "required": true
              },
              "organization": {
                "type": "string",
                "description": "The slug of the organization the resource belongs to.",
                "description_kind": "markdown",
                "required": true
              },
              "owner": {
                "type": "string",
                "description": "The ID of the team or user that owns the rule.",
                "description_kind": "markdown",
                "optional": true
              },
              "project": {
                "type": "string",
                "description": "The slug of the project the resource belongs to.",
                "description_kind": "markdown",
                "required": true
              }
            },
            "description": "Create an Issue Alert Rule for a Project. See the [Sentry Documentation](https://docs.sentry.io/api/alerts/create-an-issue-alert-rule-for-a-project/) for more information.\n\nPlease note the following changes since v0.12.0:\n- The attributes `conditions`, `filters`, and `actions` are in JSON string format. The types must match the Sentry API, otherwise Terraform will incorrectly detect a drift. Use `parseint(\"string\", 10)` to convert a string to an integer. Avoid using `jsonencode()` as it is unable to distinguish between an integer and a float.\n- The attribute `internal_id` has been removed. Use `id` instead.\n- The attribute `id` is now the ID of the issue alert. Previously, it was a combination of the organization, project, and issue alert ID.\n\t\t",
            "description_kind": "markdown"
          }
        },
        "sentry_key": {
          "version": 0,
          "block": {
            "attributes": {
              "dsn_csp": {
                "type": "string",
                "description": "DSN for the Content Security Policy (CSP) for the key.",
                "description_kind": "markdown",
                "computed": true
              },
              "dsn_public": {
                "type": "string",
                "description": "DSN for the key.",
                "description_kind": "markdown",
                "computed": true
              },
              "dsn_secret": {
                "type": "string",
                "description_kind": "plain",
                "deprecated": true,
                "computed": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "is_active": {
                "type": "bool",
                "description": "Flag indicating the key is active.",
                "description_kind": "markdown",
                "computed": true
              },
              "name": {
                "type": "string",
                "description": "The name of the key.",
                "description_kind": "markdown",
                "required": true
              },
              "organization": {
                "type": "string",
                "description": "The slug of the organization the key should be created for.",
                "description_kind": "markdown",
                "required": true
              },
              "project": {
                "type": "string",
                "description": "The slug of the project the key should be created for.",
                "description_kind": "markdown",
                "required": true
              },
              "project_id": {
                "type": "number",
                "description": "The ID of the project that the key belongs to.",
                "description_kind": "markdown",
                "computed": true
              },
              "public": {
                "type": "string",
                "description": "Public key portion of the client key.",
                "description_kind": "markdown",
                "computed": true
              },
              "rate_limit_count": {
                "type": "number",
                "description": "Number of events that can be reported within the rate limit window.",
                "description_kind": "markdown",
                "optional": true,
                "computed": true
              },
              "rate_limit_window": {
                "type": "number",
                "description": "Length of time that will be considered when checking the rate limit.",
                "description_kind": "markdown",
                "optional": true,
                "computed": true
              },
              "secret": {
                "type": "string",
                "description": "Secret key portion of the client key.",
                "description_kind": "markdown",
                "computed": true
              }
            },
            "description": "Sentry Key resource.",
            "description_kind": "markdown"
          }
        },
        "sentry_metric_alert": {
          "version": 0,
          "block": {
            "attributes": {
              "aggregate": {
                "type": "string",
                "description": "The aggregation criteria to apply",
                "description_kind": "markdown",
                "required": true
              },
              "dataset": {
                "type": "string",
                "description": "The Sentry Alert category",
                "description_kind": "markdown",
                "optional": true
              },
              "environment": {
                "type": "string",
                "description": "Perform Alert rule in a specific environment",
                "description_kind": "markdown",
                "optional": true,
                "computed": true
              },
              "event_types": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "The events type of dataset.",
                "description_kind": "markdown",
                "optional": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "internal_id": {
                "type": "string",
                "description": "The internal ID for this metric alert.",
                "description_kind": "markdown",
                "computed": true
              },
              "name": {
                "type": "string",
                "description": "The metric alert name.",
                "description_kind": "markdown",
                "required": true
              },
              "organization": {
                "type": "string",
                "description": "The slug of the organization the metric alert belongs to.",
                "description_kind": "markdown",
                "required": true
              },
              "owner": {
                "type": "string",
                "description": "Specifies the owner id of this Alert rule",
                "description_kind": "markdown",
                "optional": true,
                "computed": true
              },
              "project": {
                "type": "string",
                "description": "The slug of the project to create the metric alert for.",
                "description_kind": "markdown",
                "required": true
              },
              "query": {
                "type": "string",
                "description": "The query filter to apply",
                "description_kind": "markdown",
                "required": true
              },
              "resolve_threshold": {
                "type": "number",
                "description": "The value at which the Alert rule resolves",
                "description_kind": "markdown",
                "optional": true
              },
              "threshold_type": {
                "type": "number",
                "description": "The type of threshold",
                "description_kind": "markdown",
                "required": true
              },
              "time_window": {
                "type": "number",
                "description": "The period to evaluate the Alert rule in minutes",
                "description_kind": "markdown",
                "required": true
              }
            },
            "block_types": {
              "trigger": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "alert_threshold": {
                      "type": "number",
                      "description_kind": "plain",
                      "required": true
                    },
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "computed": true
                    },
                    "label": {
                      "type": "string",
                      "description_kind": "plain",
                      "required": true
                    },
                    "resolve_threshold": {
                      "type": "number",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "threshold_type": {
                      "type": "number",
                      "description_kind": "plain",
                      "required": true
                    }
                  },
                  "block_types": {
                    "action": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "id": {
                            "type": "string",
                            "description_kind": "plain",
                            "computed": true
                          },
                          "input_channel_id": {
                            "type": "string",
                            "description": "Slack channel ID to avoid rate-limiting, see [here](https://docs.sentry.io/product/integrations/notification-incidents/slack/#rate-limiting-error)",
                            "description_kind": "markdown",
                            "optional": true
                          },
                          "integration_id": {
                            "type": "number",
                            "description_kind": "plain",
                            "optional": true
                          },
                          "target_identifier": {
                            "type": "string",
                            "description_kind": "plain",
                            "optional": true
                          },
                          "target_type": {
                            "type": "string",
                            "description_kind": "plain",
                            "required": true
                          },
                          "type": {
                            "type": "string",
                            "description_kind": "plain",
                            "required": true
                          }
                        },
                        "description_kind": "plain"
                      }
                    }
                  },
                  "description_kind": "plain"
                },
                "min_items": 1
              }
            },
            "description": "Sentry Metric Alert resource.",
            "description_kind": "markdown"
          }
        },
        "sentry_notification_action": {
          "version": 0,
          "block": {
            "attributes": {
              "id": {
                "type": "string",
                "description": "The ID of this resource.",
                "description_kind": "plain",
                "computed": true
              },
              "integration_id": {
                "type": "string",
                "description": "The ID of the integration that is used for sending the notification. Use the `sentry_organization_integration` data source to retrieve an integration. Required if `service_type` is `slack`, `pagerduty` or `opsgenie`.",
                "description_kind": "plain",
                "optional": true
              },
              "organization": {
                "type": "string",
                "description": "The slug of the organization the project belongs to.",
                "description_kind": "plain",
                "required": true
              },
              "projects": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "The list of project slugs that the Notification Action is created for.",
                "description_kind": "plain",
                "required": true
              },
              "service_type": {
                "type": "string",
                "description": "The service that is used for sending the notification.",
                "description_kind": "plain",
                "required": true
              },
              "target_display": {
                "type": "string",
                "description": "The display name of the target that is used for sending the notification (e.g. Slack channel name). Required if `service_type` is `slack` or `opsgenie`.",
                "description_kind": "plain",
                "optional": true
              },
              "target_identifier": {
                "type": "string",
                "description": "The identifier of the target that is used for sending the notification (e.g. Slack channel ID). Required if `service_type` is `slack` or `opsgenie`.",
                "description_kind": "plain",
                "optional": true
              },
              "trigger_type": {
                "type": "string",
                "description": "The type of trigger that will activate this action. Valid values are `spike_protection`.",
                "description_kind": "plain",
                "required": true
              }
            },
            "description": "Create a Spike Protection Notification Action. See the [Sentry Documentation](https://docs.sentry.io/api/alerts/create-a-spike-protection-notification-action/) for more information.",
            "description_kind": "markdown"
          }
        },
        "sentry_organization": {
          "version": 0,
          "block": {
            "attributes": {
              "agree_terms": {
                "type": "bool",
                "description": "You agree to the applicable terms of service and privacy policy.",
                "description_kind": "markdown",
                "required": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "internal_id": {
                "type": "string",
                "description": "The internal ID for this organization.",
                "description_kind": "markdown",
                "computed": true
              },
              "name": {
                "type": "string",
                "description": "The human readable name for the organization.",
                "description_kind": "markdown",
                "required": true
              },
              "slug": {
                "type": "string",
                "description": "The unique URL slug for this organization.",
                "description_kind": "markdown",
                "optional": true,
                "computed": true
              }
            },
            "description": "Sentry Organization resource.",
            "description_kind": "markdown"
          }
        },
        "sentry_organization_code_mapping": {
          "version": 0,
          "block": {
            "attributes": {
              "default_branch": {
                "type": "string",
                "description": "Default branch of your code we fall back to if you do not have commit tracking set up.",
                "description_kind": "markdown",
                "required": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "integration_id": {
                "type": "string",
                "description": "Sentry Organization Integration ID.",
                "description_kind": "markdown",
                "required": true
              },
              "internal_id": {
                "type": "string",
                "description": "The internal ID for this resource.",
                "description_kind": "markdown",
                "computed": true
              },
              "organization": {
                "type": "string",
                "description": "The slug of the organization the code mapping is under.",
                "description_kind": "markdown",
                "required": true
              },
              "project_id": {
                "type": "string",
                "description": "Sentry Project ID.",
                "description_kind": "markdown",
                "required": true
              },
              "repository_id": {
                "type": "string",
                "description": "Sentry Organization Repository ID.",
                "description_kind": "markdown",
                "required": true
              },
              "source_root": {
                "type": "string",
                "description": "https://docs.sentry.io/product/integrations/source-code-mgmt/github/#stack-trace-linking",
                "description_kind": "markdown",
                "optional": true
              },
              "stack_root": {
                "type": "string",
                "description": "https://docs.sentry.io/product/integrations/source-code-mgmt/github/#stack-trace-linking",
                "description_kind": "markdown",
                "optional": true
              }
            },
            "description": "Sentry Organization Code Mapping resource.",
            "description_kind": "markdown"
          }
        },
        "sentry_organization_member": {
          "version": 0,
          "block": {
            "attributes": {
              "email": {
                "type": "string",
                "description": "The email of the organization member.",
                "description_kind": "markdown",
                "required": true
              },
              "expired": {
                "type": "bool",
                "description": "The invite has expired.",
                "description_kind": "markdown",
                "computed": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "internal_id": {
                "type": "string",
                "description": "The internal ID for this organization membership.",
                "description_kind": "markdown",
                "computed": true
              },
              "organization": {
                "type": "string",
                "description": "The slug of the organization the user should be invited to.",
                "description_kind": "markdown",
                "required": true
              },
              "pending": {
                "type": "bool",
                "description": "The invite is pending.",
                "description_kind": "markdown",
                "computed": true
              },
              "role": {
                "type": "string",
                "description": "This is the role of the organization member.",
                "description_kind": "markdown",
                "required": true
              }
            },
            "description": "Resource for managing Sentry organization members. To add a member to a team, use the `sentry_team_member` resource.",
            "description_kind": "markdown"
          }
        },
        "sentry_organization_repository_github": {
          "version": 0,
          "block": {
            "attributes": {
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "identifier": {
                "type": "string",
                "description": "The repo identifier. For Github it is {github_org}/{github_repo}.",
                "description_kind": "markdown",
                "required": true
              },
              "integration_id": {
                "type": "string",
                "description": "The organization integration ID for Github.",
                "description_kind": "markdown",
                "required": true
              },
              "internal_id": {
                "type": "string",
                "description": "The internal ID for this organization repository.",
                "description_kind": "markdown",
                "computed": true
              },
              "organization": {
                "type": "string",
                "description": "The slug of the Sentry organization this resource belongs to.",
                "description_kind": "markdown",
                "required": true
              }
            },
            "description": "Sentry Github Organization Repository resource.",
            "description_kind": "markdown"
          }
        },
        "sentry_plugin": {
          "version": 0,
          "block": {
            "attributes": {
              "config": {
                "type": [
                  "map",
                  "string"
                ],
                "description": "Plugin config.",
                "description_kind": "markdown",
                "optional": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "organization": {
                "type": "string",
                "description": "The slug of the organization the project belongs to.",
                "description_kind": "markdown",
                "required": true
              },
              "plugin": {
                "type": "string",
                "description": "Plugin ID.",
                "description_kind": "markdown",
                "required": true
              },
              "project": {
                "type": "string",
                "description": "The slug of the project to create the plugin for.",
                "description_kind": "markdown",
                "required": true
              }
            },
            "description": "Sentry Plugin resource.",
            "description_kind": "markdown"
          }
        },
        "sentry_project": {
          "version": 0,
          "block": {
            "attributes": {
              "color": {
                "type": "string",
                "description_kind": "plain",
                "computed": true
              },
              "default_key": {
                "type": "bool",
                "description": "Whether to create a default key. By default, Sentry will create a key for you. If you wish to manage keys manually, set this to false and create keys using the `sentry_key` resource.",
                "description_kind": "markdown",
                "optional": true
              },
              "default_rules": {
                "type": "bool",
                "description": "Whether to create a default issue alert. Defaults to true where the behavior is to alert the user on every new issue.",
                "description_kind": "markdown",
                "optional": true
              },
              "digests_max_delay": {
                "type": "number",
                "description": "The maximum amount of time (in seconds) to wait between scheduling digests for delivery.",
                "description_kind": "markdown",
                "optional": true,
                "computed": true
              },
              "digests_min_delay": {
                "type": "number",
                "description": "The minimum amount of time (in seconds) to wait between scheduling digests for delivery after the initial scheduling.",
                "description_kind": "markdown",
                "optional": true,
                "computed": true
              },
              "features": {
                "type": [
                  "list",
                  "string"
                ],
                "description_kind": "plain",
                "computed": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "internal_id": {
                "type": "string",
                "description": "The internal ID for this project.",
                "description_kind": "markdown",
                "computed": true
              },
              "is_bookmarked": {
                "type": "bool",
                "description_kind": "plain",
                "deprecated": true,
                "computed": true
              },
              "is_public": {
                "type": "bool",
                "description_kind": "plain",
                "computed": true
              },
              "name": {
                "type": "string",
                "description": "The name for the project.",
                "description_kind": "markdown",
                "required": true
              },
              "organization": {
                "type": "string",
                "description": "The slug of the organization the project belongs to.",
                "description_kind": "markdown",
                "required": true
              },
              "platform": {
                "type": "string",
                "description": "The optional platform for this project.",
                "description_kind": "markdown",
                "optional": true,
                "computed": true
              },
              "project_id": {
                "type": "string",
                "description": "Use `internal_id` instead.",
                "description_kind": "markdown",
                "deprecated": true,
                "computed": true
              },
              "resolve_age": {
                "type": "number",
                "description": "Hours in which an issue is automatically resolve if not seen after this amount of time.",
                "description_kind": "markdown",
                "optional": true,
                "computed": true
              },
              "slug": {
                "type": "string",
                "description": "The optional slug for this project.",
                "description_kind": "markdown",
                "optional": true,
                "computed": true
              },
              "status": {
                "type": "string",
                "description_kind": "plain",
                "computed": true
              },
              "team": {
                "type": "string",
                "description": "The slug of the team to create the project for. **Deprecated** Use `teams` instead.",
                "description_kind": "markdown",
                "deprecated": true,
                "optional": true
              },
              "teams": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "The slugs of the teams to create the project for.",
                "description_kind": "markdown",
                "optional": true
              }
            },
            "description": "Sentry Project resource.",
            "description_kind": "markdown"
          }
        },
        "sentry_project_inbound_data_filter": {
          "version": 0,
          "block": {
            "attributes": {
              "active": {
                "type": "bool",
                "description": "Toggle the browser-extensions, localhost, filtered-transaction, or web-crawlers filter on or off.",
                "description_kind": "plain",
                "optional": true
              },
              "filter_id": {
                "type": "string",
                "description": "The type of filter toggle to update. See the [Sentry documentation](https://docs.sentry.io/api/projects/update-an-inbound-data-filter/) for a list of available filters.",
                "description_kind": "plain",
                "required": true
              },
              "id": {
                "type": "string",
                "description": "The ID of this resource.",
                "description_kind": "plain",
                "computed": true
              },
              "organization": {
                "type": "string",
                "description": "The slug of the organization the project belongs to.",
                "description_kind": "plain",
                "required": true
              },
              "project": {
                "type": "string",
                "description": "The slug of the project to create the filter for.",
                "description_kind": "plain",
                "required": true
              },
              "subfilters": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "Specifies which legacy browser filters should be active. Anything excluded from the list will be disabled. See the [Sentry documentation](https://docs.sentry.io/api/projects/update-an-inbound-data-filter/) for a list of available subfilters.",
                "description_kind": "plain",
                "optional": true
              }
            },
            "description": "Sentry Project Inbound Data Filter resource. This resource is used to create and manage inbound data filters for a project. For more information on what filters are available, see the [Sentry documentation](https://docs.sentry.io/api/projects/update-an-inbound-data-filter/).",
            "description_kind": "markdown"
          }
        },
        "sentry_project_spike_protection": {
          "version": 0,
          "block": {
            "attributes": {
              "enabled": {
                "type": "bool",
                "description": "Toggle the browser-extensions, localhost, filtered-transaction, or web-crawlers filter on or off.",
                "description_kind": "plain",
                "required": true
              },
              "id": {
                "type": "string",
                "description": "The ID of this resource.",
                "description_kind": "plain",
                "computed": true
              },
              "organization": {
                "type": "string",
                "description": "The slug of the organization the project belongs to.",
                "description_kind": "plain",
                "required": true
              },
              "project": {
                "type": "string",
                "description": "The slug of the project to create the filter for.",
                "description_kind": "plain",
                "required": true
              }
            },
            "description": "Sentry Project Spike Protection resource. This resource is used to create and manage spike protection for a project.",
            "description_kind": "markdown"
          }
        },
        "sentry_project_symbol_source": {
          "version": 0,
          "block": {
            "attributes": {
              "access_key": {
                "type": "string",
                "description": "The AWS Access Key.Required for S3 sources, invalid for all others.",
                "description_kind": "plain",
                "optional": true
              },
              "app_connect_issuer": {
                "type": "string",
                "description": "The App Store Connect Issuer ID. Required for AppStoreConnect sources, invalid for all others.",
                "description_kind": "plain",
                "optional": true
              },
              "app_connect_private_key": {
                "type": "string",
                "description": "The App Store Connect API Private Key. Required for AppStoreConnect sources, invalid for all others.",
                "description_kind": "plain",
                "optional": true,
                "sensitive": true
              },
              "app_id": {
                "type": "string",
                "description": "The App Store Connect App ID. Required for AppStoreConnect sources, invalid for all others.",
                "description_kind": "plain",
                "optional": true
              },
              "bucket": {
                "type": "string",
                "description": "The GCS or S3 bucket where the source resides. Required for GCS and S3 sourcse, invalid for HTTP and AppStoreConnect sources.",
                "description_kind": "plain",
                "optional": true
              },
              "client_email": {
                "type": "string",
                "description": "The GCS email address for authentication. Required for GCS sources, invalid for all others.",
                "description_kind": "plain",
                "optional": true
              },
              "id": {
                "type": "string",
                "description": "The ID of this resource.",
                "description_kind": "plain",
                "computed": true
              },
              "layout": {
                "nested_type": {
                  "attributes": {
                    "casing": {
                      "type": "string",
                      "description": "The casing of the symbol source layout. The layout of the folder structure. The options are: `default` - Default (mixed case), `uppercase` - Uppercase, `lowercase` - Lowercase.",
                      "description_kind": "plain",
                      "required": true
                    },
                    "type": {
                      "type": "string",
                      "description": "The layout of the folder structure. The options are: `native` - Platform-Specific (SymStore / GDB / LLVM), `symstore` - Microsoft SymStore, `symstore_index2` - Microsoft SymStore (with index2.txt), `ssqp` - Microsoft SSQP, `unified` - Unified Symbol Server Layout, `debuginfod` - debuginfod.",
                      "description_kind": "plain",
                      "required": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "Layout settings for the source. This is required for HTTP, GCS, and S3 sources and invalid for AppStoreConnect sources.",
                "description_kind": "plain",
                "optional": true
              },
              "name": {
                "type": "string",
                "description": "The human-readable name of the source.",
                "description_kind": "plain",
                "required": true
              },
              "organization": {
                "type": "string",
                "description": "The slug of the organization the project belongs to.",
                "description_kind": "plain",
                "required": true
              },
              "password": {
                "type": "string",
                "description": "The password for accessing the source. Optional for HTTP sources, invalid for all others.",
                "description_kind": "plain",
                "optional": true,
                "sensitive": true
              },
              "prefix": {
                "type": "string",
                "description": "The GCS or S3 prefix. Optional for GCS and S3 sourcse, invalid for HTTP and AppStoreConnect sources.",
                "description_kind": "plain",
                "optional": true
              },
              "private_key": {
                "type": "string",
                "description": "The GCS private key. Required for GCS sources, invalid for all others.",
                "description_kind": "plain",
                "optional": true,
                "sensitive": true
              },
              "project": {
                "type": "string",
                "description": "The slug of the project to create the filter for.",
                "description_kind": "plain",
                "required": true
              },
              "region": {
                "type": "string",
                "description": "The source's S3 region. Required for S3 sources, invalid for all others.",
                "description_kind": "plain",
                "optional": true
              },
              "secret_key": {
                "type": "string",
                "description": "The AWS Secret Access Key.Required for S3 sources, invalid for all others.",
                "description_kind": "plain",
                "optional": true,
                "sensitive": true
              },
              "type": {
                "type": "string",
                "description": "The type of symbol source. One of `appStoreConnect` (App Store Connect), `http` (SymbolServer (HTTP)), `gcs` (Google Cloud Storage), `s3` (Amazon S3).",
                "description_kind": "plain",
                "required": true
              },
              "url": {
                "type": "string",
                "description": "The source's URL. Optional for HTTP sources, invalid for all others.",
                "description_kind": "plain",
                "optional": true
              },
              "username": {
                "type": "string",
                "description": "The user name for accessing the source. Optional for HTTP sources, invalid for all others.",
                "description_kind": "plain",
                "optional": true
              }
            },
            "description": "Sentry Project Symbol Source. See the [Sentry documentation](https://docs.sentry.io/api/projects/add-a-symbol-source-to-a-project/) for more information.",
            "description_kind": "markdown"
          }
        },
        "sentry_team": {
          "version": 0,
          "block": {
            "attributes": {
              "has_access": {
                "type": "bool",
                "description_kind": "plain",
                "computed": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "internal_id": {
                "type": "string",
                "description": "The internal ID for this team.",
                "description_kind": "markdown",
                "computed": true
              },
              "is_member": {
                "type": "bool",
                "description_kind": "plain",
                "computed": true
              },
              "is_pending": {
                "type": "bool",
                "description_kind": "plain",
                "computed": true
              },
              "name": {
                "type": "string",
                "description": "The name of the team.",
                "description_kind": "markdown",
                "required": true
              },
              "organization": {
                "type": "string",
                "description": "The slug of the organization the team should be created for.",
                "description_kind": "markdown",
                "required": true
              },
              "slug": {
                "type": "string",
                "description": "The optional slug for this team.",
                "description_kind": "markdown",
                "optional": true,
                "computed": true
              },
              "team_id": {
                "type": "string",
                "description": "Use `internal_id` instead.",
                "description_kind": "markdown",
                "deprecated": true,
                "computed": true
              }
            },
            "description": "Sentry Team resource.",
            "description_kind": "markdown"
          }
        },
        "sentry_team_member": {
          "version": 0,
          "block": {
            "attributes": {
              "id": {
                "type": "string",
                "description": "The ID of this resource.",
                "description_kind": "plain",
                "computed": true
              },
              "member_id": {
                "type": "string",
                "description": "The ID of the member to add to the team.",
                "description_kind": "plain",
                "required": true
              },
              "organization": {
                "type": "string",
                "description": "The slug of the organization the team should be created for.",
                "description_kind": "plain",
                "required": true
              },
              "role": {
                "type": "string",
                "description": "The role of the member in the team. When not set, resolve to the minimum team role given by this member's organization role.",
                "description_kind": "plain",
                "optional": true
              },
              "team": {
                "type": "string",
                "description": "The slug of the team to add the member to.",
                "description_kind": "plain",
                "required": true
              }
            },
            "description": "Sentry Team Member resource.",
            "description_kind": "markdown"
          }
        }
      },
      "data_source_schemas": {
        "sentry_dashboard": {
          "version": 0,
          "block": {
            "attributes": {
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "internal_id": {
                "type": "string",
                "description": "The internal ID for this dashboard.",
                "description_kind": "markdown",
                "required": true
              },
              "organization": {
                "type": "string",
                "description": "The slug of the organization the dashboard belongs to.",
                "description_kind": "markdown",
                "required": true
              },
              "title": {
                "type": "string",
                "description": "Dashboard title.",
                "description_kind": "markdown",
                "computed": true
              },
              "widget": {
                "type": [
                  "list",
                  [
                    "object",
                    {
                      "display_type": "string",
                      "id": "string",
                      "interval": "string",
                      "layout": [
                        "list",
                        [
                          "object",
                          {
                            "h": "number",
                            "min_h": "number",
                            "w": "number",
                            "x": "number",
                            "y": "number"
                          }
                        ]
                      ],
                      "limit": "number",
                      "query": [
                        "list",
                        [
                          "object",
                          {
                            "aggregates": [
                              "set",
                              "string"
                            ],
                            "columns": [
                              "set",
                              "string"
                            ],
                            "conditions": "string",
                            "field_aliases": [
                              "list",
                              "string"
                            ],
                            "fields": [
                              "list",
                              "string"
                            ],
                            "id": "string",
                            "name": "string",
                            "order_by": "string"
                          }
                        ]
                      ],
                      "title": "string",
                      "widget_type": "string"
                    }
                  ]
                ],
                "description": "Dashboard widgets.",
                "description_kind": "markdown",
                "computed": true
              }
            },
            "description_kind": "plain"
          }
        },
        "sentry_issue_alert": {
          "version": 0,
          "block": {
            "attributes": {
              "action_match": {
                "type": "string",
                "description": "Trigger actions when an event is captured by Sentry and `any` or `all` of the specified conditions happen.",
                "description_kind": "markdown",
                "computed": true
              },
              "actions": {
                "type": "string",
                "description": "List of actions. In JSON string format.",
                "description_kind": "markdown",
                "computed": true
              },
              "conditions": {
                "type": "string",
                "description": "List of conditions. In JSON string format.",
                "description_kind": "markdown",
                "computed": true
              },
              "environment": {
                "type": "string",
                "description": "Perform issue alert in a specific environment.",
                "description_kind": "markdown",
                "computed": true
              },
              "filter_match": {
                "type": "string",
                "description": "A string determining which filters need to be true before any actions take place. Required when a value is provided for `filters`.",
                "description_kind": "markdown",
                "computed": true
              },
              "filters": {
                "type": "string",
                "description": "A list of filters that determine if a rule fires after the necessary conditions have been met. In JSON string format.",
                "description_kind": "markdown",
                "computed": true
              },
              "frequency": {
                "type": "number",
                "description": "Perform actions at most once every `X` minutes for this issue.",
                "description_kind": "markdown",
                "computed": true
              },
              "id": {
                "type": "string",
                "description": "The ID of this resource.",
                "description_kind": "plain",
                "required": true
              },
              "name": {
                "type": "string",
                "description": "The issue alert name.",
                "description_kind": "markdown",
                "computed": true
              },
              "organization": {
                "type": "string",
                "description": "The slug of the organization the resource belongs to.",
                "description_kind": "markdown",
                "required": true
              },
              "owner": {
                "type": "string",
                "description": "The ID of the team or user that owns the rule.",
                "description_kind": "markdown",
                "computed": true
              },
              "project": {
                "type": "string",
                "description": "The slug of the project the resource belongs to.",
                "description_kind": "markdown",
                "required": true
              }
            },
            "description": "Sentry Issue Alert data source. See the [Sentry documentation](https://docs.sentry.io/api/alerts/retrieve-an-issue-alert-rule-for-a-project/) for more information.",
            "description_kind": "markdown"
          }
        },
        "sentry_key": {
          "version": 0,
          "block": {
            "attributes": {
              "dsn_csp": {
                "type": "string",
                "description": "DSN for the Content Security Policy (CSP) for the key.",
                "description_kind": "markdown",
                "computed": true
              },
              "dsn_public": {
                "type": "string",
                "description": "DSN for the key.",
                "description_kind": "markdown",
                "computed": true
              },
              "dsn_secret": {
                "type": "string",
                "description_kind": "plain",
                "deprecated": true,
                "computed": true
              },
              "first": {
                "type": "bool",
                "description": "Boolean flag indicating that we want the first key of the returned keys.",
                "description_kind": "markdown",
                "optional": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "is_active": {
                "type": "bool",
                "description": "Flag indicating the key is active.",
                "description_kind": "markdown",
                "computed": true
              },
              "name": {
                "type": "string",
                "description": "The name of the key to retrieve.",
                "description_kind": "markdown",
                "optional": true
              },
              "organization": {
                "type": "string",
                "description": "The slug of the organization the key should be created for.",
                "description_kind": "markdown",
                "required": true
              },
              "project": {
                "type": "string",
                "description": "The slug of the project the key should be created for.",
                "description_kind": "markdown",
                "required": true
              },
              "project_id": {
                "type": "string",
                "description": "The ID of the project that the key belongs to.",
                "description_kind": "markdown",
                "computed": true
              },
              "public": {
                "type": "string",
                "description": "Public key portion of the client key.",
                "description_kind": "markdown",
                "computed": true
              },
              "rate_limit_count": {
                "type": "number",
                "description": "Number of events that can be reported within the rate limit window.",
                "description_kind": "markdown",
                "computed": true
              },
              "rate_limit_window": {
                "type": "number",
                "description": "Length of time that will be considered when checking the rate limit.",
                "description_kind": "markdown",
                "computed": true
              },
              "secret": {
                "type": "string",
                "description": "Secret key portion of the client key.",
                "description_kind": "markdown",
                "computed": true
              }
            },
            "description": "Sentry Key data source.",
            "description_kind": "markdown"
          }
        },
        "sentry_metric_alert": {
          "version": 0,
          "block": {
            "attributes": {
              "aggregate": {
                "type": "string",
                "description_kind": "plain",
                "computed": true
              },
              "dataset": {
                "type": "string",
                "description_kind": "plain",
                "computed": true
              },
              "environment": {
                "type": "string",
                "description_kind": "plain",
                "computed": true
              },
              "event_types": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "The events type of dataset.",
                "description_kind": "markdown",
                "computed": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "internal_id": {
                "type": "string",
                "description": "The internal ID for this metric alert.",
                "description_kind": "markdown",
                "required": true
              },
              "name": {
                "type": "string",
                "description": "The metric alert name.",
                "description_kind": "markdown",
                "computed": true
              },
              "organization": {
                "type": "string",
                "description": "The slug of the organization the metric alert belongs to.",
                "description_kind": "markdown",
                "required": true
              },
              "owner": {
                "type": "string",
                "description_kind": "plain",
                "computed": true
              },
              "project": {
                "type": "string",
                "description": "The slug of the project the metric alert belongs to.",
                "description_kind": "markdown",
                "required": true
              },
              "query": {
                "type": "string",
                "description_kind": "plain",
                "computed": true
              },
              "resolve_threshold": {
                "type": "number",
                "description_kind": "plain",
                "computed": true
              },
              "threshold_type": {
                "type": "number",
                "description_kind": "plain",
                "computed": true
              },
              "time_window": {
                "type": "number",
                "description_kind": "plain",
                "computed": true
              },
              "trigger": {
                "type": [
                  "list",
                  [
                    "object",
                    {
                      "action": [
                        "list",
                        [
                          "object",
                          {
                            "id": "string",
                            "input_channel_id": "string",
                            "integration_id": "number",
                            "target_identifier": "string",
                            "target_type": "string",
                            "type": "string"
                          }
                        ]
                      ],
                      "alert_threshold": "number",
                      "id": "string",
                      "label": "string",
                      "resolve_threshold": "number",
                      "threshold_type": "number"
                    }
                  ]
                ],
                "description_kind": "plain",
                "computed": true
              }
            },
            "description_kind": "plain"
          }
        },
        "sentry_organization": {
          "version": 0,
          "block": {
            "attributes": {
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "internal_id": {
                "type": "string",
                "description": "The internal ID for this organization.",
                "description_kind": "markdown",
                "computed": true
              },
              "name": {
                "type": "string",
                "description": "The human readable name for this organization.",
                "description_kind": "markdown",
                "computed": true
              },
              "slug": {
                "type": "string",
                "description": "The unique URL slug for this organization.",
                "description_kind": "markdown",
                "required": true
              }
            },
            "description": "Sentry Organization data source.",
            "description_kind": "markdown"
          }
        },
        "sentry_organization_integration": {
          "version": 0,
          "block": {
            "attributes": {
              "id": {
                "type": "string",
                "description": "The ID of this resource.",
                "description_kind": "plain",
                "computed": true
              },
              "internal_id": {
                "type": "string",
                "description": "The internal ID for this organization integration. **Deprecated** Use `id` instead.",
                "description_kind": "markdown",
                "deprecated": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "description": "The name of the integration.",
                "description_kind": "plain",
                "required": true
              },
              "organization": {
                "type": "string",
                "description": "The slug of the organization.",
                "description_kind": "plain",
                "required": true
              },
              "provider_key": {
                "type": "string",
                "description": "Specific integration provider to filter by such as `slack`. See [the list of supported providers](https://docs.sentry.io/product/integrations/).",
                "description_kind": "plain",
                "required": true
              }
            },
            "description": "Sentry Organization Integration data source. See the [Sentry documentation](https://docs.sentry.io/api/integrations/list-an-organizations-available-integrations/) for more information.",
            "description_kind": "markdown"
          }
        },
        "sentry_organization_member": {
          "version": 0,
          "block": {
            "attributes": {
              "email": {
                "type": "string",
                "description": "The email of the organization member.",
                "description_kind": "markdown",
                "required": true
              },
              "id": {
                "type": "string",
                "description": "The ID of this resource.",
                "description_kind": "markdown",
                "computed": true
              },
              "organization": {
                "type": "string",
                "description": "The slug of the organization.",
                "description_kind": "markdown",
                "required": true
              },
              "role": {
                "type": "string",
                "description": "This is the role of the organization member.",
                "description_kind": "markdown",
                "computed": true
              }
            },
            "description": "Retrieve an organization member by email.",
            "description_kind": "markdown"
          }
        },
        "sentry_project": {
          "version": 0,
          "block": {
            "attributes": {
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "internal_id": {
                "type": "string",
                "description": "The internal ID for this project.",
                "description_kind": "markdown",
                "computed": true
              },
              "is_public": {
                "type": "bool",
                "description_kind": "plain",
                "computed": true
              },
              "organization": {
                "type": "string",
                "description": "The slug of the organization the project belongs to.",
                "description_kind": "markdown",
                "required": true
              },
              "slug": {
                "type": "string",
                "description": "The unique URL slug for this project.",
                "description_kind": "markdown",
                "required": true
              }
            },
            "description": "Sentry Project data source.",
            "description_kind": "markdown"
          }
        },
        "sentry_team": {
          "version": 0,
          "block": {
            "attributes": {
              "has_access": {
                "type": "bool",
                "description_kind": "plain",
                "computed": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "internal_id": {
                "type": "string",
                "description": "The internal ID for this team.",
                "description_kind": "markdown",
                "computed": true
              },
              "is_member": {
                "type": "bool",
                "description_kind": "plain",
                "computed": true
              },
              "is_pending": {
                "type": "bool",
                "description_kind": "plain",
                "computed": true
              },
              "name": {
                "type": "string",
                "description": "The human readable name for this organization.",
                "description_kind": "markdown",
                "computed": true
              },
              "organization": {
                "type": "string",
                "description": "The slug of the organization the team should be created for.",
                "description_kind": "markdown",
                "required": true
              },
              "slug": {
                "type": "string",
                "description": "The unique URL slug for this team.",
                "description_kind": "markdown",
                "required": true
              }
            },
            "description": "Sentry Team data source.",
            "description_kind": "markdown"
          }
        }
      }
    }
  }
}
