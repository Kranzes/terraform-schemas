{
  "format_version": "1.0",
  "provider_schemas": {
    "registry.terraform.io/exoscale/exoscale": {
      "provider": {
        "version": 0,
        "block": {
          "attributes": {
            "compute_endpoint": {
              "type": "string",
              "description": "Exoscale CloudStack API endpoint (by default: https://api.exoscale.com/v1)",
              "description_kind": "markdown",
              "optional": true
            },
            "config": {
              "type": "string",
              "description": "CloudStack ini configuration filename (by default: cloudstack.ini)",
              "description_kind": "markdown",
              "optional": true
            },
            "delay": {
              "type": "number",
              "description_kind": "plain",
              "deprecated": true,
              "optional": true
            },
            "dns_endpoint": {
              "type": "string",
              "description": "Exoscale DNS API endpoint (by default: https://api.exoscale.com/dns)",
              "description_kind": "markdown",
              "optional": true
            },
            "environment": {
              "type": "string",
              "description_kind": "plain",
              "optional": true
            },
            "key": {
              "type": "string",
              "description": "Exoscale API key",
              "description_kind": "markdown",
              "optional": true
            },
            "profile": {
              "type": "string",
              "description_kind": "plain",
              "deprecated": true,
              "optional": true
            },
            "region": {
              "type": "string",
              "description": "CloudStack ini configuration section name (by default: cloudstack)",
              "description_kind": "markdown",
              "optional": true
            },
            "secret": {
              "type": "string",
              "description": "Exoscale API secret",
              "description_kind": "markdown",
              "optional": true,
              "sensitive": true
            },
            "timeout": {
              "type": "number",
              "description": "Timeout in seconds for waiting on compute resources to become available (by default: 300)",
              "description_kind": "markdown",
              "optional": true
            },
            "token": {
              "type": "string",
              "description_kind": "plain",
              "deprecated": true,
              "optional": true
            }
          },
          "description_kind": "plain"
        }
      },
      "resource_schemas": {
        "exoscale_affinity": {
          "version": 0,
          "block": {
            "attributes": {
              "description": {
                "type": "string",
                "description": "❗ A free-form text describing the group.",
                "description_kind": "markdown",
                "optional": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "description": "❗ The anti-affinity group name.",
                "description_kind": "markdown",
                "required": true
              },
              "type": {
                "type": "string",
                "description": "❗ The type of the group (`host anti-affinity` is the only supported value).",
                "description_kind": "markdown",
                "optional": true
              },
              "virtual_machine_ids": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "The compute instances (IDs) members of the group.",
                "description_kind": "markdown",
                "computed": true
              }
            },
            "block_types": {
              "timeouts": {
                "nesting_mode": "single",
                "block": {
                  "attributes": {
                    "create": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "delete": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "read": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true
                    }
                  },
                  "description_kind": "plain"
                }
              }
            },
            "description": "Manage Exoscale Anti-Affinity Groups.",
            "description_kind": "markdown",
            "deprecated": true
          }
        },
        "exoscale_anti_affinity_group": {
          "version": 0,
          "block": {
            "attributes": {
              "description": {
                "type": "string",
                "description": "❗ A free-form text describing the group.",
                "description_kind": "markdown",
                "optional": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "description": "❗ The anti-affinity group name.",
                "description_kind": "markdown",
                "required": true
              }
            },
            "block_types": {
              "timeouts": {
                "nesting_mode": "single",
                "block": {
                  "attributes": {
                    "create": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "delete": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "read": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true
                    }
                  },
                  "description_kind": "plain"
                }
              }
            },
            "description": "Manage Exoscale [Anti-Affinity Groups](https://community.exoscale.com/documentation/compute/anti-affinity-groups/).\n\nCorresponding data source: [exoscale_anti_affinity_group](../data-sources/anti_affinity_group.md).",
            "description_kind": "markdown"
          }
        },
        "exoscale_compute": {
          "version": 0,
          "block": {
            "attributes": {
              "affinity_group_ids": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "❗ A list of anti-affinity groups (IDs; at creation time only; conflicts with `affinity_groups`).",
                "description_kind": "markdown",
                "optional": true,
                "computed": true
              },
              "affinity_groups": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "❗ A list of anti-affinity groups (names; at creation time only; conflicts with `affinity_group_ids`).",
                "description_kind": "markdown",
                "optional": true,
                "computed": true
              },
              "disk_size": {
                "type": "number",
                "description": "The instance disk size (GiB; at least `10`).",
                "description_kind": "markdown",
                "required": true
              },
              "display_name": {
                "type": "string",
                "description": "The displayed instance name. Note: if the `hostname` attribute is not set, this attribute is also used to set the OS' *hostname* during creation, so the value must contain only alphanumeric and hyphen (\" - \") characters; it can be changed to any character during a later update. If neither `display_name` or `hostname` attributes are set, a random value will be generated automatically.",
                "description_kind": "markdown",
                "optional": true,
                "computed": true
              },
              "gateway": {
                "type": "string",
                "description_kind": "plain",
                "computed": true
              },
              "hostname": {
                "type": "string",
                "description": "The instance hostname, must contain only alphanumeric and hyphen (`-`) characters. If neither `display_name` or `hostname` attributes are set, a random value will be generated automatically. Note: updating this attribute's value requires to reboot the instance.",
                "description_kind": "markdown",
                "optional": true,
                "computed": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "ip4": {
                "type": "bool",
                "description": "Request an IPv4 address on the default NIC",
                "description_kind": "markdown",
                "optional": true
              },
              "ip6": {
                "type": "bool",
                "description": "Request an IPv6 address on the default NIC",
                "description_kind": "markdown",
                "optional": true
              },
              "ip6_address": {
                "type": "string",
                "description": "The instance (main network interface) IPv6 address (if enabled).",
                "description_kind": "markdown",
                "computed": true
              },
              "ip6_cidr": {
                "type": "string",
                "description_kind": "plain",
                "computed": true
              },
              "ip_address": {
                "type": "string",
                "description": "The instance (main network interface) IPv4 address.",
                "description_kind": "markdown",
                "computed": true
              },
              "key_pair": {
                "type": "string",
                "description": "❗ The SSH keypair (name) to authorize in the instance.",
                "description_kind": "markdown",
                "optional": true
              },
              "keyboard": {
                "type": "string",
                "description": "The keyboard layout configuration (`de`, `de-ch`, `es`, `fi`, `fr`, `fr-be`, `fr-ch`, `is`, `it`, `jp`, `nl-be`, `no`, `pt`, `uk`, `us`; at creation time only).",
                "description_kind": "markdown",
                "optional": true
              },
              "name": {
                "type": "string",
                "description": "The instance hostname. Please use the `hostname` argument instead.",
                "description_kind": "markdown",
                "deprecated": true,
                "computed": true
              },
              "password": {
                "type": "string",
                "description": "The instance initial password and/or encrypted password.",
                "description_kind": "markdown",
                "computed": true,
                "sensitive": true
              },
              "reverse_dns": {
                "type": "string",
                "description": "The instance reverse DNS record (must end with a `.`; e.g: `my-instance.example.net.`).",
                "description_kind": "markdown",
                "optional": true
              },
              "security_group_ids": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "A list of security groups (IDs; conflicts with `security_groups`).",
                "description_kind": "markdown",
                "optional": true,
                "computed": true
              },
              "security_groups": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "A list of security groups (names; conflicts with `security_group_ids`).",
                "description_kind": "markdown",
                "optional": true,
                "computed": true
              },
              "size": {
                "type": "string",
                "description": "The instance size (`Tiny`, `Small`, `Medium`, `Large`, etc.)",
                "description_kind": "markdown",
                "optional": true
              },
              "state": {
                "type": "string",
                "description": "The instance state (`Running` or `Stopped`; default: `Running`)",
                "description_kind": "markdown",
                "optional": true,
                "computed": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "description": "Map of tags (key/value). To remove all tags, set `tags = {}`.",
                "description_kind": "markdown",
                "optional": true,
                "computed": true
              },
              "template": {
                "type": "string",
                "description": "❗ The compute instance template (name). Only *featured* templates are available, if you want to reference *custom templates* use the `template_id` attribute instead.",
                "description_kind": "markdown",
                "optional": true,
                "computed": true
              },
              "template_id": {
                "type": "string",
                "description": "❗ The compute instance template (ID). Usage of the `exoscale_compute_template` data source is recommended.",
                "description_kind": "markdown",
                "optional": true,
                "computed": true
              },
              "user_data": {
                "type": "string",
                "description": "cloud-init configuration.",
                "description_kind": "markdown",
                "optional": true
              },
              "user_data_base64": {
                "type": "bool",
                "description": "was the cloud-init configuration base64 encoded",
                "description_kind": "markdown",
                "computed": true
              },
              "username": {
                "type": "string",
                "description": "The user to use to connect to the instance. If you've referenced a *custom template* in the resource, use the `exoscale_compute_template` data source `username` attribute instead.",
                "description_kind": "markdown",
                "deprecated": true,
                "computed": true
              },
              "zone": {
                "type": "string",
                "description": "❗ The Exoscale Zone name.",
                "description_kind": "markdown",
                "required": true
              }
            },
            "block_types": {
              "timeouts": {
                "nesting_mode": "single",
                "block": {
                  "attributes": {
                    "create": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "delete": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "read": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "update": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true
                    }
                  },
                  "description_kind": "plain"
                }
              }
            },
            "description": "Manage Exoscale Compute Instances.",
            "description_kind": "markdown",
            "deprecated": true
          }
        },
        "exoscale_compute_instance": {
          "version": 0,
          "block": {
            "attributes": {
              "anti_affinity_group_ids": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "❗ A list of [exoscale_anti_affinity_group](./anti_affinity_group.md) (IDs) to attach to the instance (may only be set at creation time).",
                "description_kind": "markdown",
                "optional": true
              },
              "created_at": {
                "type": "string",
                "description": "The instance creation date.",
                "description_kind": "markdown",
                "computed": true
              },
              "deploy_target_id": {
                "type": "string",
                "description": "❗ A deploy target ID.",
                "description_kind": "markdown",
                "optional": true
              },
              "disk_size": {
                "type": "number",
                "description": "The instance disk size (GiB; at least `10`). **WARNING**: updating this attribute stops/restarts the instance.",
                "description_kind": "markdown",
                "optional": true,
                "computed": true
              },
              "elastic_ip_ids": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "A list of [exoscale_elastic_ip](./elastic_ip.md) (IDs) to attach to the instance.",
                "description_kind": "markdown",
                "optional": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "ipv6": {
                "type": "bool",
                "description": "Enable IPv6 on the instance (boolean; default: `false`).",
                "description_kind": "markdown",
                "optional": true
              },
              "ipv6_address": {
                "type": "string",
                "description": "The instance (main network interface) IPv6 address (if enabled).",
                "description_kind": "markdown",
                "computed": true
              },
              "labels": {
                "type": [
                  "map",
                  "string"
                ],
                "description": "A map of key/value labels.",
                "description_kind": "markdown",
                "optional": true
              },
              "name": {
                "type": "string",
                "description": "The compute instance name.",
                "description_kind": "markdown",
                "required": true
              },
              "private": {
                "type": "bool",
                "description": "Whether the instance is private (no public IP addresses; default: false)",
                "description_kind": "markdown",
                "optional": true
              },
              "private_network_ids": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "A list of private networks (IDs) attached to the instance. Please use the `network_interface.*.network_id` argument instead.",
                "description_kind": "markdown",
                "deprecated": true,
                "computed": true
              },
              "public_ip_address": {
                "type": "string",
                "description": "The instance (main network interface) IPv4 address.",
                "description_kind": "markdown",
                "computed": true
              },
              "reverse_dns": {
                "type": "string",
                "description": "Domain name for reverse DNS record.",
                "description_kind": "markdown",
                "optional": true
              },
              "security_group_ids": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "A list of [exoscale_security_group](./security_group.md) (IDs) to attach to the instance.",
                "description_kind": "markdown",
                "optional": true
              },
              "ssh_key": {
                "type": "string",
                "description": "The [exoscale_ssh_key](./ssh_key.md) (name) to authorize in the instance (may only be set at creation time).",
                "description_kind": "markdown",
                "optional": true
              },
              "state": {
                "type": "string",
                "description": "The instance state (`running` or `stopped`; default: `running`).",
                "description_kind": "markdown",
                "optional": true,
                "computed": true
              },
              "template_id": {
                "type": "string",
                "description": "❗ The [exoscale_compute_template](../data-sources/compute_template.md) (ID) to use when creating the instance.",
                "description_kind": "markdown",
                "required": true
              },
              "type": {
                "type": "string",
                "description": "The instance type (`<family>.<size>`, e.g. `standard.medium`; use the [Exoscale CLI](https://github.com/exoscale/cli/) - `exo compute instance-type list` - for the list of available types). **WARNING**: updating this attribute stops/restarts the instance.",
                "description_kind": "markdown",
                "required": true
              },
              "user_data": {
                "type": "string",
                "description": "[cloud-init](https://cloudinit.readthedocs.io/) configuration.",
                "description_kind": "markdown",
                "optional": true
              },
              "zone": {
                "type": "string",
                "description": "❗ The Exoscale [Zone](https://www.exoscale.com/datacenters/) name.",
                "description_kind": "markdown",
                "required": true
              }
            },
            "block_types": {
              "network_interface": {
                "nesting_mode": "set",
                "block": {
                  "attributes": {
                    "ip_address": {
                      "type": "string",
                      "description": "The IPv4 address to request as static DHCP lease if the network interface is attached to a *managed* private network.",
                      "description_kind": "markdown",
                      "optional": true,
                      "computed": true
                    },
                    "network_id": {
                      "type": "string",
                      "description": "The [exoscale_private_network](./private_network.md) (ID) to attach to the instance.",
                      "description_kind": "markdown",
                      "required": true
                    }
                  },
                  "description": "Private network interfaces (may be specified multiple times). Structure is documented below.",
                  "description_kind": "markdown"
                }
              },
              "timeouts": {
                "nesting_mode": "single",
                "block": {
                  "attributes": {
                    "create": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "delete": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "read": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "update": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true
                    }
                  },
                  "description_kind": "plain"
                }
              }
            },
            "description": "Manage Exoscale [Compute Instances](https://community.exoscale.com/documentation/compute/).\n\nCorresponding data sources: [exoscale_compute_instance](../data-sources/compute_instance.md), [exoscale_compute_instance_list](../data-sources/compute_instance_list.md).\n\nAfter the creation, you can retrieve the password of an instance with [Exoscale CLI](https://github.com/exoscale/cli): `exo compute instance reveal-password NAME`.",
            "description_kind": "markdown"
          }
        },
        "exoscale_database": {
          "version": 1,
          "block": {
            "attributes": {
              "ca_certificate": {
                "type": "string",
                "description": "CA Certificate required to reach a DBaaS service through a TLS-protected connection.",
                "description_kind": "markdown",
                "computed": true
              },
              "created_at": {
                "type": "string",
                "description": "The creation date of the database service.",
                "description_kind": "markdown",
                "computed": true
              },
              "disk_size": {
                "type": "number",
                "description": "The disk size of the database service.",
                "description_kind": "markdown",
                "computed": true
              },
              "id": {
                "type": "string",
                "description": "The ID of this resource.",
                "description_kind": "markdown",
                "computed": true
              },
              "maintenance_dow": {
                "type": "string",
                "description": "The day of week to perform the automated database service maintenance (`never`, `monday`, `tuesday`, `wednesday`, `thursday`, `friday`, `saturday`, `sunday`).",
                "description_kind": "markdown",
                "optional": true,
                "computed": true
              },
              "maintenance_time": {
                "type": "string",
                "description": "The time of day to perform the automated database service maintenance (`HH:MM:SS`)",
                "description_kind": "markdown",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "description": "❗ The name of the database service.",
                "description_kind": "markdown",
                "required": true
              },
              "node_cpus": {
                "type": "number",
                "description": "The number of CPUs of the database service.",
                "description_kind": "markdown",
                "computed": true
              },
              "node_memory": {
                "type": "number",
                "description": "The amount of memory of the database service.",
                "description_kind": "markdown",
                "computed": true
              },
              "nodes": {
                "type": "number",
                "description": "The number of nodes of the database service.",
                "description_kind": "markdown",
                "computed": true
              },
              "plan": {
                "type": "string",
                "description": "The plan of the database service (use the [Exoscale CLI](https://github.com/exoscale/cli/) - `exo dbaas type show <TYPE> --plans` - for reference).",
                "description_kind": "markdown",
                "required": true
              },
              "state": {
                "type": "string",
                "description": "The current state of the database service.",
                "description_kind": "markdown",
                "computed": true
              },
              "termination_protection": {
                "type": "bool",
                "description": "The database service protection boolean flag against termination/power-off.",
                "description_kind": "markdown",
                "optional": true,
                "computed": true
              },
              "type": {
                "type": "string",
                "description": "❗ The type of the database service (`kafka`, `mysql`, `opensearch`, `pg`, `redis`, `grafana`).",
                "description_kind": "markdown",
                "required": true
              },
              "updated_at": {
                "type": "string",
                "description": "The date of the latest database service update.",
                "description_kind": "markdown",
                "computed": true
              },
              "zone": {
                "type": "string",
                "description": "❗ The Exoscale [Zone](https://www.exoscale.com/datacenters/) name.",
                "description_kind": "markdown",
                "required": true
              }
            },
            "block_types": {
              "grafana": {
                "nesting_mode": "single",
                "block": {
                  "attributes": {
                    "grafana_settings": {
                      "type": "string",
                      "description": "Grafana configuration settings in JSON format (`exo dbaas type show grafana --settings=grafana` for reference).",
                      "description_kind": "markdown",
                      "optional": true,
                      "computed": true
                    },
                    "ip_filter": {
                      "type": [
                        "set",
                        "string"
                      ],
                      "description": "A list of CIDR blocks to allow incoming connections from.",
                      "description_kind": "markdown",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "description": "*grafana* database service type specific arguments. Structure is documented below.",
                  "description_kind": "markdown"
                }
              },
              "kafka": {
                "nesting_mode": "single",
                "block": {
                  "attributes": {
                    "enable_cert_auth": {
                      "type": "bool",
                      "description": "Enable certificate-based authentication method.",
                      "description_kind": "markdown",
                      "optional": true,
                      "computed": true
                    },
                    "enable_kafka_connect": {
                      "type": "bool",
                      "description": "Enable Kafka Connect.",
                      "description_kind": "markdown",
                      "optional": true,
                      "computed": true
                    },
                    "enable_kafka_rest": {
                      "type": "bool",
                      "description": "Enable Kafka REST.",
                      "description_kind": "markdown",
                      "optional": true,
                      "computed": true
                    },
                    "enable_sasl_auth": {
                      "type": "bool",
                      "description": "Enable SASL-based authentication method.",
                      "description_kind": "markdown",
                      "optional": true,
                      "computed": true
                    },
                    "enable_schema_registry": {
                      "type": "bool",
                      "description": "Enable Schema Registry.",
                      "description_kind": "markdown",
                      "optional": true,
                      "computed": true
                    },
                    "ip_filter": {
                      "type": [
                        "set",
                        "string"
                      ],
                      "description": "A list of CIDR blocks to allow incoming connections from.",
                      "description_kind": "markdown",
                      "optional": true,
                      "computed": true
                    },
                    "kafka_connect_settings": {
                      "type": "string",
                      "description": "Kafka Connect configuration settings in JSON format (`exo dbaas type show kafka --settings=kafka-connect` for reference).",
                      "description_kind": "markdown",
                      "optional": true,
                      "computed": true
                    },
                    "kafka_rest_settings": {
                      "type": "string",
                      "description": "Kafka REST configuration settings in JSON format (`exo dbaas type show kafka --settings=kafka-rest` for reference).",
                      "description_kind": "markdown",
                      "optional": true,
                      "computed": true
                    },
                    "kafka_settings": {
                      "type": "string",
                      "description": "Kafka configuration settings in JSON format (`exo dbaas type show kafka --settings=kafka` for reference).",
                      "description_kind": "markdown",
                      "optional": true,
                      "computed": true
                    },
                    "schema_registry_settings": {
                      "type": "string",
                      "description": "Schema Registry configuration settings in JSON format (`exo dbaas type show kafka --settings=schema-registry` for reference)",
                      "description_kind": "markdown",
                      "optional": true,
                      "computed": true
                    },
                    "version": {
                      "type": "string",
                      "description": "Kafka major version (`exo dbaas type show kafka` for reference; may only be set at creation time).",
                      "description_kind": "markdown",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "description": "*kafka* database service type specific arguments. Structure is documented below.",
                  "description_kind": "markdown"
                }
              },
              "mysql": {
                "nesting_mode": "single",
                "block": {
                  "attributes": {
                    "admin_password": {
                      "type": "string",
                      "description": "A custom administrator account password (may only be set at creation time).",
                      "description_kind": "markdown",
                      "optional": true,
                      "sensitive": true
                    },
                    "admin_username": {
                      "type": "string",
                      "description": "A custom administrator account username (may only be set at creation time).",
                      "description_kind": "markdown",
                      "optional": true
                    },
                    "backup_schedule": {
                      "type": "string",
                      "description": "The automated backup schedule (`HH:MM`).",
                      "description_kind": "markdown",
                      "optional": true,
                      "computed": true
                    },
                    "ip_filter": {
                      "type": [
                        "set",
                        "string"
                      ],
                      "description": "A list of CIDR blocks to allow incoming connections from.",
                      "description_kind": "markdown",
                      "optional": true,
                      "computed": true
                    },
                    "mysql_settings": {
                      "type": "string",
                      "description": "MySQL configuration settings in JSON format (`exo dbaas type show mysql --settings=mysql` for reference).",
                      "description_kind": "markdown",
                      "optional": true,
                      "computed": true
                    },
                    "version": {
                      "type": "string",
                      "description": "MySQL major version (`exo dbaas type show mysql` for reference; may only be set at creation time).",
                      "description_kind": "markdown",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "description": "*mysql* database service type specific arguments. Structure is documented below.",
                  "description_kind": "markdown"
                }
              },
              "opensearch": {
                "nesting_mode": "single",
                "block": {
                  "attributes": {
                    "fork_from_service": {
                      "type": "string",
                      "description": "❗ Service name",
                      "description_kind": "markdown",
                      "optional": true
                    },
                    "ip_filter": {
                      "type": [
                        "set",
                        "string"
                      ],
                      "description": "Allow incoming connections from this list of CIDR address block, e.g. `[\"10.20.0.0/16\"]",
                      "description_kind": "markdown",
                      "optional": true,
                      "computed": true
                    },
                    "keep_index_refresh_interval": {
                      "type": "bool",
                      "description": "Aiven automation resets index.refresh_interval to default value for every index to be sure that indices are always visible to search. If it doesn't fit your case, you can disable this by setting up this flag to true.",
                      "description_kind": "markdown",
                      "optional": true
                    },
                    "max_index_count": {
                      "type": "number",
                      "description": "Maximum number of indexes to keep (Minimum value is `0`)",
                      "description_kind": "markdown",
                      "optional": true
                    },
                    "recovery_backup_name": {
                      "type": "string",
                      "description": "❗ Name of a backup to recover from",
                      "description_kind": "markdown",
                      "optional": true
                    },
                    "settings": {
                      "type": "string",
                      "description": "OpenSearch-specific settings, in json. e.g.`jsonencode({thread_pool_search_size: 64})`. Use `exo x get-dbaas-settings-opensearch` to get a list of available settings.",
                      "description_kind": "markdown",
                      "optional": true,
                      "computed": true
                    },
                    "version": {
                      "type": "string",
                      "description": "❗ OpenSearch major version (`exo dbaas type show opensearch` for reference)",
                      "description_kind": "markdown",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "block_types": {
                    "dashboards": {
                      "nesting_mode": "single",
                      "block": {
                        "attributes": {
                          "enabled": {
                            "type": "bool",
                            "description": "Enable or disable OpenSearch Dashboards (default: true).",
                            "description_kind": "markdown",
                            "optional": true
                          },
                          "max_old_space_size": {
                            "type": "number",
                            "description": "Limits the maximum amount of memory (in MiB) the OpenSearch Dashboards process can use. This sets the max_old_space_size option of the nodejs running the OpenSearch Dashboards. Note: the memory reserved by OpenSearch Dashboards is not available for OpenSearch. (default: 128).",
                            "description_kind": "markdown",
                            "optional": true
                          },
                          "request_timeout": {
                            "type": "number",
                            "description": "Timeout in milliseconds for requests made by OpenSearch Dashboards towards OpenSearch (default: 30000)",
                            "description_kind": "markdown",
                            "optional": true
                          }
                        },
                        "description": "OpenSearch Dashboards settings",
                        "description_kind": "markdown"
                      }
                    },
                    "index_pattern": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "max_index_count": {
                            "type": "number",
                            "description": "Maximum number of indexes to keep before deleting the oldest one (Minimum value is `0`)",
                            "description_kind": "markdown",
                            "optional": true
                          },
                          "pattern": {
                            "type": "string",
                            "description": "fnmatch pattern",
                            "description_kind": "markdown",
                            "optional": true
                          },
                          "sorting_algorithm": {
                            "type": "string",
                            "description": "`alphabetical` or `creation_date`.",
                            "description_kind": "markdown",
                            "optional": true
                          }
                        },
                        "description": "(can be used multiple times) Allows you to create glob style patterns and set a max number of indexes matching this pattern you want to keep. Creating indexes exceeding this value will cause the oldest one to get deleted. You could for example create a pattern looking like 'logs.?' and then create index logs.1, logs.2 etc, it will delete logs.1 once you create logs.6. Do note 'logs.?' does not apply to logs.10. Note: Setting max_index_count to 0 will do nothing and the pattern gets ignored.",
                        "description_kind": "markdown"
                      }
                    },
                    "index_template": {
                      "nesting_mode": "single",
                      "block": {
                        "attributes": {
                          "mapping_nested_objects_limit": {
                            "type": "number",
                            "description": "The maximum number of nested JSON objects that a single document can contain across all nested types. This limit helps to prevent out of memory errors when a document contains too many nested objects. (Default is 10000. Minimum value is `0`, maximum value is `100000`.)",
                            "description_kind": "markdown",
                            "optional": true
                          },
                          "number_of_replicas": {
                            "type": "number",
                            "description": "The number of replicas each primary shard has. (Minimum value is `0`, maximum value is `29`)",
                            "description_kind": "markdown",
                            "optional": true
                          },
                          "number_of_shards": {
                            "type": "number",
                            "description": "The number of primary shards that an index should have. (Minimum value is `1`, maximum value is `1024`.)",
                            "description_kind": "markdown",
                            "optional": true
                          }
                        },
                        "description": "Template settings for all new indexes",
                        "description_kind": "markdown"
                      }
                    }
                  },
                  "description": "*opensearch* database service type specific arguments. Structure is documented below.",
                  "description_kind": "markdown"
                }
              },
              "pg": {
                "nesting_mode": "single",
                "block": {
                  "attributes": {
                    "admin_password": {
                      "type": "string",
                      "description": "A custom administrator account password (may only be set at creation time).",
                      "description_kind": "markdown",
                      "optional": true,
                      "sensitive": true
                    },
                    "admin_username": {
                      "type": "string",
                      "description": "A custom administrator account username (may only be set at creation time).",
                      "description_kind": "markdown",
                      "optional": true
                    },
                    "backup_schedule": {
                      "type": "string",
                      "description": "The automated backup schedule (`HH:MM`).",
                      "description_kind": "markdown",
                      "optional": true,
                      "computed": true
                    },
                    "ip_filter": {
                      "type": [
                        "set",
                        "string"
                      ],
                      "description": "A list of CIDR blocks to allow incoming connections from.",
                      "description_kind": "markdown",
                      "optional": true,
                      "computed": true
                    },
                    "pg_settings": {
                      "type": "string",
                      "description": "PostgreSQL configuration settings in JSON format (`exo dbaas type show pg --settings=pg` for reference).",
                      "description_kind": "markdown",
                      "optional": true,
                      "computed": true
                    },
                    "pgbouncer_settings": {
                      "type": "string",
                      "description": "PgBouncer configuration settings in JSON format (`exo dbaas type show pg --settings=pgbouncer` for reference).",
                      "description_kind": "markdown",
                      "optional": true,
                      "computed": true
                    },
                    "pglookout_settings": {
                      "type": "string",
                      "description": "pglookout configuration settings in JSON format (`exo dbaas type show pg --settings=pglookout` for reference).",
                      "description_kind": "markdown",
                      "optional": true,
                      "computed": true
                    },
                    "version": {
                      "type": "string",
                      "description": "PostgreSQL major version (`exo dbaas type show pg` for reference; may only be set at creation time).",
                      "description_kind": "markdown",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "description": "*pg* database service type specific arguments. Structure is documented below.",
                  "description_kind": "markdown"
                }
              },
              "redis": {
                "nesting_mode": "single",
                "block": {
                  "attributes": {
                    "ip_filter": {
                      "type": [
                        "set",
                        "string"
                      ],
                      "description": "A list of CIDR blocks to allow incoming connections from.",
                      "description_kind": "markdown",
                      "optional": true,
                      "computed": true
                    },
                    "redis_settings": {
                      "type": "string",
                      "description": "Redis configuration settings in JSON format (`exo dbaas type show redis --settings=redis` for reference).",
                      "description_kind": "markdown",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "description": "*redis* database service type specific arguments. Structure is documented below.",
                  "description_kind": "markdown"
                }
              },
              "timeouts": {
                "nesting_mode": "single",
                "block": {
                  "attributes": {
                    "create": {
                      "type": "string",
                      "description": "A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as \"30s\" or \"2h45m\". Valid time units are \"s\" (seconds), \"m\" (minutes), \"h\" (hours).",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "delete": {
                      "type": "string",
                      "description": "A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as \"30s\" or \"2h45m\". Valid time units are \"s\" (seconds), \"m\" (minutes), \"h\" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "read": {
                      "type": "string",
                      "description": "A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as \"30s\" or \"2h45m\". Valid time units are \"s\" (seconds), \"m\" (minutes), \"h\" (hours). Read operations occur during any refresh or planning operation when refresh is enabled.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "update": {
                      "type": "string",
                      "description": "A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as \"30s\" or \"2h45m\". Valid time units are \"s\" (seconds), \"m\" (minutes), \"h\" (hours).",
                      "description_kind": "plain",
                      "optional": true
                    }
                  },
                  "description_kind": "plain"
                }
              }
            },
            "description": "Manage Exoscale [Database Services (DBaaS)](https://community.exoscale.com/documentation/dbaas/).",
            "description_kind": "markdown"
          }
        },
        "exoscale_domain": {
          "version": 1,
          "block": {
            "attributes": {
              "auto_renew": {
                "type": "bool",
                "description": "Whether the DNS domain has automatic renewal enabled (boolean).",
                "description_kind": "markdown",
                "deprecated": true,
                "computed": true
              },
              "expires_on": {
                "type": "string",
                "description": "The domain expiration date, if known.",
                "description_kind": "markdown",
                "deprecated": true,
                "computed": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "description": "❗ The DNS domain name.",
                "description_kind": "markdown",
                "required": true
              },
              "state": {
                "type": "string",
                "description": "The domain state.",
                "description_kind": "markdown",
                "deprecated": true,
                "computed": true
              },
              "token": {
                "type": "string",
                "description": "A security token that can be used as an alternative way to manage DNS domains via the Exoscale API.",
                "description_kind": "markdown",
                "deprecated": true,
                "computed": true
              }
            },
            "block_types": {
              "timeouts": {
                "nesting_mode": "single",
                "block": {
                  "attributes": {
                    "create": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "delete": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "read": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true
                    }
                  },
                  "description_kind": "plain"
                }
              }
            },
            "description": "Manage Exoscale DNS Domains.",
            "description_kind": "markdown"
          }
        },
        "exoscale_domain_record": {
          "version": 1,
          "block": {
            "attributes": {
              "content": {
                "type": "string",
                "description": "The record value.",
                "description_kind": "markdown",
                "required": true
              },
              "domain": {
                "type": "string",
                "description": "❗ The parent [exoscale_domain](./domain.md) to attach the record to.",
                "description_kind": "markdown",
                "required": true
              },
              "hostname": {
                "type": "string",
                "description": "The record *Fully Qualified Domain Name* (FQDN). Useful for aliasing `A`/`AAAA` records with `CNAME`.",
                "description_kind": "markdown",
                "computed": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "description": "The record name, Leave blank (`\"\"`) to create a root record (similar to using `@` in a DNS zone file).",
                "description_kind": "markdown",
                "required": true
              },
              "prio": {
                "type": "number",
                "description": "The record priority (for types that support it; minimum `0`).",
                "description_kind": "markdown",
                "optional": true,
                "computed": true
              },
              "record_type": {
                "type": "string",
                "description": "❗ The record type (`A`, `AAAA`, `ALIAS`, `CAA`, `CNAME`, `HINFO`, `MX`, `NAPTR`, `NS`, `POOL`, `SPF`, `SRV`, `SSHFP`, `TXT`, `URL`).",
                "description_kind": "markdown",
                "required": true
              },
              "ttl": {
                "type": "number",
                "description": "The record TTL (seconds; minimum `0`; default: `3600`).",
                "description_kind": "markdown",
                "optional": true,
                "computed": true
              }
            },
            "block_types": {
              "timeouts": {
                "nesting_mode": "single",
                "block": {
                  "attributes": {
                    "create": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "delete": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "read": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "update": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true
                    }
                  },
                  "description_kind": "plain"
                }
              }
            },
            "description": "Manage Exoscale [DNS](https://community.exoscale.com/documentation/dns/) Domain Records.\n\nCorresponding data source: [exoscale_domain_record](../data-sources/domain_record.md).",
            "description_kind": "markdown"
          }
        },
        "exoscale_elastic_ip": {
          "version": 0,
          "block": {
            "attributes": {
              "address_family": {
                "type": "string",
                "description": "❗ The Elastic IP (EIP) address family (`inet4` or `inet6`; default: `inet4`).",
                "description_kind": "markdown",
                "optional": true,
                "computed": true
              },
              "cidr": {
                "type": "string",
                "description": "The Elastic IP (EIP) CIDR.",
                "description_kind": "markdown",
                "computed": true
              },
              "description": {
                "type": "string",
                "description": "A free-form text describing the Elastic IP (EIP).",
                "description_kind": "markdown",
                "optional": true,
                "computed": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "ip_address": {
                "type": "string",
                "description": "The Elastic IP (EIP) IPv4 or IPv6 address.",
                "description_kind": "markdown",
                "computed": true
              },
              "labels": {
                "type": [
                  "map",
                  "string"
                ],
                "description": "A map of key/value labels.",
                "description_kind": "markdown",
                "optional": true
              },
              "reverse_dns": {
                "type": "string",
                "description": "Domain name for reverse DNS record.",
                "description_kind": "markdown",
                "optional": true
              },
              "zone": {
                "type": "string",
                "description": "❗ The Exoscale [Zone](https://www.exoscale.com/datacenters/) name.",
                "description_kind": "markdown",
                "required": true
              }
            },
            "block_types": {
              "healthcheck": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "interval": {
                      "type": "number",
                      "description": "The healthcheck interval (seconds; must be between `5` and `300`; default: `10`).",
                      "description_kind": "markdown",
                      "optional": true
                    },
                    "mode": {
                      "type": "string",
                      "description": "The healthcheck mode (`tcp`, `http` or `https`; may only be set at creation time).",
                      "description_kind": "markdown",
                      "required": true
                    },
                    "port": {
                      "type": "number",
                      "description": "The healthcheck target port (must be between `1` and `65535`).",
                      "description_kind": "markdown",
                      "required": true
                    },
                    "strikes_fail": {
                      "type": "number",
                      "description": "The number of failed healthcheck attempts before considering the target unhealthy (must be between `1` and `20`; default: `2`).",
                      "description_kind": "markdown",
                      "optional": true
                    },
                    "strikes_ok": {
                      "type": "number",
                      "description": "The number of successful healthcheck attempts before considering the target healthy (must be between `1` and `20`; default: `3`).",
                      "description_kind": "markdown",
                      "optional": true
                    },
                    "timeout": {
                      "type": "number",
                      "description": "The time before considering a healthcheck probing failed (seconds; must be between `2` and `60`; default: `3`).",
                      "description_kind": "markdown",
                      "optional": true
                    },
                    "tls_skip_verify": {
                      "type": "bool",
                      "description": "Disable TLS certificate verification for healthcheck in `https` mode (boolean; default: `false`).",
                      "description_kind": "markdown",
                      "optional": true
                    },
                    "tls_sni": {
                      "type": "string",
                      "description": "The healthcheck server name to present with SNI in `https` mode.",
                      "description_kind": "markdown",
                      "optional": true
                    },
                    "uri": {
                      "type": "string",
                      "description": "The healthcheck target URI (required in `http(s)` modes).",
                      "description_kind": "markdown",
                      "optional": true
                    }
                  },
                  "description": "Healthcheck configuration for *managed* EIPs. It can not be added to an existing *Unmanaged* EIP.",
                  "description_kind": "markdown"
                },
                "max_items": 1
              },
              "timeouts": {
                "nesting_mode": "single",
                "block": {
                  "attributes": {
                    "create": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "delete": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "read": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "update": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true
                    }
                  },
                  "description_kind": "plain"
                }
              }
            },
            "description_kind": "plain"
          }
        },
        "exoscale_iam_access_key": {
          "version": 0,
          "block": {
            "attributes": {
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "key": {
                "type": "string",
                "description": "The IAM access key (identifier).",
                "description_kind": "markdown",
                "computed": true,
                "sensitive": true
              },
              "name": {
                "type": "string",
                "description": "❗ The IAM access key name.",
                "description_kind": "markdown",
                "required": true
              },
              "operations": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "❗ A list of API operations to restrict the key to.",
                "description_kind": "markdown",
                "optional": true
              },
              "resources": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "❗ A list of API [resources](https://community.exoscale.com/documentation/iam/quick-start/#restricting-api-access-keys-to-resources) to restrict the key to (`<domain>/<type>:<name>`).",
                "description_kind": "markdown",
                "optional": true
              },
              "secret": {
                "type": "string",
                "description": "The key secret.",
                "description_kind": "markdown",
                "computed": true,
                "sensitive": true
              },
              "tags": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "❗ A list of tags to restrict the key to.",
                "description_kind": "markdown",
                "optional": true
              },
              "tags_operations": {
                "type": [
                  "set",
                  "string"
                ],
                "description_kind": "plain",
                "computed": true
              }
            },
            "block_types": {
              "timeouts": {
                "nesting_mode": "single",
                "block": {
                  "attributes": {
                    "create": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "delete": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "read": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true
                    }
                  },
                  "description_kind": "plain"
                }
              }
            },
            "description_kind": "plain"
          }
        },
        "exoscale_iam_api_key": {
          "version": 0,
          "block": {
            "attributes": {
              "id": {
                "type": "string",
                "description": "The ID of this resource.",
                "description_kind": "markdown",
                "computed": true
              },
              "key": {
                "type": "string",
                "description": "The IAM API Key to match.",
                "description_kind": "markdown",
                "computed": true
              },
              "name": {
                "type": "string",
                "description": "❗ IAM API Key name.",
                "description_kind": "markdown",
                "required": true
              },
              "role_id": {
                "type": "string",
                "description": "❗ IAM API role ID.",
                "description_kind": "markdown",
                "required": true
              },
              "secret": {
                "type": "string",
                "description": "Secret for the IAM API Key.",
                "description_kind": "markdown",
                "computed": true,
                "sensitive": true
              }
            },
            "block_types": {
              "timeouts": {
                "nesting_mode": "single",
                "block": {
                  "attributes": {
                    "read": {
                      "type": "string",
                      "description": "A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as \"30s\" or \"2h45m\". Valid time units are \"s\" (seconds), \"m\" (minutes), \"h\" (hours). Read operations occur during any refresh or planning operation when refresh is enabled.",
                      "description_kind": "plain",
                      "optional": true
                    }
                  },
                  "description_kind": "plain"
                }
              }
            },
            "description": "Manage Exoscale [IAM](https://community.exoscale.com/documentation/iam/) API Key.\n",
            "description_kind": "markdown"
          }
        },
        "exoscale_iam_org_policy": {
          "version": 0,
          "block": {
            "attributes": {
              "default_service_strategy": {
                "type": "string",
                "description": "Default service strategy (`allow` or `deny`).",
                "description_kind": "markdown",
                "required": true
              },
              "id": {
                "type": "string",
                "description": "The ID of this resource.",
                "description_kind": "markdown",
                "computed": true
              },
              "services": {
                "nested_type": {
                  "attributes": {
                    "rules": {
                      "nested_type": {
                        "attributes": {
                          "action": {
                            "type": "string",
                            "description": "IAM policy rule action (`allow` or `deny`).",
                            "description_kind": "markdown",
                            "optional": true,
                            "computed": true
                          },
                          "expression": {
                            "type": "string",
                            "description": "IAM policy rule expression.",
                            "description_kind": "markdown",
                            "optional": true,
                            "computed": true
                          },
                          "resources": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description": "List of resources that IAM policy rule applies to.",
                            "description_kind": "markdown",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "nesting_mode": "list"
                      },
                      "description": "List of IAM service rules (if type is `rules`).",
                      "description_kind": "markdown",
                      "optional": true,
                      "computed": true
                    },
                    "type": {
                      "type": "string",
                      "description": "Service type (`rules`, `allow`, or `deny`).",
                      "description_kind": "markdown",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "map"
                },
                "description": "IAM policy services.",
                "description_kind": "markdown",
                "required": true
              }
            },
            "block_types": {
              "timeouts": {
                "nesting_mode": "single",
                "block": {
                  "attributes": {
                    "read": {
                      "type": "string",
                      "description": "A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as \"30s\" or \"2h45m\". Valid time units are \"s\" (seconds), \"m\" (minutes), \"h\" (hours). Read operations occur during any refresh or planning operation when refresh is enabled.",
                      "description_kind": "plain",
                      "optional": true
                    }
                  },
                  "description_kind": "plain"
                }
              }
            },
            "description": "Manage Exoscale [IAM](https://community.exoscale.com/documentation/iam/) Organization Policy.",
            "description_kind": "markdown"
          }
        },
        "exoscale_iam_role": {
          "version": 0,
          "block": {
            "attributes": {
              "description": {
                "type": "string",
                "description": "A free-form text describing the IAM Role",
                "description_kind": "markdown",
                "optional": true,
                "computed": true
              },
              "editable": {
                "type": "bool",
                "description": "Defines if IAM Role Policy is editable or not.",
                "description_kind": "markdown",
                "optional": true,
                "computed": true
              },
              "id": {
                "type": "string",
                "description": "The ID of this resource.",
                "description_kind": "markdown",
                "computed": true
              },
              "labels": {
                "type": [
                  "map",
                  "string"
                ],
                "description": "IAM Role labels.",
                "description_kind": "markdown",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "description": "Name of IAM Role.",
                "description_kind": "markdown",
                "required": true
              },
              "permissions": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "IAM Role permissions.",
                "description_kind": "markdown",
                "optional": true,
                "computed": true
              },
              "policy": {
                "nested_type": {
                  "attributes": {
                    "default_service_strategy": {
                      "type": "string",
                      "description": "Default service strategy (`allow` or `deny`).",
                      "description_kind": "markdown",
                      "optional": true,
                      "computed": true
                    },
                    "services": {
                      "nested_type": {
                        "attributes": {
                          "rules": {
                            "nested_type": {
                              "attributes": {
                                "action": {
                                  "type": "string",
                                  "description": "IAM policy rule action (`allow` or `deny`).",
                                  "description_kind": "markdown",
                                  "optional": true,
                                  "computed": true
                                },
                                "expression": {
                                  "type": "string",
                                  "description": "IAM policy rule expression.",
                                  "description_kind": "markdown",
                                  "optional": true,
                                  "computed": true
                                },
                                "resources": {
                                  "type": [
                                    "list",
                                    "string"
                                  ],
                                  "description": "List of resources that IAM policy rule applies to.",
                                  "description_kind": "markdown",
                                  "optional": true,
                                  "computed": true
                                }
                              },
                              "nesting_mode": "list"
                            },
                            "description": "List of IAM service rules (if type is `rules`).",
                            "description_kind": "markdown",
                            "optional": true,
                            "computed": true
                          },
                          "type": {
                            "type": "string",
                            "description": "Service type (`rules`, `allow`, or `deny`).",
                            "description_kind": "markdown",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "nesting_mode": "map"
                      },
                      "description": "IAM policy services.",
                      "description_kind": "markdown",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "IAM Policy.",
                "description_kind": "markdown",
                "optional": true,
                "computed": true
              }
            },
            "block_types": {
              "timeouts": {
                "nesting_mode": "single",
                "block": {
                  "attributes": {
                    "read": {
                      "type": "string",
                      "description": "A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as \"30s\" or \"2h45m\". Valid time units are \"s\" (seconds), \"m\" (minutes), \"h\" (hours). Read operations occur during any refresh or planning operation when refresh is enabled.",
                      "description_kind": "plain",
                      "optional": true
                    }
                  },
                  "description_kind": "plain"
                }
              }
            },
            "description": "Manage Exoscale [IAM](https://community.exoscale.com/documentation/iam/) Role.\n",
            "description_kind": "markdown"
          }
        },
        "exoscale_instance_pool": {
          "version": 0,
          "block": {
            "attributes": {
              "affinity_group_ids": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "A list of [exoscale_anti_affinity_group](./anti_affinity_group.md) (IDs; may only be set at creation time).",
                "description_kind": "markdown",
                "optional": true
              },
              "deploy_target_id": {
                "type": "string",
                "description": "A deploy target ID.",
                "description_kind": "markdown",
                "optional": true
              },
              "description": {
                "type": "string",
                "description": "A free-form text describing the pool.",
                "description_kind": "markdown",
                "optional": true
              },
              "disk_size": {
                "type": "number",
                "description": "The managed instances disk size (GiB).",
                "description_kind": "markdown",
                "optional": true,
                "computed": true
              },
              "elastic_ip_ids": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "A list of [exoscale_elastic_ip](./elastic_ip.md) (IDs).",
                "description_kind": "markdown",
                "optional": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "instance_prefix": {
                "type": "string",
                "description": "The string used to prefix managed instances name (default: `pool`).",
                "description_kind": "markdown",
                "optional": true
              },
              "instance_type": {
                "type": "string",
                "description": "The managed compute instances type (`<family>.<size>`, e.g. `standard.medium`; use the [Exoscale CLI](https://github.com/exoscale/cli/) - `exo compute instance-type list` - for the list of available types).",
                "description_kind": "markdown",
                "optional": true,
                "computed": true
              },
              "ipv6": {
                "type": "bool",
                "description": "Enable IPv6 on managed instances (boolean; default: `false`).",
                "description_kind": "markdown",
                "optional": true
              },
              "key_pair": {
                "type": "string",
                "description": "The [exoscale_ssh_key](./ssh_key.md) (name) to authorize in the managed instances.",
                "description_kind": "markdown",
                "optional": true
              },
              "labels": {
                "type": [
                  "map",
                  "string"
                ],
                "description": "A map of key/value labels.",
                "description_kind": "markdown",
                "optional": true
              },
              "name": {
                "type": "string",
                "description": "The instance pool name.",
                "description_kind": "markdown",
                "required": true
              },
              "network_ids": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "A list of [exoscale_private_network](./private_network.md) (IDs).",
                "description_kind": "markdown",
                "optional": true
              },
              "security_group_ids": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "A list of [exoscale_security_group](./security_groups.md) (IDs).",
                "description_kind": "markdown",
                "optional": true
              },
              "service_offering": {
                "type": "string",
                "description": "The managed instances type. Please use the `instance_type` argument instead.",
                "description_kind": "markdown",
                "deprecated": true,
                "optional": true,
                "computed": true
              },
              "size": {
                "type": "number",
                "description": "The number of managed instances.",
                "description_kind": "markdown",
                "required": true
              },
              "state": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "template_id": {
                "type": "string",
                "description": "The [exoscale_compute_template](../data-sources/compute_template.md) (ID) to use when creating the managed instances.",
                "description_kind": "markdown",
                "required": true
              },
              "user_data": {
                "type": "string",
                "description": "[cloud-init](http://cloudinit.readthedocs.io/) configuration to apply to the managed instances.",
                "description_kind": "markdown",
                "optional": true
              },
              "virtual_machines": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "The list of managed instances (IDs). Please use the `instances.*.id` attribute instead.",
                "description_kind": "markdown",
                "deprecated": true,
                "optional": true,
                "computed": true
              },
              "zone": {
                "type": "string",
                "description": "❗ The Exoscale [Zone](https://www.exoscale.com/datacenters/) name.",
                "description_kind": "markdown",
                "required": true
              }
            },
            "block_types": {
              "instances": {
                "nesting_mode": "set",
                "block": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "ipv6_address": {
                      "type": "string",
                      "description": "The instance (main network interface) IPv6 address.",
                      "description_kind": "markdown",
                      "computed": true
                    },
                    "name": {
                      "type": "string",
                      "description": "The instance name.",
                      "description_kind": "markdown",
                      "optional": true
                    },
                    "public_ip_address": {
                      "type": "string",
                      "description": "The instance (main network interface) IPv4 address.",
                      "description_kind": "markdown",
                      "computed": true
                    }
                  },
                  "description": "The list of managed instances. Structure is documented below.",
                  "description_kind": "markdown"
                }
              },
              "timeouts": {
                "nesting_mode": "single",
                "block": {
                  "attributes": {
                    "create": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "delete": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "read": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "update": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true
                    }
                  },
                  "description_kind": "plain"
                }
              }
            },
            "description": "Manage Exoscale [Instance Pools](https://community.exoscale.com/documentation/compute/instance-pools/).\n\nCorresponding data sources: [exoscale_instance_pool](../data-sources/instance_pool.md), [exoscale_instance_pool_list](../data-sources/instance_pool_list.md).",
            "description_kind": "markdown"
          }
        },
        "exoscale_ipaddress": {
          "version": 0,
          "block": {
            "attributes": {
              "description": {
                "type": "string",
                "description": "A free-form text describing the Elastic IP (EIP).",
                "description_kind": "markdown",
                "optional": true
              },
              "healthcheck_interval": {
                "type": "number",
                "description": "The healthcheck probing interval (seconds; must be between `5` and `300`).",
                "description_kind": "markdown",
                "optional": true
              },
              "healthcheck_mode": {
                "type": "string",
                "description": "❗ The healthcheck probing mode (must be `tcp`, `http` or `https`).",
                "description_kind": "markdown",
                "optional": true
              },
              "healthcheck_path": {
                "type": "string",
                "description": "The healthcheck probe HTTP request path (must be specified in `http`/`https` modes).",
                "description_kind": "markdown",
                "optional": true
              },
              "healthcheck_port": {
                "type": "number",
                "description": "The healthcheck service port to probe (must be between `1` and `65535`).",
                "description_kind": "markdown",
                "optional": true
              },
              "healthcheck_strikes_fail": {
                "type": "number",
                "description": "The number of unsuccessful healthcheck probes before considering the target unhealthy (must be between `1` and `20`).",
                "description_kind": "markdown",
                "optional": true
              },
              "healthcheck_strikes_ok": {
                "type": "number",
                "description": "The number of successful healthcheck probes before considering the target healthy (must be between `1` and `20`).",
                "description_kind": "markdown",
                "optional": true
              },
              "healthcheck_timeout": {
                "type": "number",
                "description": "The time in seconds before considering a healthcheck probing failed (must be between `2` and `60`).",
                "description_kind": "markdown",
                "optional": true
              },
              "healthcheck_tls_skip_verify": {
                "type": "bool",
                "description": "Disable TLS certificate validation in `https` mode (boolean; default: `false`). Note: this parameter can only be changed to `true`, it cannot be reset to `false` later on (requires a resource re-creation).",
                "description_kind": "markdown",
                "optional": true
              },
              "healthcheck_tls_sni": {
                "type": "string",
                "description": "The healthcheck TLS server name to specify in `https` mode. Note: this parameter can only be changed to a non-empty value, it cannot be reset to its default empty value later on (requires a resource re-creation).",
                "description_kind": "markdown",
                "optional": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "ip_address": {
                "type": "string",
                "description": "The Elastic IP (EIP) IPv4 address.",
                "description_kind": "markdown",
                "computed": true
              },
              "reverse_dns": {
                "type": "string",
                "description": "The EIP reverse DNS record (must end with a `.`; e.g: `my-eip.example.net.`).",
                "description_kind": "markdown",
                "optional": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "description": "Map of tags (key/value). To remove all tags, set `tags = {}`.",
                "description_kind": "markdown",
                "optional": true,
                "computed": true
              },
              "zone": {
                "type": "string",
                "description": "❗ The Exoscale Zone name",
                "description_kind": "markdown",
                "required": true
              }
            },
            "block_types": {
              "timeouts": {
                "nesting_mode": "single",
                "block": {
                  "attributes": {
                    "create": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "delete": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "read": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "update": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true
                    }
                  },
                  "description_kind": "plain"
                }
              }
            },
            "description": "Manage Exoscale Elastic IPs (EIP).",
            "description_kind": "markdown"
          }
        },
        "exoscale_network": {
          "version": 0,
          "block": {
            "attributes": {
              "display_text": {
                "type": "string",
                "description": "A free-form text describing the network.",
                "description_kind": "markdown",
                "optional": true,
                "computed": true
              },
              "end_ip": {
                "type": "string",
                "description": "The first/last IP addresses used by the DHCP service for dynamic leases. Required for *managed* private networks.",
                "description_kind": "markdown",
                "optional": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "description": "The private network name.",
                "description_kind": "markdown",
                "required": true
              },
              "netmask": {
                "type": "string",
                "description": "The network mask defining the IP network allowed for static leases (see `exoscale_nic` resource). Required for *managed* private networks.",
                "description_kind": "markdown",
                "optional": true
              },
              "network_offering": {
                "type": "string",
                "description_kind": "plain",
                "deprecated": true,
                "optional": true
              },
              "start_ip": {
                "type": "string",
                "description": "The first/last IP addresses used by the DHCP service for dynamic leases. Required for *managed* private networks.",
                "description_kind": "markdown",
                "optional": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "description": "Map of tags (key/value). To remove all tags, set `tags = {}`.",
                "description_kind": "markdown",
                "optional": true,
                "computed": true
              },
              "zone": {
                "type": "string",
                "description": "❗ The Exoscale Zone name.",
                "description_kind": "markdown",
                "required": true
              }
            },
            "block_types": {
              "timeouts": {
                "nesting_mode": "single",
                "block": {
                  "attributes": {
                    "create": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "delete": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "read": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "update": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true
                    }
                  },
                  "description_kind": "plain"
                }
              }
            },
            "description": "Manage Exoscale Private Networks.",
            "description_kind": "markdown"
          }
        },
        "exoscale_nic": {
          "version": 0,
          "block": {
            "attributes": {
              "compute_id": {
                "type": "string",
                "description": "❗ The compute instance ID.",
                "description_kind": "markdown",
                "required": true
              },
              "gateway": {
                "type": "string",
                "description_kind": "plain",
                "computed": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "ip_address": {
                "type": "string",
                "description": "The IPv4 address to request as static DHCP lease if the NIC is attached to a *managed* private network.",
                "description_kind": "markdown",
                "optional": true,
                "computed": true
              },
              "mac_address": {
                "type": "string",
                "description": "The NIC MAC address.",
                "description_kind": "markdown",
                "computed": true
              },
              "netmask": {
                "type": "string",
                "description_kind": "plain",
                "computed": true
              },
              "network_id": {
                "type": "string",
                "description": "❗ The private network ID.",
                "description_kind": "markdown",
                "required": true
              }
            },
            "block_types": {
              "timeouts": {
                "nesting_mode": "single",
                "block": {
                  "attributes": {
                    "create": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "delete": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "read": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "update": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true
                    }
                  },
                  "description_kind": "plain"
                }
              }
            },
            "description": "Manage Exoscale Compute Instance Private Network Interfaces (NIC).",
            "description_kind": "markdown"
          }
        },
        "exoscale_nlb": {
          "version": 0,
          "block": {
            "attributes": {
              "created_at": {
                "type": "string",
                "description": "The NLB creation date.",
                "description_kind": "markdown",
                "computed": true
              },
              "description": {
                "type": "string",
                "description": "A free-form text describing the NLB.",
                "description_kind": "markdown",
                "optional": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "ip_address": {
                "type": "string",
                "description": "The NLB IPv4 address.",
                "description_kind": "markdown",
                "computed": true
              },
              "labels": {
                "type": [
                  "map",
                  "string"
                ],
                "description": "A map of key/value labels.",
                "description_kind": "markdown",
                "optional": true
              },
              "name": {
                "type": "string",
                "description": "The network load balancer (NLB) name.",
                "description_kind": "markdown",
                "required": true
              },
              "services": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "The list of the [exoscale_nlb_service](./nlb_service.md) (names).",
                "description_kind": "markdown",
                "computed": true
              },
              "state": {
                "type": "string",
                "description": "The current NLB state.",
                "description_kind": "markdown",
                "computed": true
              },
              "zone": {
                "type": "string",
                "description": "❗ The Exoscale [Zone](https://www.exoscale.com/datacenters/) name.",
                "description_kind": "markdown",
                "required": true
              }
            },
            "block_types": {
              "timeouts": {
                "nesting_mode": "single",
                "block": {
                  "attributes": {
                    "create": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "delete": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "read": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "update": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true
                    }
                  },
                  "description_kind": "plain"
                }
              }
            },
            "description": "Manage Exoscale Network Load Balancers (NLB).",
            "description_kind": "markdown"
          }
        },
        "exoscale_nlb_service": {
          "version": 0,
          "block": {
            "attributes": {
              "description": {
                "type": "string",
                "description": "A free-form text describing the NLB service.",
                "description_kind": "markdown",
                "optional": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "instance_pool_id": {
                "type": "string",
                "description": "❗ The [exoscale_instance_pool](./instance_pool.md) (ID) to forward traffic to.",
                "description_kind": "markdown",
                "required": true
              },
              "name": {
                "type": "string",
                "description": "The NLB service name.",
                "description_kind": "markdown",
                "required": true
              },
              "nlb_id": {
                "type": "string",
                "description": "❗ The parent [exoscale_nlb](./nlb.md) ID.",
                "description_kind": "markdown",
                "required": true
              },
              "port": {
                "type": "number",
                "description": "The healthcheck port.",
                "description_kind": "markdown",
                "required": true
              },
              "protocol": {
                "type": "string",
                "description": "The protocol (`tcp`|`udp`; default: `tcp`).",
                "description_kind": "markdown",
                "optional": true
              },
              "state": {
                "type": "string",
                "description_kind": "plain",
                "computed": true
              },
              "strategy": {
                "type": "string",
                "description": "The strategy (`round-robin`|`source-hash`; default: `round-robin`).",
                "description_kind": "markdown",
                "optional": true
              },
              "target_port": {
                "type": "number",
                "description": "The (TCP/UDP) port to forward traffic to (on target instance pool members).",
                "description_kind": "markdown",
                "required": true
              },
              "zone": {
                "type": "string",
                "description": "❗ The Exoscale [Zone](https://www.exoscale.com/datacenters/) name.",
                "description_kind": "markdown",
                "required": true
              }
            },
            "block_types": {
              "healthcheck": {
                "nesting_mode": "set",
                "block": {
                  "attributes": {
                    "interval": {
                      "type": "number",
                      "description": "The healthcheck interval in seconds (default: `10`).",
                      "description_kind": "markdown",
                      "optional": true
                    },
                    "mode": {
                      "type": "string",
                      "description": "The healthcheck mode (`tcp`|`http`|`https`; default: `tcp`).",
                      "description_kind": "markdown",
                      "optional": true
                    },
                    "port": {
                      "type": "number",
                      "description": "The NLB service (TCP/UDP) port.",
                      "description_kind": "markdown",
                      "required": true
                    },
                    "retries": {
                      "type": "number",
                      "description": "The healthcheck retries (default: `1`).",
                      "description_kind": "markdown",
                      "optional": true
                    },
                    "timeout": {
                      "type": "number",
                      "description": "The healthcheck timeout (seconds; default: `5`).",
                      "description_kind": "markdown",
                      "optional": true
                    },
                    "tls_sni": {
                      "type": "string",
                      "description": "The healthcheck TLS SNI server name (only if `mode` is `https`).",
                      "description_kind": "markdown",
                      "optional": true
                    },
                    "uri": {
                      "type": "string",
                      "description": "The healthcheck URI (must be set only if `mode` is `http(s)`).",
                      "description_kind": "markdown",
                      "optional": true
                    }
                  },
                  "description": "The service health checking configuration.",
                  "description_kind": "markdown"
                },
                "min_items": 1
              },
              "timeouts": {
                "nesting_mode": "single",
                "block": {
                  "attributes": {
                    "create": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "delete": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "read": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "update": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true
                    }
                  },
                  "description_kind": "plain"
                }
              }
            },
            "description": "Manage Exoscale [Network Load Balancer (NLB)](https://community.exoscale.com/documentation/compute/network-load-balancer/) Services.",
            "description_kind": "markdown"
          }
        },
        "exoscale_private_network": {
          "version": 0,
          "block": {
            "attributes": {
              "description": {
                "type": "string",
                "description": "A free-form text describing the network.",
                "description_kind": "markdown",
                "optional": true
              },
              "end_ip": {
                "type": "string",
                "description": "(For managed Privnets) The first/last IPv4 addresses used by the DHCP service for dynamic leases.",
                "description_kind": "markdown",
                "optional": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "labels": {
                "type": [
                  "map",
                  "string"
                ],
                "description": "A map of key/value labels.",
                "description_kind": "markdown",
                "optional": true
              },
              "name": {
                "type": "string",
                "description": "The private network name.",
                "description_kind": "markdown",
                "required": true
              },
              "netmask": {
                "type": "string",
                "description": "(For managed Privnets) The network mask defining the IPv4 network allowed for static leases.",
                "description_kind": "markdown",
                "optional": true
              },
              "start_ip": {
                "type": "string",
                "description": "(For managed Privnets) The first/last IPv4 addresses used by the DHCP service for dynamic leases.",
                "description_kind": "markdown",
                "optional": true
              },
              "zone": {
                "type": "string",
                "description": "❗ The Exoscale [Zone](https://www.exoscale.com/datacenters/) name.",
                "description_kind": "markdown",
                "required": true
              }
            },
            "block_types": {
              "timeouts": {
                "nesting_mode": "single",
                "block": {
                  "attributes": {
                    "create": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "delete": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "read": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "update": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true
                    }
                  },
                  "description_kind": "plain"
                }
              }
            },
            "description": "Manage Exoscale Private Networks.",
            "description_kind": "markdown"
          }
        },
        "exoscale_secondary_ipaddress": {
          "version": 0,
          "block": {
            "attributes": {
              "compute_id": {
                "type": "string",
                "description": "❗ The compute instance ID.",
                "description_kind": "markdown",
                "required": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "ip_address": {
                "type": "string",
                "description": "❗ The Elastic IP (EIP) address.",
                "description_kind": "markdown",
                "required": true
              },
              "network_id": {
                "type": "string",
                "description": "The network (ID) the compute instance NIC is attached to.",
                "description_kind": "markdown",
                "computed": true
              },
              "nic_id": {
                "type": "string",
                "description": "The network interface (NIC) ID.",
                "description_kind": "markdown",
                "computed": true
              }
            },
            "block_types": {
              "timeouts": {
                "nesting_mode": "single",
                "block": {
                  "attributes": {
                    "create": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "delete": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "read": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true
                    }
                  },
                  "description_kind": "plain"
                }
              }
            },
            "description": "Associate Exoscale Elastic IPs (EIP) to Compute Instances.",
            "description_kind": "markdown"
          }
        },
        "exoscale_security_group": {
          "version": 1,
          "block": {
            "attributes": {
              "description": {
                "type": "string",
                "description": "❗ A free-form text describing the group.",
                "description_kind": "markdown",
                "optional": true
              },
              "external_sources": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "A list of external network sources, in [CIDR](https://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing#CIDR_notatio) notation.",
                "description_kind": "markdown",
                "optional": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "description": "❗ The security group name.",
                "description_kind": "markdown",
                "required": true
              }
            },
            "block_types": {
              "timeouts": {
                "nesting_mode": "single",
                "block": {
                  "attributes": {
                    "create": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "delete": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "read": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true
                    }
                  },
                  "description_kind": "plain"
                }
              }
            },
            "description": "Manage Exoscale Security Groups.",
            "description_kind": "markdown"
          }
        },
        "exoscale_security_group_rule": {
          "version": 0,
          "block": {
            "attributes": {
              "cidr": {
                "type": "string",
                "description": "❗ An (`INGRESS`) source / (`EGRESS`) destination IP subnet (in [CIDR notation](https://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing#CIDR_notation)) to match (conflicts with `public_security_group`/`user_security_group`/`user_security_group_id`).",
                "description_kind": "markdown",
                "optional": true
              },
              "description": {
                "type": "string",
                "description": "❗ A free-form text describing the security group rule.",
                "description_kind": "markdown",
                "optional": true
              },
              "end_port": {
                "type": "number",
                "description": "❗ A `TCP`/`UDP` port range to match.",
                "description_kind": "markdown",
                "optional": true
              },
              "icmp_code": {
                "type": "number",
                "description": "❗ An ICMP/ICMPv6 [type/code](https://en.wikipedia.org/wiki/Internet_Control_Message_Protocol#Control_messages) to match.",
                "description_kind": "markdown",
                "optional": true
              },
              "icmp_type": {
                "type": "number",
                "description": "❗ An ICMP/ICMPv6 [type/code](https://en.wikipedia.org/wiki/Internet_Control_Message_Protocol#Control_messages) to match.",
                "description_kind": "markdown",
                "optional": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "protocol": {
                "type": "string",
                "description": "❗ The network protocol to match (`TCP`, `UDP`, `ICMP`, `ICMPv6`, `AH`, `ESP`, `GRE`, `IPIP` or `ALL`)",
                "description_kind": "markdown",
                "optional": true
              },
              "public_security_group": {
                "type": "string",
                "description": "❗ An (`INGRESS`) source / (`EGRESS`) destination public security group name to match (conflicts with `cidr`/`user_security_group`/`user_security_group_id`).",
                "description_kind": "markdown",
                "optional": true,
                "computed": true
              },
              "security_group": {
                "type": "string",
                "description": "❗ The parent security group name. Please use the `security_group_id` argument along the [exoscale_security_group](../data-sources/security_group.md) data source instead.",
                "description_kind": "markdown",
                "deprecated": true,
                "optional": true,
                "computed": true
              },
              "security_group_id": {
                "type": "string",
                "description": "❗ The parent [exoscale_security_group](./security_group.md) ID.",
                "description_kind": "markdown",
                "optional": true,
                "computed": true
              },
              "start_port": {
                "type": "number",
                "description": "❗ A `TCP`/`UDP` port range to match.",
                "description_kind": "markdown",
                "optional": true
              },
              "type": {
                "type": "string",
                "description": "❗ The traffic direction to match (`INGRESS` or `EGRESS`).",
                "description_kind": "markdown",
                "required": true
              },
              "user_security_group": {
                "type": "string",
                "description": "❗ An (`INGRESS`) source / (`EGRESS`) destination security group name to match (conflicts with `cidr`/`public_security_group`/`user_security_group_id`). Please use the `user_security_group_id` argument along the [exoscale_security_group](../data-sources/security_group.md) data source instead.",
                "description_kind": "markdown",
                "deprecated": true,
                "optional": true,
                "computed": true
              },
              "user_security_group_id": {
                "type": "string",
                "description": "❗ An (`INGRESS`) source / (`EGRESS`) destination security group ID to match (conflicts with `cidr`/`public_security_group`/`user_security_group)`).",
                "description_kind": "markdown",
                "optional": true
              }
            },
            "block_types": {
              "timeouts": {
                "nesting_mode": "single",
                "block": {
                  "attributes": {
                    "create": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "delete": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "read": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true
                    }
                  },
                  "description_kind": "plain"
                }
              }
            },
            "description": "Manage Exoscale [Security Group](https://community.exoscale.com/documentation/compute/security-groups/) Rules.",
            "description_kind": "markdown"
          }
        },
        "exoscale_security_group_rules": {
          "version": 2,
          "block": {
            "attributes": {
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "security_group": {
                "type": "string",
                "description": "❗ The security group (name) the rules apply to (conflicts with `security_group_id`).",
                "description_kind": "markdown",
                "optional": true,
                "computed": true
              },
              "security_group_id": {
                "type": "string",
                "description": "❗ The security group (ID) the rules apply to (conficts with `security_group)`.",
                "description_kind": "markdown",
                "optional": true,
                "computed": true
              }
            },
            "block_types": {
              "egress": {
                "nesting_mode": "set",
                "block": {
                  "attributes": {
                    "cidr_list": {
                      "type": [
                        "set",
                        "string"
                      ],
                      "description": "A list of (`INGRESS`) source / (`EGRESS`) destination IP subnet (in CIDR notation) to match.",
                      "description_kind": "markdown",
                      "optional": true
                    },
                    "description": {
                      "type": "string",
                      "description": "A free-form text describing the block.",
                      "description_kind": "markdown",
                      "optional": true
                    },
                    "icmp_code": {
                      "type": "number",
                      "description": "An ICMP/ICMPv6 type/code to match.",
                      "description_kind": "markdown",
                      "optional": true
                    },
                    "icmp_type": {
                      "type": "number",
                      "description": "An ICMP/ICMPv6 type/code to match.",
                      "description_kind": "markdown",
                      "optional": true
                    },
                    "ids": {
                      "type": [
                        "set",
                        "string"
                      ],
                      "description_kind": "plain",
                      "computed": true
                    },
                    "ports": {
                      "type": [
                        "set",
                        "string"
                      ],
                      "description": "A list of ports or port ranges (`<start_port>-<end_port>`).",
                      "description_kind": "markdown",
                      "optional": true
                    },
                    "protocol": {
                      "type": "string",
                      "description": "The network protocol to match (`TCP`, `UDP`, `ICMP`, `ICMPv6`, `AH`, `ESP`, `GRE`, `IPIP` or `ALL`).",
                      "description_kind": "markdown",
                      "optional": true
                    },
                    "user_security_group_list": {
                      "type": [
                        "set",
                        "string"
                      ],
                      "description": "A list of source (for ingress)/destination (for egress) identified by a security group.",
                      "description_kind": "markdown",
                      "optional": true
                    }
                  },
                  "description": "A security group rule definition (can be specified multiple times).",
                  "description_kind": "markdown"
                }
              },
              "ingress": {
                "nesting_mode": "set",
                "block": {
                  "attributes": {
                    "cidr_list": {
                      "type": [
                        "set",
                        "string"
                      ],
                      "description": "A list of (`INGRESS`) source / (`EGRESS`) destination IP subnet (in CIDR notation) to match.",
                      "description_kind": "markdown",
                      "optional": true
                    },
                    "description": {
                      "type": "string",
                      "description": "A free-form text describing the block.",
                      "description_kind": "markdown",
                      "optional": true
                    },
                    "icmp_code": {
                      "type": "number",
                      "description": "An ICMP/ICMPv6 type/code to match.",
                      "description_kind": "markdown",
                      "optional": true
                    },
                    "icmp_type": {
                      "type": "number",
                      "description": "An ICMP/ICMPv6 type/code to match.",
                      "description_kind": "markdown",
                      "optional": true
                    },
                    "ids": {
                      "type": [
                        "set",
                        "string"
                      ],
                      "description_kind": "plain",
                      "computed": true
                    },
                    "ports": {
                      "type": [
                        "set",
                        "string"
                      ],
                      "description": "A list of ports or port ranges (`<start_port>-<end_port>`).",
                      "description_kind": "markdown",
                      "optional": true
                    },
                    "protocol": {
                      "type": "string",
                      "description": "The network protocol to match (`TCP`, `UDP`, `ICMP`, `ICMPv6`, `AH`, `ESP`, `GRE`, `IPIP` or `ALL`).",
                      "description_kind": "markdown",
                      "optional": true
                    },
                    "user_security_group_list": {
                      "type": [
                        "set",
                        "string"
                      ],
                      "description": "A list of source (for ingress)/destination (for egress) identified by a security group.",
                      "description_kind": "markdown",
                      "optional": true
                    }
                  },
                  "description": "A security group rule definition (can be specified multiple times).",
                  "description_kind": "markdown"
                }
              },
              "timeouts": {
                "nesting_mode": "single",
                "block": {
                  "attributes": {
                    "create": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "delete": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "read": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "update": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true
                    }
                  },
                  "description_kind": "plain"
                }
              }
            },
            "description": "Manage Exoscale Security Group Rules.",
            "description_kind": "markdown"
          }
        },
        "exoscale_sks_cluster": {
          "version": 0,
          "block": {
            "attributes": {
              "addons": {
                "type": [
                  "set",
                  "string"
                ],
                "description_kind": "plain",
                "deprecated": true,
                "optional": true,
                "computed": true
              },
              "aggregation_ca": {
                "type": "string",
                "description": "The CA certificate (in PEM format) for TLS communications between the control plane and the aggregation layer (e.g. `metrics-server`).",
                "description_kind": "markdown",
                "computed": true
              },
              "auto_upgrade": {
                "type": "bool",
                "description": "Enable automatic upgrading of the control plane version.",
                "description_kind": "markdown",
                "optional": true
              },
              "cni": {
                "type": "string",
                "description": "The CNI plugin that is to be used. Defaults to \"calico\".",
                "description_kind": "markdown",
                "optional": true
              },
              "control_plane_ca": {
                "type": "string",
                "description": "The CA certificate (in PEM format) for TLS communications between control plane components.",
                "description_kind": "markdown",
                "computed": true
              },
              "created_at": {
                "type": "string",
                "description": "The cluster creation date.",
                "description_kind": "markdown",
                "computed": true
              },
              "description": {
                "type": "string",
                "description": "A free-form text describing the cluster.",
                "description_kind": "markdown",
                "optional": true
              },
              "endpoint": {
                "type": "string",
                "description": "The cluster API endpoint.",
                "description_kind": "markdown",
                "computed": true
              },
              "exoscale_ccm": {
                "type": "bool",
                "description": "Deploy the Exoscale [Cloud Controller Manager](https://github.com/exoscale/exoscale-cloud-controller-manager/) in the control plane (boolean; default: `true`; may only be set at creation time).",
                "description_kind": "markdown",
                "optional": true
              },
              "id": {
                "type": "string",
                "description": "The SKS cluster ID.",
                "description_kind": "markdown",
                "computed": true
              },
              "kubelet_ca": {
                "type": "string",
                "description": "The CA certificate (in PEM format) for TLS communications between kubelets and the control plane.",
                "description_kind": "markdown",
                "computed": true
              },
              "labels": {
                "type": [
                  "map",
                  "string"
                ],
                "description": "A map of key/value labels.",
                "description_kind": "markdown",
                "optional": true
              },
              "metrics_server": {
                "type": "bool",
                "description": "Deploy the [Kubernetes Metrics Server](https://github.com/kubernetes-sigs/metrics-server/) in the control plane (boolean; default: `true`; may only be set at creation time).",
                "description_kind": "markdown",
                "optional": true
              },
              "name": {
                "type": "string",
                "description": "The SKS cluster name.",
                "description_kind": "markdown",
                "required": true
              },
              "nodepools": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "The list of [exoscale_sks_nodepool](./sks_nodepool.md) (IDs) attached to the cluster.",
                "description_kind": "markdown",
                "computed": true
              },
              "service_level": {
                "type": "string",
                "description": "The service level of the control plane (`pro` or `starter`; default: `pro`; may only be set at creation time).",
                "description_kind": "markdown",
                "optional": true
              },
              "state": {
                "type": "string",
                "description": "The cluster state.",
                "description_kind": "markdown",
                "computed": true
              },
              "version": {
                "type": "string",
                "description": "The version of the control plane (default: latest version available from the API; see `exo compute sks versions` for reference; may only be set at creation time).",
                "description_kind": "markdown",
                "optional": true,
                "computed": true
              },
              "zone": {
                "type": "string",
                "description": "❗ The Exoscale [Zone](https://www.exoscale.com/datacenters/) name.",
                "description_kind": "markdown",
                "required": true
              }
            },
            "block_types": {
              "oidc": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "client_id": {
                      "type": "string",
                      "description": "The OpenID client ID.",
                      "description_kind": "markdown",
                      "required": true
                    },
                    "groups_claim": {
                      "type": "string",
                      "description": "An OpenID JWT claim to use as the user's group.",
                      "description_kind": "markdown",
                      "optional": true
                    },
                    "groups_prefix": {
                      "type": "string",
                      "description": "An OpenID prefix prepended to group claims.",
                      "description_kind": "markdown",
                      "optional": true
                    },
                    "issuer_url": {
                      "type": "string",
                      "description": "The OpenID provider URL.",
                      "description_kind": "markdown",
                      "required": true
                    },
                    "required_claim": {
                      "type": [
                        "map",
                        "string"
                      ],
                      "description": "A map of key/value pairs that describes a required claim in the OpenID Token.",
                      "description_kind": "markdown",
                      "optional": true
                    },
                    "username_claim": {
                      "type": "string",
                      "description": "An OpenID JWT claim to use as the user name.",
                      "description_kind": "markdown",
                      "optional": true
                    },
                    "username_prefix": {
                      "type": "string",
                      "description": "An OpenID prefix prepended to username claims.",
                      "description_kind": "markdown",
                      "optional": true
                    }
                  },
                  "description": "An OpenID Connect configuration to provide to the Kubernetes API server (may only be set at creation time). Structure is documented below.",
                  "description_kind": "markdown"
                },
                "max_items": 1
              },
              "timeouts": {
                "nesting_mode": "single",
                "block": {
                  "attributes": {
                    "create": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "delete": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "read": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "update": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true
                    }
                  },
                  "description_kind": "plain"
                }
              }
            },
            "description": "Manage Exoscale [Scalable Kubernetes Service (SKS)](https://community.exoscale.com/documentation/sks/) Clusters.",
            "description_kind": "markdown"
          }
        },
        "exoscale_sks_kubeconfig": {
          "version": 0,
          "block": {
            "attributes": {
              "cluster_id": {
                "type": "string",
                "description": "❗ The parent [exoscale_sks_cluster](./sks_cluster.md) ID.",
                "description_kind": "markdown",
                "required": true
              },
              "early_renewal_seconds": {
                "type": "number",
                "description": "If set, the resource will consider the Kubeconfig to have expired the given number of seconds before its actual CA certificate or client certificate expiry time. This can be useful to deploy an updated Kubeconfig in advance of the expiration of its internal current certificate. Note however that the old certificate remains valid until its true expiration time since this resource does not (and cannot) support revocation. Also note this advance update can only take place if the Terraform configuration is applied during the early renewal period (seconds; default: 0).",
                "description_kind": "markdown",
                "optional": true
              },
              "groups": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "❗ Group names in the generated Kubeconfig. The certificate present in the Kubeconfig will have these roles set in the Organization field.",
                "description_kind": "markdown",
                "required": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "kubeconfig": {
                "type": "string",
                "description": "The generated Kubeconfig (YAML content).",
                "description_kind": "markdown",
                "computed": true,
                "sensitive": true
              },
              "ready_for_renewal": {
                "type": "bool",
                "description_kind": "plain",
                "computed": true
              },
              "ttl_seconds": {
                "type": "number",
                "description": "❗ The Time-to-Live of the Kubeconfig, after which it will expire / become invalid (seconds; default: 2592000 = 30 days).",
                "description_kind": "markdown",
                "optional": true
              },
              "user": {
                "type": "string",
                "description": "❗ User name in the generated Kubeconfig. The certificate present in the Kubeconfig will also have this name set for the CN field.",
                "description_kind": "markdown",
                "required": true
              },
              "zone": {
                "type": "string",
                "description": "❗ The Exoscale [Zone](https://www.exoscale.com/datacenters/) name.",
                "description_kind": "markdown",
                "required": true
              }
            },
            "block_types": {
              "timeouts": {
                "nesting_mode": "single",
                "block": {
                  "attributes": {
                    "create": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "delete": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "read": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "update": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true
                    }
                  },
                  "description_kind": "plain"
                }
              }
            },
            "description": "Manage Exoscale Scalable Kubernetes Service (SKS) Credentials (Kubeconfig).",
            "description_kind": "markdown"
          }
        },
        "exoscale_sks_nodepool": {
          "version": 0,
          "block": {
            "attributes": {
              "anti_affinity_group_ids": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "A list of [exoscale_anti_affinity_group](./anti_affinity_group.md) (IDs) to be attached to the managed instances.",
                "description_kind": "markdown",
                "optional": true
              },
              "cluster_id": {
                "type": "string",
                "description": "❗ The parent [exoscale_sks_cluster](./sks_cluster.md) ID.",
                "description_kind": "markdown",
                "required": true
              },
              "created_at": {
                "type": "string",
                "description": "The pool creation date.",
                "description_kind": "markdown",
                "computed": true
              },
              "deploy_target_id": {
                "type": "string",
                "description": "A deploy target ID.",
                "description_kind": "markdown",
                "optional": true
              },
              "description": {
                "type": "string",
                "description": "A free-form text describing the pool.",
                "description_kind": "markdown",
                "optional": true
              },
              "disk_size": {
                "type": "number",
                "description": "The managed instances disk size (GiB; default: `50`).",
                "description_kind": "markdown",
                "optional": true
              },
              "id": {
                "type": "string",
                "description": "The SKS node pool ID.",
                "description_kind": "markdown",
                "computed": true
              },
              "instance_pool_id": {
                "type": "string",
                "description": "The underlying [exoscale_instance_pool](./instance_pool.md) ID.",
                "description_kind": "markdown",
                "computed": true
              },
              "instance_prefix": {
                "type": "string",
                "description": "The string used to prefix the managed instances name (default `pool`).",
                "description_kind": "markdown",
                "optional": true
              },
              "instance_type": {
                "type": "string",
                "description": "The managed compute instances type (`<family>.<size>`, e.g. `standard.medium`; use the [Exoscale CLI](https://github.com/exoscale/cli/) - `exo compute instance-type list` - for the list of available types).",
                "description_kind": "markdown",
                "required": true
              },
              "labels": {
                "type": [
                  "map",
                  "string"
                ],
                "description": "A map of key/value labels.",
                "description_kind": "markdown",
                "optional": true
              },
              "name": {
                "type": "string",
                "description": "The SKS node pool name.",
                "description_kind": "markdown",
                "required": true
              },
              "private_network_ids": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "A list of [exoscale_private_network](./private_network.md) (IDs) to be attached to the managed instances.",
                "description_kind": "markdown",
                "optional": true
              },
              "security_group_ids": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "A list of [exoscale_security_group](./security_group.md) (IDs) to be attached to the managed instances.",
                "description_kind": "markdown",
                "optional": true
              },
              "size": {
                "type": "number",
                "description_kind": "plain",
                "required": true
              },
              "state": {
                "type": "string",
                "description": "The current pool state.",
                "description_kind": "markdown",
                "computed": true
              },
              "storage_lvm": {
                "type": "bool",
                "description": "Create nodes with non-standard partitioning for persistent storage (requires min 100G of disk space) (may only be set at creation time).",
                "description_kind": "markdown",
                "optional": true
              },
              "taints": {
                "type": [
                  "map",
                  "string"
                ],
                "description": "A map of key/value Kubernetes [taints](https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/) (`<value>:<effect>`).",
                "description_kind": "markdown",
                "optional": true
              },
              "template_id": {
                "type": "string",
                "description": "The managed instances template ID.",
                "description_kind": "markdown",
                "computed": true
              },
              "version": {
                "type": "string",
                "description": "The managed instances version.",
                "description_kind": "markdown",
                "computed": true
              },
              "zone": {
                "type": "string",
                "description": "❗ The Exoscale [Zone](https://www.exoscale.com/datacenters/) name.",
                "description_kind": "markdown",
                "required": true
              }
            },
            "block_types": {
              "timeouts": {
                "nesting_mode": "single",
                "block": {
                  "attributes": {
                    "create": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "delete": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "read": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "update": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true
                    }
                  },
                  "description_kind": "plain"
                }
              }
            },
            "description": "Manage Exoscale Scalable Kubernetes Service (SKS) Node Pools.",
            "description_kind": "markdown"
          }
        },
        "exoscale_ssh_key": {
          "version": 0,
          "block": {
            "attributes": {
              "fingerprint": {
                "type": "string",
                "description": "The SSH key unique identifier.",
                "description_kind": "markdown",
                "computed": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "description": "❗ The SSH key name.",
                "description_kind": "markdown",
                "required": true
              },
              "public_key": {
                "type": "string",
                "description": "❗ The SSH *public* key that will be authorized in compute instances.",
                "description_kind": "markdown",
                "optional": true,
                "computed": true
              }
            },
            "block_types": {
              "timeouts": {
                "nesting_mode": "single",
                "block": {
                  "attributes": {
                    "create": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "delete": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "read": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true
                    }
                  },
                  "description_kind": "plain"
                }
              }
            },
            "description_kind": "plain"
          }
        },
        "exoscale_ssh_keypair": {
          "version": 0,
          "block": {
            "attributes": {
              "fingerprint": {
                "type": "string",
                "description": "The SSH keypair unique identifier.",
                "description_kind": "markdown",
                "computed": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "description": "❗ The SSH keypair name.",
                "description_kind": "markdown",
                "required": true
              },
              "private_key": {
                "type": "string",
                "description": "The SSH *private* key generated if no public key was provided.",
                "description_kind": "markdown",
                "computed": true,
                "sensitive": true
              },
              "public_key": {
                "type": "string",
                "description": "❗ A SSH *public* key that will be authorized in compute instances. If not provided, an SSH keypair (including the *private* key) is generated and saved locally (see the `private_key` attribute).",
                "description_kind": "markdown",
                "optional": true
              }
            },
            "block_types": {
              "timeouts": {
                "nesting_mode": "single",
                "block": {
                  "attributes": {
                    "create": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "delete": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "read": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true
                    }
                  },
                  "description_kind": "plain"
                }
              }
            },
            "description": "Manage Exoscale SSH Keypairs.",
            "description_kind": "markdown"
          }
        }
      },
      "data_source_schemas": {
        "exoscale_affinity": {
          "version": 0,
          "block": {
            "attributes": {
              "id": {
                "type": "string",
                "description": "The anti-affinity group ID to match (conflicts with `name`)",
                "description_kind": "markdown",
                "optional": true
              },
              "name": {
                "type": "string",
                "description": "The group name to match (conflicts with `id`)",
                "description_kind": "markdown",
                "optional": true
              }
            },
            "description": "Fetch Exoscale Anti-Affinity Groups data.",
            "description_kind": "markdown"
          }
        },
        "exoscale_anti_affinity_group": {
          "version": 0,
          "block": {
            "attributes": {
              "id": {
                "type": "string",
                "description": "The anti-affinity group ID to match (conflicts with `name`).",
                "description_kind": "markdown",
                "optional": true
              },
              "instances": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "The list of attached [exoscale_compute_instance](../resources/compute_instance.md) (IDs).",
                "description_kind": "markdown",
                "computed": true
              },
              "name": {
                "type": "string",
                "description": "The group name to match (conflicts with `id`).",
                "description_kind": "markdown",
                "optional": true
              }
            },
            "description": "Fetch Exoscale [Anti-Affinity Groups](https://community.exoscale.com/documentation/compute/anti-affinity-groups/) data.\n\nCorresponding resource: [exoscale_anti_affinity_group](../resources/anti_affinity_group.md).",
            "description_kind": "markdown"
          }
        },
        "exoscale_compute": {
          "version": 0,
          "block": {
            "attributes": {
              "cpu": {
                "type": "number",
                "description": "Number of cpu the Compute instance is running with",
                "description_kind": "markdown",
                "computed": true
              },
              "created": {
                "type": "string",
                "description": "Date when the Compute instance was created",
                "description_kind": "markdown",
                "computed": true
              },
              "disk_size": {
                "type": "number",
                "description": "Size of the Compute instance disk",
                "description_kind": "markdown",
                "computed": true
              },
              "hostname": {
                "type": "string",
                "description": "The instance hostname to match.",
                "description_kind": "markdown",
                "optional": true
              },
              "id": {
                "type": "string",
                "description": "The compute instance ID to match.",
                "description_kind": "markdown",
                "optional": true
              },
              "ip6_address": {
                "type": "string",
                "description": "Compute instance public ipv6 address (if ipv6 is enabled)",
                "description_kind": "markdown",
                "computed": true
              },
              "ip_address": {
                "type": "string",
                "description": "Compute instance public ipv4 address",
                "description_kind": "markdown",
                "computed": true
              },
              "memory": {
                "type": "number",
                "description": "Memory allocated for the Compute instance",
                "description_kind": "markdown",
                "computed": true
              },
              "private_network_ip_addresses": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "List of Compute instance private IP addresses (in managed Private Networks only)",
                "description_kind": "markdown",
                "computed": true
              },
              "size": {
                "type": "string",
                "description": "Current size of the Compute instance",
                "description_kind": "markdown",
                "computed": true
              },
              "state": {
                "type": "string",
                "description": "State of the Compute instance",
                "description_kind": "markdown",
                "computed": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "description": "The instance tags to match (map of key/value).",
                "description_kind": "markdown",
                "optional": true
              },
              "template": {
                "type": "string",
                "description": "Name of the template for the Compute instance",
                "description_kind": "markdown",
                "computed": true
              },
              "zone": {
                "type": "string",
                "description": "Name of the availability zone for the Compute instance",
                "description_kind": "markdown",
                "computed": true
              }
            },
            "description": "Fetch Exoscale Compute Instances data.",
            "description_kind": "markdown"
          }
        },
        "exoscale_compute_instance": {
          "version": 0,
          "block": {
            "attributes": {
              "anti_affinity_group_ids": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "The list of attached [exoscale_anti_affinity_group](../resources/anti_affinity_group.md) (IDs).",
                "description_kind": "markdown",
                "computed": true
              },
              "created_at": {
                "type": "string",
                "description": "The compute instance creation date.",
                "description_kind": "markdown",
                "computed": true
              },
              "deploy_target_id": {
                "type": "string",
                "description": "A deploy target ID.",
                "description_kind": "markdown",
                "computed": true
              },
              "disk_size": {
                "type": "number",
                "description": "The instance disk size (GiB).",
                "description_kind": "markdown",
                "computed": true
              },
              "elastic_ip_ids": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "The list of attached [exoscale_elastic_ip](../resources/elastic_ip.md) (IDs).",
                "description_kind": "markdown",
                "computed": true
              },
              "id": {
                "type": "string",
                "description": "The compute instance ID to match (conflicts with `name`).",
                "description_kind": "markdown",
                "optional": true
              },
              "ipv6": {
                "type": "bool",
                "description": "Whether IPv6 is enabled on the instance.",
                "description_kind": "markdown",
                "computed": true
              },
              "ipv6_address": {
                "type": "string",
                "description": "The instance (main network interface) IPv6 address (if enabled).",
                "description_kind": "markdown",
                "computed": true
              },
              "labels": {
                "type": [
                  "map",
                  "string"
                ],
                "description": "A map of key/value labels.",
                "description_kind": "markdown",
                "computed": true
              },
              "manager_id": {
                "type": "string",
                "description": "The instance manager ID, if any.",
                "description_kind": "markdown",
                "computed": true
              },
              "manager_type": {
                "type": "string",
                "description": "The instance manager type (instance pool, SKS node pool, etc.), if any.",
                "description_kind": "markdown",
                "computed": true
              },
              "name": {
                "type": "string",
                "description": "The instance name to match (conflicts with `id`).",
                "description_kind": "markdown",
                "optional": true
              },
              "private_network_ids": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "The list of attached [exoscale_private_network](../resources/private_network.md) (IDs).",
                "description_kind": "markdown",
                "computed": true
              },
              "public_ip_address": {
                "type": "string",
                "description": "The instance (main network interface) IPv4 address.",
                "description_kind": "markdown",
                "computed": true
              },
              "reverse_dns": {
                "type": "string",
                "description": "Domain name for reverse DNS record.",
                "description_kind": "markdown",
                "computed": true
              },
              "security_group_ids": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "The list of attached [exoscale_security_group](../resources/security_group.md) (IDs).",
                "description_kind": "markdown",
                "computed": true
              },
              "ssh_key": {
                "type": "string",
                "description": "The [exoscale_ssh_key](../resources/ssh_key.md) (name) authorized on the instance.",
                "description_kind": "markdown",
                "computed": true
              },
              "state": {
                "type": "string",
                "description": "The instance state.",
                "description_kind": "markdown",
                "computed": true
              },
              "template_id": {
                "type": "string",
                "description": "The instance [exoscale_compute_template](./compute_template.md) ID.",
                "description_kind": "markdown",
                "computed": true
              },
              "type": {
                "type": "string",
                "description": "The instance type.",
                "description_kind": "markdown",
                "computed": true
              },
              "user_data": {
                "type": "string",
                "description": "The instance [cloud-init](http://cloudinit.readthedocs.io/en/latest/) configuration.",
                "description_kind": "markdown",
                "computed": true
              },
              "zone": {
                "type": "string",
                "description": "The Exoscale [Zone](https://www.exoscale.com/datacenters/) name.",
                "description_kind": "markdown",
                "required": true
              }
            },
            "description": "Fetch Exoscale [Compute Instances](https://community.exoscale.com/documentation/compute/) data.\n\nCorresponding resource: [exoscale_compute_instance](../resources/compute_instance.md).",
            "description_kind": "markdown"
          }
        },
        "exoscale_compute_instance_list": {
          "version": 0,
          "block": {
            "attributes": {
              "created_at": {
                "type": "string",
                "description": "Match against this string. If you supply a string that begins and ends with a \"/\" it will be matched as a regex.",
                "description_kind": "markdown",
                "optional": true
              },
              "deploy_target_id": {
                "type": "string",
                "description": "Match against this string. If you supply a string that begins and ends with a \"/\" it will be matched as a regex.",
                "description_kind": "markdown",
                "optional": true
              },
              "disk_size": {
                "type": "number",
                "description": "Match against this int",
                "description_kind": "markdown",
                "optional": true
              },
              "id": {
                "type": "string",
                "description": "Match against this string. If you supply a string that begins and ends with a \"/\" it will be matched as a regex.",
                "description_kind": "markdown",
                "optional": true
              },
              "instances": {
                "type": [
                  "list",
                  [
                    "object",
                    {
                      "anti_affinity_group_ids": [
                        "set",
                        "string"
                      ],
                      "created_at": "string",
                      "deploy_target_id": "string",
                      "disk_size": "number",
                      "elastic_ip_ids": [
                        "set",
                        "string"
                      ],
                      "id": "string",
                      "ipv6": "bool",
                      "ipv6_address": "string",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "manager_id": "string",
                      "manager_type": "string",
                      "name": "string",
                      "private_network_ids": [
                        "set",
                        "string"
                      ],
                      "public_ip_address": "string",
                      "reverse_dns": "string",
                      "security_group_ids": [
                        "set",
                        "string"
                      ],
                      "ssh_key": "string",
                      "state": "string",
                      "template_id": "string",
                      "type": "string",
                      "user_data": "string",
                      "zone": "string"
                    }
                  ]
                ],
                "description": "The list of [exoscale_compute_instance](./compute_instance.md).",
                "description_kind": "markdown",
                "computed": true
              },
              "ipv6": {
                "type": "bool",
                "description": "Match against this bool",
                "description_kind": "markdown",
                "optional": true
              },
              "ipv6_address": {
                "type": "string",
                "description": "Match against this string. If you supply a string that begins and ends with a \"/\" it will be matched as a regex.",
                "description_kind": "markdown",
                "optional": true
              },
              "labels": {
                "type": [
                  "map",
                  "string"
                ],
                "description": "Match against key/values. Keys are matched exactly, while values may be matched as a regex if you supply a string that begins and ends with \"/\"",
                "description_kind": "markdown",
                "optional": true
              },
              "manager_id": {
                "type": "string",
                "description": "Match against this string. If you supply a string that begins and ends with a \"/\" it will be matched as a regex.",
                "description_kind": "markdown",
                "optional": true
              },
              "manager_type": {
                "type": "string",
                "description": "Match against this string. If you supply a string that begins and ends with a \"/\" it will be matched as a regex.",
                "description_kind": "markdown",
                "optional": true
              },
              "name": {
                "type": "string",
                "description": "Match against this string. If you supply a string that begins and ends with a \"/\" it will be matched as a regex.",
                "description_kind": "markdown",
                "optional": true
              },
              "public_ip_address": {
                "type": "string",
                "description": "Match against this string. If you supply a string that begins and ends with a \"/\" it will be matched as a regex.",
                "description_kind": "markdown",
                "optional": true
              },
              "reverse_dns": {
                "type": "string",
                "description": "Match against this string. If you supply a string that begins and ends with a \"/\" it will be matched as a regex.",
                "description_kind": "markdown",
                "optional": true
              },
              "ssh_key": {
                "type": "string",
                "description": "Match against this string. If you supply a string that begins and ends with a \"/\" it will be matched as a regex.",
                "description_kind": "markdown",
                "optional": true
              },
              "state": {
                "type": "string",
                "description": "Match against this string. If you supply a string that begins and ends with a \"/\" it will be matched as a regex.",
                "description_kind": "markdown",
                "optional": true
              },
              "template_id": {
                "type": "string",
                "description": "Match against this string. If you supply a string that begins and ends with a \"/\" it will be matched as a regex.",
                "description_kind": "markdown",
                "optional": true
              },
              "type": {
                "type": "string",
                "description": "Match against this string. If you supply a string that begins and ends with a \"/\" it will be matched as a regex.",
                "description_kind": "markdown",
                "optional": true
              },
              "user_data": {
                "type": "string",
                "description": "Match against this string. If you supply a string that begins and ends with a \"/\" it will be matched as a regex.",
                "description_kind": "markdown",
                "optional": true
              },
              "zone": {
                "type": "string",
                "description": "The Exoscale [Zone](https://www.exoscale.com/datacenters/) name.",
                "description_kind": "markdown",
                "required": true
              }
            },
            "description": "List Exoscale [Compute Instances](https://community.exoscale.com/documentation/compute/).\n\nCorresponding resource: [exoscale_compute_instance](../resources/compute_instance.md).",
            "description_kind": "markdown"
          }
        },
        "exoscale_compute_ipaddress": {
          "version": 0,
          "block": {
            "attributes": {
              "description": {
                "type": "string",
                "description": "The EIP description to match.",
                "description_kind": "markdown",
                "optional": true
              },
              "id": {
                "type": "string",
                "description": "The Elastic IP (EIP) ID to match.",
                "description_kind": "markdown",
                "optional": true
              },
              "ip_address": {
                "type": "string",
                "description": "The EIP IPv4 address to match.",
                "description_kind": "markdown",
                "optional": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "description": "The EIP tags to match.",
                "description_kind": "markdown",
                "optional": true
              },
              "zone": {
                "type": "string",
                "description": "The Exoscale Zone name.",
                "description_kind": "markdown",
                "required": true
              }
            },
            "description": "Fetch Exoscale Elastic IPs (EIP) data.",
            "description_kind": "markdown"
          }
        },
        "exoscale_compute_template": {
          "version": 0,
          "block": {
            "attributes": {
              "filter": {
                "type": "string",
                "description": "A template category filter (default: `featured`); among: - `featured` - official Exoscale templates - `community` - community-contributed templates - `mine` - custom templates private to my organization",
                "description_kind": "markdown",
                "optional": true
              },
              "id": {
                "type": "string",
                "description": "The compute instance template ID to match (conflicts with `name`).",
                "description_kind": "markdown",
                "optional": true
              },
              "name": {
                "type": "string",
                "description": "The template name to match (conflicts with `id`).",
                "description_kind": "markdown",
                "optional": true
              },
              "username": {
                "type": "string",
                "description": "Username for logging into a compute instance based on this template",
                "description_kind": "markdown",
                "computed": true
              },
              "zone": {
                "type": "string",
                "description": "The Exoscale [Zone](https://www.exoscale.com/datacenters/) name.",
                "description_kind": "markdown",
                "required": true
              }
            },
            "description": "Fetch Exoscale Compute Instance Templates data.",
            "description_kind": "markdown"
          }
        },
        "exoscale_database_uri": {
          "version": 0,
          "block": {
            "attributes": {
              "id": {
                "type": "string",
                "description": "The ID of this resource.",
                "description_kind": "markdown",
                "computed": true
              },
              "name": {
                "type": "string",
                "description": "The database name to match.",
                "description_kind": "markdown",
                "required": true
              },
              "type": {
                "type": "string",
                "description": "The type of the database service (`kafka`, `mysql`, `opensearch`, `pg`, `redis`).",
                "description_kind": "markdown",
                "required": true
              },
              "uri": {
                "type": "string",
                "description": "The database service connection URI.",
                "description_kind": "markdown",
                "computed": true,
                "sensitive": true
              },
              "zone": {
                "type": "string",
                "description": "The Exoscale Zone name.",
                "description_kind": "markdown",
                "required": true
              }
            },
            "block_types": {
              "timeouts": {
                "nesting_mode": "single",
                "block": {
                  "attributes": {
                    "read": {
                      "type": "string",
                      "description": "A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as \"30s\" or \"2h45m\". Valid time units are \"s\" (seconds), \"m\" (minutes), \"h\" (hours). Read operations occur during any refresh or planning operation when refresh is enabled.",
                      "description_kind": "plain",
                      "optional": true
                    }
                  },
                  "description_kind": "plain"
                }
              }
            },
            "description": "Fetch Exoscale [Database](https://community.exoscale.com/documentation/dbaas/) URI data.\n\nCorresponding resource: [exoscale_database](../resources/database.md).",
            "description_kind": "markdown"
          }
        },
        "exoscale_domain": {
          "version": 0,
          "block": {
            "attributes": {
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "description": "The DNS domain name to match.",
                "description_kind": "markdown",
                "required": true
              }
            },
            "description": "Fetch Exoscale [DNS](https://community.exoscale.com/documentation/dns/) Domains data.\n\nCorresponding resource: [exoscale_domain](../resources/domain.md).",
            "description_kind": "markdown"
          }
        },
        "exoscale_domain_record": {
          "version": 0,
          "block": {
            "attributes": {
              "domain": {
                "type": "string",
                "description": "The [exoscale_domain](./domain.md) name to match.",
                "description_kind": "markdown",
                "required": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "records": {
                "type": [
                  "list",
                  [
                    "object",
                    {
                      "content": "string",
                      "domain": "string",
                      "id": "string",
                      "name": "string",
                      "prio": "number",
                      "record_type": "string",
                      "ttl": "number"
                    }
                  ]
                ],
                "description": "The list of matching records. Structure is documented below.",
                "description_kind": "markdown",
                "computed": true
              }
            },
            "block_types": {
              "filter": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "content_regex": {
                      "type": "string",
                      "description": "A regular expression to match the record content.",
                      "description_kind": "markdown",
                      "optional": true
                    },
                    "id": {
                      "type": "string",
                      "description": "The record ID to match.",
                      "description_kind": "markdown",
                      "optional": true
                    },
                    "name": {
                      "type": "string",
                      "description": "The domain record name to match.",
                      "description_kind": "markdown",
                      "optional": true
                    },
                    "record_type": {
                      "type": "string",
                      "description": "The record type to match.",
                      "description_kind": "markdown",
                      "optional": true
                    }
                  },
                  "description": "Filter to apply when looking up domain records.",
                  "description_kind": "markdown"
                },
                "min_items": 1,
                "max_items": 1
              }
            },
            "description": "Fetch Exoscale [DNS](https://community.exoscale.com/documentation/dns/) Domain Records data.\n\nCorresponding resource: [exoscale_domain_record](../resources/domain_record.md).",
            "description_kind": "markdown"
          }
        },
        "exoscale_elastic_ip": {
          "version": 0,
          "block": {
            "attributes": {
              "address_family": {
                "type": "string",
                "description": "The Elastic IP (EIP) address family (`inet4` or `inet6`).",
                "description_kind": "markdown",
                "computed": true
              },
              "cidr": {
                "type": "string",
                "description": "The Elastic IP (EIP) CIDR.",
                "description_kind": "markdown",
                "computed": true
              },
              "description": {
                "type": "string",
                "description": "The Elastic IP (EIP) description.",
                "description_kind": "markdown",
                "computed": true
              },
              "healthcheck": {
                "type": [
                  "list",
                  [
                    "object",
                    {
                      "interval": "number",
                      "mode": "string",
                      "port": "number",
                      "strikes_fail": "number",
                      "strikes_ok": "number",
                      "timeout": "number",
                      "tls_skip_verify": "bool",
                      "tls_sni": "string",
                      "uri": "string"
                    }
                  ]
                ],
                "description": "The *managed* EIP healthcheck configuration.",
                "description_kind": "markdown",
                "computed": true
              },
              "id": {
                "type": "string",
                "description": "The Elastic IP (EIP) ID to match (conflicts with `ip_address` and `labels`).",
                "description_kind": "markdown",
                "optional": true
              },
              "ip_address": {
                "type": "string",
                "description": "The EIP IPv4 or IPv6 address to match (conflicts with `id` and `labels`).",
                "description_kind": "markdown",
                "optional": true
              },
              "labels": {
                "type": [
                  "map",
                  "string"
                ],
                "description": "The EIP labels to match (conflicts with `ip_address` and `id`).",
                "description_kind": "markdown",
                "optional": true
              },
              "reverse_dns": {
                "type": "string",
                "description": "Domain name for reverse DNS record.",
                "description_kind": "markdown",
                "computed": true
              },
              "zone": {
                "type": "string",
                "description": "The Exocale [Zone](https://www.exoscale.com/datacenters/) name.",
                "description_kind": "markdown",
                "required": true
              }
            },
            "description": "Fetch Exoscale [Elastic IPs (EIP)](https://community.exoscale.com/documentation/compute/eip/) data.\n\nCorresponding resource: [exoscale_elastic_ip](../resources/elastic_ip.md).",
            "description_kind": "markdown"
          }
        },
        "exoscale_iam_api_key": {
          "version": 0,
          "block": {
            "attributes": {
              "id": {
                "type": "string",
                "description": "The ID of this resource.",
                "description_kind": "markdown",
                "computed": true
              },
              "key": {
                "type": "string",
                "description": "The IAM API Key to match.",
                "description_kind": "markdown",
                "required": true
              },
              "name": {
                "type": "string",
                "description": "IAM API Key name.",
                "description_kind": "markdown",
                "computed": true
              },
              "role_id": {
                "type": "string",
                "description": "IAM API Key role ID.",
                "description_kind": "markdown",
                "computed": true
              }
            },
            "block_types": {
              "timeouts": {
                "nesting_mode": "single",
                "block": {
                  "attributes": {
                    "read": {
                      "type": "string",
                      "description": "A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as \"30s\" or \"2h45m\". Valid time units are \"s\" (seconds), \"m\" (minutes), \"h\" (hours). Read operations occur during any refresh or planning operation when refresh is enabled.",
                      "description_kind": "plain",
                      "optional": true
                    }
                  },
                  "description_kind": "plain"
                }
              }
            },
            "description": "Fetch Exoscale [IAM](https://community.exoscale.com/documentation/iam/) API Key.\n\nCorresponding resource: [exoscale_iam_role](../resources/iam_api_key.md).",
            "description_kind": "markdown"
          }
        },
        "exoscale_iam_org_policy": {
          "version": 0,
          "block": {
            "attributes": {
              "default_service_strategy": {
                "type": "string",
                "description": "Default service strategy (`allow` or `deny`).",
                "description_kind": "markdown",
                "computed": true
              },
              "id": {
                "type": "string",
                "description": "The ID of this resource.",
                "description_kind": "markdown",
                "computed": true
              },
              "services": {
                "nested_type": {
                  "attributes": {
                    "rules": {
                      "nested_type": {
                        "attributes": {
                          "action": {
                            "type": "string",
                            "description": "IAM policy rule action (`allow` or `deny`).",
                            "description_kind": "markdown",
                            "computed": true
                          },
                          "expression": {
                            "type": "string",
                            "description": "IAM policy rule expression.",
                            "description_kind": "markdown",
                            "computed": true
                          },
                          "resources": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description": "List of resources that IAM policy rule applies to.",
                            "description_kind": "markdown",
                            "computed": true
                          }
                        },
                        "nesting_mode": "list"
                      },
                      "description": "List of IAM service rules (if type is `rules`).",
                      "description_kind": "markdown",
                      "computed": true
                    },
                    "type": {
                      "type": "string",
                      "description": "Service type (`rules`, `allow`, or `deny`).",
                      "description_kind": "markdown",
                      "computed": true
                    }
                  },
                  "nesting_mode": "map"
                },
                "description": "IAM policy services.",
                "description_kind": "markdown",
                "computed": true
              }
            },
            "block_types": {
              "timeouts": {
                "nesting_mode": "single",
                "block": {
                  "attributes": {
                    "read": {
                      "type": "string",
                      "description": "A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as \"30s\" or \"2h45m\". Valid time units are \"s\" (seconds), \"m\" (minutes), \"h\" (hours). Read operations occur during any refresh or planning operation when refresh is enabled.",
                      "description_kind": "plain",
                      "optional": true
                    }
                  },
                  "description_kind": "plain"
                }
              }
            },
            "description": "Fetch Exoscale [IAM](https://community.exoscale.com/documentation/iam/) Organization Policy.\n\nCorresponding resource: [exoscale_iam_org_policy](../resources/iam_org_policy.md).",
            "description_kind": "markdown"
          }
        },
        "exoscale_iam_role": {
          "version": 0,
          "block": {
            "attributes": {
              "description": {
                "type": "string",
                "description": "A free-form text describing the IAM Role",
                "description_kind": "markdown",
                "computed": true
              },
              "editable": {
                "type": "bool",
                "description": "Defines if IAM Role Policy is editable or not.",
                "description_kind": "markdown",
                "computed": true
              },
              "id": {
                "type": "string",
                "description": "The role ID to match (conflicts with `name`).",
                "description_kind": "markdown",
                "optional": true,
                "computed": true
              },
              "labels": {
                "type": [
                  "map",
                  "string"
                ],
                "description": "IAM Role labels.",
                "description_kind": "markdown",
                "computed": true
              },
              "name": {
                "type": "string",
                "description": "the role name to match (conflicts with `id`).",
                "description_kind": "markdown",
                "optional": true,
                "computed": true
              },
              "permissions": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "IAM Role permissions.",
                "description_kind": "markdown",
                "computed": true
              },
              "policy": {
                "nested_type": {
                  "attributes": {
                    "default_service_strategy": {
                      "type": "string",
                      "description": "Default service strategy (`allow` or `deny`).",
                      "description_kind": "markdown",
                      "computed": true
                    },
                    "services": {
                      "nested_type": {
                        "attributes": {
                          "rules": {
                            "nested_type": {
                              "attributes": {
                                "action": {
                                  "type": "string",
                                  "description": "IAM policy rule action (`allow` or `deny`).",
                                  "description_kind": "markdown",
                                  "computed": true
                                },
                                "expression": {
                                  "type": "string",
                                  "description": "IAM policy rule expression.",
                                  "description_kind": "markdown",
                                  "computed": true
                                },
                                "resources": {
                                  "type": [
                                    "list",
                                    "string"
                                  ],
                                  "description": "List of resources that IAM policy rule applies to.",
                                  "description_kind": "markdown",
                                  "computed": true
                                }
                              },
                              "nesting_mode": "list"
                            },
                            "description": "List of IAM service rules (if type is `rules`).",
                            "description_kind": "markdown",
                            "computed": true
                          },
                          "type": {
                            "type": "string",
                            "description": "Service type (`rules`, `allow`, or `deny`).",
                            "description_kind": "markdown",
                            "computed": true
                          }
                        },
                        "nesting_mode": "map"
                      },
                      "description": "IAM policy services.",
                      "description_kind": "markdown",
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "IAM Policy.",
                "description_kind": "markdown",
                "computed": true
              }
            },
            "block_types": {
              "timeouts": {
                "nesting_mode": "single",
                "block": {
                  "attributes": {
                    "read": {
                      "type": "string",
                      "description": "A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as \"30s\" or \"2h45m\". Valid time units are \"s\" (seconds), \"m\" (minutes), \"h\" (hours). Read operations occur during any refresh or planning operation when refresh is enabled.",
                      "description_kind": "plain",
                      "optional": true
                    }
                  },
                  "description_kind": "plain"
                }
              }
            },
            "description": "Fetch Exoscale [IAM](https://community.exoscale.com/documentation/iam/) Role.\n\nCorresponding resource: [exoscale_iam_role](../resources/iam_role.md).",
            "description_kind": "markdown"
          }
        },
        "exoscale_instance_pool": {
          "version": 0,
          "block": {
            "attributes": {
              "affinity_group_ids": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "The list of attached [exoscale_anti_affinity_group](../resources/anti_affinity_group.md) (IDs).",
                "description_kind": "markdown",
                "computed": true
              },
              "deploy_target_id": {
                "type": "string",
                "description": "The deploy target ID.",
                "description_kind": "markdown",
                "computed": true
              },
              "description": {
                "type": "string",
                "description": "The instance pool description.",
                "description_kind": "markdown",
                "computed": true
              },
              "disk_size": {
                "type": "number",
                "description": "The managed instances disk size.",
                "description_kind": "markdown",
                "computed": true
              },
              "elastic_ip_ids": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "The list of attached [exoscale_elastic_ip](../resources/elastic_ip.md) (IDs).",
                "description_kind": "markdown",
                "computed": true
              },
              "id": {
                "type": "string",
                "description": "The instance pool ID to match (conflicts with `name`).",
                "description_kind": "markdown",
                "optional": true
              },
              "instance_prefix": {
                "type": "string",
                "description": "The string used to prefix the managed instances name.",
                "description_kind": "markdown",
                "computed": true
              },
              "instance_type": {
                "type": "string",
                "description": "The managed instances type.",
                "description_kind": "markdown",
                "computed": true
              },
              "instances": {
                "type": [
                  "set",
                  [
                    "object",
                    {
                      "id": "string",
                      "ipv6_address": "string",
                      "name": "string",
                      "public_ip_address": "string"
                    }
                  ]
                ],
                "description": "The list of managed instances. Structure is documented below.",
                "description_kind": "markdown",
                "computed": true
              },
              "ipv6": {
                "type": "bool",
                "description": "Whether IPv6 is enabled on managed instances.",
                "description_kind": "markdown",
                "computed": true
              },
              "key_pair": {
                "type": "string",
                "description": "The [exoscale_ssh_key](../resources/ssh_key.md) (name) authorized on the managed instances.",
                "description_kind": "markdown",
                "computed": true
              },
              "labels": {
                "type": [
                  "map",
                  "string"
                ],
                "description": "A map of key/value labels.",
                "description_kind": "markdown",
                "optional": true
              },
              "name": {
                "type": "string",
                "description": "The pool name to match (conflicts with `id`).",
                "description_kind": "markdown",
                "optional": true
              },
              "network_ids": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "The list of attached [exoscale_private_network](../resources/private_network.md) (IDs).",
                "description_kind": "markdown",
                "computed": true
              },
              "security_group_ids": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "The list of attached [exoscale_security_group](../resources/security_group.md) (IDs).",
                "description_kind": "markdown",
                "computed": true
              },
              "size": {
                "type": "number",
                "description": "The number managed instances.",
                "description_kind": "markdown",
                "computed": true
              },
              "state": {
                "type": "string",
                "description": "The pool state.",
                "description_kind": "markdown",
                "computed": true
              },
              "template_id": {
                "type": "string",
                "description": "The managed instances [exoscale_compute_template](./compute_template.md) ID.",
                "description_kind": "markdown",
                "computed": true
              },
              "user_data": {
                "type": "string",
                "description": "[cloud-init](http://cloudinit.readthedocs.io/en/latest/) configuration.",
                "description_kind": "markdown",
                "computed": true
              },
              "zone": {
                "type": "string",
                "description": "The Exoscale [Zone](https://www.exoscale.com/datacenters/) name.",
                "description_kind": "markdown",
                "required": true
              }
            },
            "description": "Fetch Exoscale [Instance Pools](https://community.exoscale.com/documentation/compute/instance-pools/) data.\n\nCorresponding resource: [exoscale_instance_pool](../resources/instance_pool.md).",
            "description_kind": "markdown"
          }
        },
        "exoscale_instance_pool_list": {
          "version": 0,
          "block": {
            "attributes": {
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "pools": {
                "type": [
                  "list",
                  [
                    "object",
                    {
                      "affinity_group_ids": [
                        "set",
                        "string"
                      ],
                      "deploy_target_id": "string",
                      "description": "string",
                      "disk_size": "number",
                      "elastic_ip_ids": [
                        "set",
                        "string"
                      ],
                      "id": "string",
                      "instance_prefix": "string",
                      "instance_type": "string",
                      "instances": [
                        "set",
                        [
                          "object",
                          {
                            "id": "string",
                            "ipv6_address": "string",
                            "name": "string",
                            "public_ip_address": "string"
                          }
                        ]
                      ],
                      "ipv6": "bool",
                      "key_pair": "string",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "name": "string",
                      "network_ids": [
                        "set",
                        "string"
                      ],
                      "security_group_ids": [
                        "set",
                        "string"
                      ],
                      "size": "number",
                      "state": "string",
                      "template_id": "string",
                      "user_data": "string",
                      "zone": "string"
                    }
                  ]
                ],
                "description": "The list of [exoscale_instance_pool](./instance_pool.md).",
                "description_kind": "markdown",
                "computed": true
              },
              "zone": {
                "type": "string",
                "description": "The Exoscale [Zone](https://www.exoscale.com/datacenters/) name.",
                "description_kind": "markdown",
                "required": true
              }
            },
            "description": "List Exoscale [Instance Pools](https://community.exoscale.com/documentation/compute/instance-pools/).\n\nCorresponding resource: [exoscale_instance_pool](../resources/instance_pool.md).",
            "description_kind": "markdown"
          }
        },
        "exoscale_network": {
          "version": 0,
          "block": {
            "attributes": {
              "description": {
                "type": "string",
                "description": "The private network description.",
                "description_kind": "markdown",
                "computed": true
              },
              "end_ip": {
                "type": "string",
                "description": "The first/last IPv4 addresses used by the DHCP service for dynamic leases.",
                "description_kind": "markdown",
                "computed": true
              },
              "id": {
                "type": "string",
                "description": "The private network ID to match (conflicts with `name`).",
                "description_kind": "markdown",
                "optional": true
              },
              "name": {
                "type": "string",
                "description": "The network name to match (conflicts with `id`).",
                "description_kind": "markdown",
                "optional": true
              },
              "netmask": {
                "type": "string",
                "description": "The network mask defining the IPv4 network allowed for static leases.",
                "description_kind": "markdown",
                "computed": true
              },
              "start_ip": {
                "type": "string",
                "description": "The first/last IPv4 addresses used by the DHCP service for dynamic leases.",
                "description_kind": "markdown",
                "computed": true
              },
              "zone": {
                "type": "string",
                "description": "(Required) The Exoscale Zone name.",
                "description_kind": "markdown",
                "required": true
              }
            },
            "description": "Fetch Exoscale Private Networks data.",
            "description_kind": "markdown"
          }
        },
        "exoscale_nlb": {
          "version": 0,
          "block": {
            "attributes": {
              "created_at": {
                "type": "string",
                "description": "The NLB creation date.",
                "description_kind": "markdown",
                "computed": true
              },
              "description": {
                "type": "string",
                "description": "The Network Load Balancers (NLB) description.",
                "description_kind": "markdown",
                "computed": true
              },
              "id": {
                "type": "string",
                "description": "The Network Load Balancers (NLB) ID to match (conflicts with `name`).",
                "description_kind": "markdown",
                "optional": true
              },
              "ip_address": {
                "type": "string",
                "description": "The NLB public IPv4 address.",
                "description_kind": "markdown",
                "computed": true
              },
              "name": {
                "type": "string",
                "description": "The NLB name to match (conflicts with `id`).",
                "description_kind": "markdown",
                "optional": true
              },
              "state": {
                "type": "string",
                "description": "The current NLB state.",
                "description_kind": "markdown",
                "computed": true
              },
              "zone": {
                "type": "string",
                "description": "The Exoscale [Zone](https://www.exoscale.com/datacenters/) name.",
                "description_kind": "markdown",
                "required": true
              }
            },
            "description": "Fetch Exoscale [Network Load Balancers (NLB)](https://community.exoscale.com/documentation/compute/network-load-balancer/) data.\n\nCorresponding resource: [exoscale_nlb](../resources/nlb.md).",
            "description_kind": "markdown"
          }
        },
        "exoscale_nlb_service_list": {
          "version": 0,
          "block": {
            "attributes": {
              "id": {
                "type": "string",
                "description": "The ID of this resource.",
                "description_kind": "markdown",
                "computed": true
              },
              "nlb_id": {
                "type": "string",
                "description": "The NLB ID to match (conflicts with `name`).",
                "description_kind": "markdown",
                "optional": true
              },
              "nlb_name": {
                "type": "string",
                "description": "The NLB name to match (conflicts with `id`).",
                "description_kind": "markdown",
                "optional": true
              },
              "services": {
                "nested_type": {
                  "attributes": {
                    "description": {
                      "type": "string",
                      "description": "NLB service description.",
                      "description_kind": "markdown",
                      "computed": true
                    },
                    "healthcheck": {
                      "type": [
                        "object",
                        {
                          "interval": "number",
                          "mode": "string",
                          "port": "number",
                          "retries": "number",
                          "timeout": "number",
                          "tls_sni": "string",
                          "uri": "string"
                        }
                      ],
                      "description_kind": "plain",
                      "computed": true
                    },
                    "id": {
                      "type": "string",
                      "description": "NLB service ID.",
                      "description_kind": "markdown",
                      "computed": true
                    },
                    "instance_pool_id": {
                      "type": "string",
                      "description": "The [exoscale_instance_pool](./instance_pool.md) (ID) to forward traffic to.",
                      "description_kind": "markdown",
                      "computed": true
                    },
                    "name": {
                      "type": "string",
                      "description": "NLB Service name.",
                      "description_kind": "markdown",
                      "computed": true
                    },
                    "port": {
                      "type": "number",
                      "description": "Port exposed on the NLB's public IP.",
                      "description_kind": "markdown",
                      "computed": true
                    },
                    "protocol": {
                      "type": "string",
                      "description": "Network traffic protocol.",
                      "description_kind": "markdown",
                      "computed": true
                    },
                    "state": {
                      "type": "string",
                      "description": "NLB Service State.",
                      "description_kind": "markdown",
                      "computed": true
                    },
                    "strategy": {
                      "type": "string",
                      "description": "The strategy (`round-robin`|`source-hash`).",
                      "description_kind": "markdown",
                      "computed": true
                    },
                    "target_port": {
                      "type": "number",
                      "description": "Port on which the network traffic will be forwarded to on the receiving instance.",
                      "description_kind": "markdown",
                      "computed": true
                    }
                  },
                  "nesting_mode": "list"
                },
                "description": "The list of [exoscale_nlb_service](./nlb_service.md).",
                "description_kind": "markdown",
                "computed": true
              },
              "zone": {
                "type": "string",
                "description": "The Exoscale [Zone](https://www.exoscale.com/datacenters/) name.",
                "description_kind": "markdown",
                "required": true
              }
            },
            "block_types": {
              "timeouts": {
                "nesting_mode": "single",
                "block": {
                  "attributes": {
                    "read": {
                      "type": "string",
                      "description": "A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as \"30s\" or \"2h45m\". Valid time units are \"s\" (seconds), \"m\" (minutes), \"h\" (hours). Read operations occur during any refresh or planning operation when refresh is enabled.",
                      "description_kind": "plain",
                      "optional": true
                    }
                  },
                  "description_kind": "plain"
                }
              }
            },
            "description": "Fetch Exoscale [Network Load Balancers (NLB)](https://community.exoscale.com/documentation/compute/network-load-balancer/) Services.\n\nCorresponding resource: [exoscale_nlb](../resources/nlb.md).",
            "description_kind": "plain"
          }
        },
        "exoscale_private_network": {
          "version": 0,
          "block": {
            "attributes": {
              "description": {
                "type": "string",
                "description": "The private network description.",
                "description_kind": "markdown",
                "optional": true
              },
              "end_ip": {
                "type": "string",
                "description": "The first/last IPv4 addresses used by the DHCP service for dynamic leases.",
                "description_kind": "markdown",
                "computed": true
              },
              "id": {
                "type": "string",
                "description": "The private network ID to match (conflicts with `name`).",
                "description_kind": "markdown",
                "optional": true
              },
              "labels": {
                "type": [
                  "map",
                  "string"
                ],
                "description": "A map of key/value labels.",
                "description_kind": "markdown",
                "optional": true
              },
              "name": {
                "type": "string",
                "description": "The network name to match (conflicts with `id`).",
                "description_kind": "markdown",
                "optional": true
              },
              "netmask": {
                "type": "string",
                "description": "The network mask defining the IPv4 network allowed for static leases.",
                "description_kind": "markdown",
                "computed": true
              },
              "start_ip": {
                "type": "string",
                "description": "The first/last IPv4 addresses used by the DHCP service for dynamic leases.",
                "description_kind": "markdown",
                "computed": true
              },
              "zone": {
                "type": "string",
                "description": "The Exoscale [Zone](https://www.exoscale.com/datacenters/) name.",
                "description_kind": "markdown",
                "required": true
              }
            },
            "description": "Fetch Exoscale [Private Networks](https://community.exoscale.com/documentation/compute/private-networks/) data.\n\nCorresponding resource: [exoscale_private_network](../resources/private_network.md).",
            "description_kind": "markdown"
          }
        },
        "exoscale_security_group": {
          "version": 0,
          "block": {
            "attributes": {
              "external_sources": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "The list of external network sources, in [CIDR](https://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing#CIDR_notatio) notation.",
                "description_kind": "markdown",
                "computed": true
              },
              "id": {
                "type": "string",
                "description": "The security group ID to match (conflicts with `name`)",
                "description_kind": "markdown",
                "optional": true
              },
              "name": {
                "type": "string",
                "description": "The name to match (conflicts with `id`)",
                "description_kind": "markdown",
                "optional": true
              }
            },
            "description": "Fetch Exoscale [Security Groups](https://community.exoscale.com/documentation/compute/security-groups/) data.\n\nCorresponding resource: [exoscale_security_group](../resources/security_group.md).",
            "description_kind": "markdown"
          }
        },
        "exoscale_sks_cluster": {
          "version": 0,
          "block": {
            "attributes": {
              "addons": {
                "type": [
                  "set",
                  "string"
                ],
                "description_kind": "plain",
                "deprecated": true,
                "optional": true,
                "computed": true
              },
              "aggregation_ca": {
                "type": "string",
                "description": "The CA certificate (in PEM format) for TLS communications between the control plane and the aggregation layer (e.g. `metrics-server`).",
                "description_kind": "markdown",
                "optional": true,
                "computed": true
              },
              "auto_upgrade": {
                "type": "bool",
                "description": "Enable automatic upgrading of the control plane version.",
                "description_kind": "markdown",
                "optional": true
              },
              "cni": {
                "type": "string",
                "description": "The CNI plugin that is to be used. Defaults to \"calico\".",
                "description_kind": "markdown",
                "optional": true
              },
              "control_plane_ca": {
                "type": "string",
                "description": "The CA certificate (in PEM format) for TLS communications between control plane components.",
                "description_kind": "markdown",
                "optional": true,
                "computed": true
              },
              "created_at": {
                "type": "string",
                "description": "The cluster creation date.",
                "description_kind": "markdown",
                "optional": true,
                "computed": true
              },
              "description": {
                "type": "string",
                "description": "A free-form text describing the cluster.",
                "description_kind": "markdown",
                "optional": true
              },
              "endpoint": {
                "type": "string",
                "description": "The cluster API endpoint.",
                "description_kind": "markdown",
                "optional": true,
                "computed": true
              },
              "exoscale_ccm": {
                "type": "bool",
                "description": "Deploy the Exoscale [Cloud Controller Manager](https://github.com/exoscale/exoscale-cloud-controller-manager/) in the control plane (boolean; default: `true`; may only be set at creation time).",
                "description_kind": "markdown",
                "optional": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true
              },
              "kubelet_ca": {
                "type": "string",
                "description": "The CA certificate (in PEM format) for TLS communications between kubelets and the control plane.",
                "description_kind": "markdown",
                "optional": true,
                "computed": true
              },
              "labels": {
                "type": [
                  "map",
                  "string"
                ],
                "description": "A map of key/value labels.",
                "description_kind": "markdown",
                "optional": true
              },
              "metrics_server": {
                "type": "bool",
                "description": "Deploy the [Kubernetes Metrics Server](https://github.com/kubernetes-sigs/metrics-server/) in the control plane (boolean; default: `true`; may only be set at creation time).",
                "description_kind": "markdown",
                "optional": true
              },
              "name": {
                "type": "string",
                "description_kind": "plain",
                "optional": true
              },
              "nodepools": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "The list of [exoscale_sks_nodepool](./sks_nodepool.md) (IDs) attached to the cluster.",
                "description_kind": "markdown",
                "optional": true,
                "computed": true
              },
              "service_level": {
                "type": "string",
                "description": "The service level of the control plane (`pro` or `starter`; default: `pro`; may only be set at creation time).",
                "description_kind": "markdown",
                "optional": true
              },
              "state": {
                "type": "string",
                "description": "The cluster state.",
                "description_kind": "markdown",
                "optional": true,
                "computed": true
              },
              "version": {
                "type": "string",
                "description": "The version of the control plane (default: latest version available from the API; see `exo compute sks versions` for reference; may only be set at creation time).",
                "description_kind": "markdown",
                "optional": true,
                "computed": true
              },
              "zone": {
                "type": "string",
                "description_kind": "plain",
                "required": true
              }
            },
            "block_types": {
              "oidc": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "client_id": {
                      "type": "string",
                      "description": "The OpenID client ID.",
                      "description_kind": "markdown",
                      "required": true
                    },
                    "groups_claim": {
                      "type": "string",
                      "description": "An OpenID JWT claim to use as the user's group.",
                      "description_kind": "markdown",
                      "optional": true
                    },
                    "groups_prefix": {
                      "type": "string",
                      "description": "An OpenID prefix prepended to group claims.",
                      "description_kind": "markdown",
                      "optional": true
                    },
                    "issuer_url": {
                      "type": "string",
                      "description": "The OpenID provider URL.",
                      "description_kind": "markdown",
                      "required": true
                    },
                    "required_claim": {
                      "type": [
                        "map",
                        "string"
                      ],
                      "description": "A map of key/value pairs that describes a required claim in the OpenID Token.",
                      "description_kind": "markdown",
                      "optional": true
                    },
                    "username_claim": {
                      "type": "string",
                      "description": "An OpenID JWT claim to use as the user name.",
                      "description_kind": "markdown",
                      "optional": true
                    },
                    "username_prefix": {
                      "type": "string",
                      "description": "An OpenID prefix prepended to username claims.",
                      "description_kind": "markdown",
                      "optional": true
                    }
                  },
                  "description": "An OpenID Connect configuration to provide to the Kubernetes API server (may only be set at creation time). Structure is documented below.",
                  "description_kind": "markdown"
                },
                "max_items": 1
              }
            },
            "description_kind": "plain"
          }
        },
        "exoscale_sks_cluster_list": {
          "version": 0,
          "block": {
            "attributes": {
              "aggregation_ca": {
                "type": "string",
                "description": "Match against this string. If you supply a string that begins and ends with a \"/\" it will be matched as a regex.",
                "description_kind": "markdown",
                "optional": true
              },
              "auto_upgrade": {
                "type": "bool",
                "description": "Match against this bool",
                "description_kind": "markdown",
                "optional": true
              },
              "clusters": {
                "type": [
                  "list",
                  [
                    "object",
                    {
                      "addons": [
                        "set",
                        "string"
                      ],
                      "aggregation_ca": "string",
                      "auto_upgrade": "bool",
                      "cni": "string",
                      "control_plane_ca": "string",
                      "created_at": "string",
                      "description": "string",
                      "endpoint": "string",
                      "exoscale_ccm": "bool",
                      "id": "string",
                      "kubelet_ca": "string",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "metrics_server": "bool",
                      "name": "string",
                      "nodepools": [
                        "set",
                        "string"
                      ],
                      "oidc": [
                        "list",
                        [
                          "object",
                          {
                            "client_id": "string",
                            "groups_claim": "string",
                            "groups_prefix": "string",
                            "issuer_url": "string",
                            "required_claim": [
                              "map",
                              "string"
                            ],
                            "username_claim": "string",
                            "username_prefix": "string"
                          }
                        ]
                      ],
                      "service_level": "string",
                      "state": "string",
                      "version": "string",
                      "zone": "string"
                    }
                  ]
                ],
                "description_kind": "plain",
                "computed": true
              },
              "cni": {
                "type": "string",
                "description": "Match against this string. If you supply a string that begins and ends with a \"/\" it will be matched as a regex.",
                "description_kind": "markdown",
                "optional": true
              },
              "control_plane_ca": {
                "type": "string",
                "description": "Match against this string. If you supply a string that begins and ends with a \"/\" it will be matched as a regex.",
                "description_kind": "markdown",
                "optional": true
              },
              "created_at": {
                "type": "string",
                "description": "Match against this string. If you supply a string that begins and ends with a \"/\" it will be matched as a regex.",
                "description_kind": "markdown",
                "optional": true
              },
              "description": {
                "type": "string",
                "description": "Match against this string. If you supply a string that begins and ends with a \"/\" it will be matched as a regex.",
                "description_kind": "markdown",
                "optional": true
              },
              "endpoint": {
                "type": "string",
                "description": "Match against this string. If you supply a string that begins and ends with a \"/\" it will be matched as a regex.",
                "description_kind": "markdown",
                "optional": true
              },
              "exoscale_ccm": {
                "type": "bool",
                "description": "Match against this bool",
                "description_kind": "markdown",
                "optional": true
              },
              "id": {
                "type": "string",
                "description": "Match against this string. If you supply a string that begins and ends with a \"/\" it will be matched as a regex.",
                "description_kind": "markdown",
                "optional": true
              },
              "kubelet_ca": {
                "type": "string",
                "description": "Match against this string. If you supply a string that begins and ends with a \"/\" it will be matched as a regex.",
                "description_kind": "markdown",
                "optional": true
              },
              "labels": {
                "type": [
                  "map",
                  "string"
                ],
                "description": "Match against key/values. Keys are matched exactly, while values may be matched as a regex if you supply a string that begins and ends with \"/\"",
                "description_kind": "markdown",
                "optional": true
              },
              "metrics_server": {
                "type": "bool",
                "description": "Match against this bool",
                "description_kind": "markdown",
                "optional": true
              },
              "name": {
                "type": "string",
                "description": "Match against this string. If you supply a string that begins and ends with a \"/\" it will be matched as a regex.",
                "description_kind": "markdown",
                "optional": true
              },
              "service_level": {
                "type": "string",
                "description": "Match against this string. If you supply a string that begins and ends with a \"/\" it will be matched as a regex.",
                "description_kind": "markdown",
                "optional": true
              },
              "state": {
                "type": "string",
                "description": "Match against this string. If you supply a string that begins and ends with a \"/\" it will be matched as a regex.",
                "description_kind": "markdown",
                "optional": true
              },
              "version": {
                "type": "string",
                "description": "Match against this string. If you supply a string that begins and ends with a \"/\" it will be matched as a regex.",
                "description_kind": "markdown",
                "optional": true
              },
              "zone": {
                "type": "string",
                "description": "The Exoscale [Zone](https://www.exoscale.com/datacenters/) name.",
                "description_kind": "markdown",
                "required": true
              }
            },
            "description_kind": "plain"
          }
        },
        "exoscale_sks_nodepool": {
          "version": 0,
          "block": {
            "attributes": {
              "anti_affinity_group_ids": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "A list of [exoscale_anti_affinity_group](./anti_affinity_group.md) (IDs) to be attached to the managed instances.",
                "description_kind": "markdown",
                "optional": true
              },
              "cluster_id": {
                "type": "string",
                "description_kind": "plain",
                "required": true
              },
              "created_at": {
                "type": "string",
                "description": "The pool creation date.",
                "description_kind": "markdown",
                "optional": true,
                "computed": true
              },
              "deploy_target_id": {
                "type": "string",
                "description": "A deploy target ID.",
                "description_kind": "markdown",
                "optional": true
              },
              "description": {
                "type": "string",
                "description": "A free-form text describing the pool.",
                "description_kind": "markdown",
                "optional": true
              },
              "disk_size": {
                "type": "number",
                "description": "The managed instances disk size (GiB; default: `50`).",
                "description_kind": "markdown",
                "optional": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true
              },
              "instance_pool_id": {
                "type": "string",
                "description": "The underlying [exoscale_instance_pool](./instance_pool.md) ID.",
                "description_kind": "markdown",
                "optional": true,
                "computed": true
              },
              "instance_prefix": {
                "type": "string",
                "description": "The string used to prefix the managed instances name (default `pool`).",
                "description_kind": "markdown",
                "optional": true
              },
              "instance_type": {
                "type": "string",
                "description": "The managed compute instances type (`<family>.<size>`, e.g. `standard.medium`; use the [Exoscale CLI](https://github.com/exoscale/cli/) - `exo compute instance-type list` - for the list of available types).",
                "description_kind": "markdown",
                "optional": true
              },
              "labels": {
                "type": [
                  "map",
                  "string"
                ],
                "description": "A map of key/value labels.",
                "description_kind": "markdown",
                "optional": true
              },
              "name": {
                "type": "string",
                "description_kind": "plain",
                "optional": true
              },
              "private_network_ids": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "A list of [exoscale_private_network](./private_network.md) (IDs) to be attached to the managed instances.",
                "description_kind": "markdown",
                "optional": true
              },
              "security_group_ids": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "A list of [exoscale_security_group](./security_group.md) (IDs) to be attached to the managed instances.",
                "description_kind": "markdown",
                "optional": true
              },
              "size": {
                "type": "number",
                "description_kind": "plain",
                "optional": true
              },
              "state": {
                "type": "string",
                "description": "The current pool state.",
                "description_kind": "markdown",
                "optional": true,
                "computed": true
              },
              "storage_lvm": {
                "type": "bool",
                "description": "Create nodes with non-standard partitioning for persistent storage (requires min 100G of disk space) (may only be set at creation time).",
                "description_kind": "markdown",
                "optional": true
              },
              "taints": {
                "type": [
                  "map",
                  "string"
                ],
                "description": "A map of key/value Kubernetes [taints](https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/) (`<value>:<effect>`).",
                "description_kind": "markdown",
                "optional": true
              },
              "template_id": {
                "type": "string",
                "description": "The managed instances template ID.",
                "description_kind": "markdown",
                "optional": true,
                "computed": true
              },
              "version": {
                "type": "string",
                "description": "The managed instances version.",
                "description_kind": "markdown",
                "optional": true,
                "computed": true
              },
              "zone": {
                "type": "string",
                "description_kind": "plain",
                "required": true
              }
            },
            "description_kind": "plain"
          }
        },
        "exoscale_sks_nodepool_list": {
          "version": 0,
          "block": {
            "attributes": {
              "cluster_id": {
                "type": "string",
                "description": "Match against this string. If you supply a string that begins and ends with a \"/\" it will be matched as a regex.",
                "description_kind": "markdown",
                "optional": true
              },
              "created_at": {
                "type": "string",
                "description": "Match against this string. If you supply a string that begins and ends with a \"/\" it will be matched as a regex.",
                "description_kind": "markdown",
                "optional": true
              },
              "deploy_target_id": {
                "type": "string",
                "description": "Match against this string. If you supply a string that begins and ends with a \"/\" it will be matched as a regex.",
                "description_kind": "markdown",
                "optional": true
              },
              "description": {
                "type": "string",
                "description": "Match against this string. If you supply a string that begins and ends with a \"/\" it will be matched as a regex.",
                "description_kind": "markdown",
                "optional": true
              },
              "disk_size": {
                "type": "number",
                "description": "Match against this int",
                "description_kind": "markdown",
                "optional": true
              },
              "id": {
                "type": "string",
                "description": "Match against this string. If you supply a string that begins and ends with a \"/\" it will be matched as a regex.",
                "description_kind": "markdown",
                "optional": true
              },
              "instance_pool_id": {
                "type": "string",
                "description": "Match against this string. If you supply a string that begins and ends with a \"/\" it will be matched as a regex.",
                "description_kind": "markdown",
                "optional": true
              },
              "instance_prefix": {
                "type": "string",
                "description": "Match against this string. If you supply a string that begins and ends with a \"/\" it will be matched as a regex.",
                "description_kind": "markdown",
                "optional": true
              },
              "instance_type": {
                "type": "string",
                "description": "Match against this string. If you supply a string that begins and ends with a \"/\" it will be matched as a regex.",
                "description_kind": "markdown",
                "optional": true
              },
              "labels": {
                "type": [
                  "map",
                  "string"
                ],
                "description": "Match against key/values. Keys are matched exactly, while values may be matched as a regex if you supply a string that begins and ends with \"/\"",
                "description_kind": "markdown",
                "optional": true
              },
              "name": {
                "type": "string",
                "description": "Match against this string. If you supply a string that begins and ends with a \"/\" it will be matched as a regex.",
                "description_kind": "markdown",
                "optional": true
              },
              "nodepools": {
                "type": [
                  "list",
                  [
                    "object",
                    {
                      "anti_affinity_group_ids": [
                        "set",
                        "string"
                      ],
                      "cluster_id": "string",
                      "created_at": "string",
                      "deploy_target_id": "string",
                      "description": "string",
                      "disk_size": "number",
                      "id": "string",
                      "instance_pool_id": "string",
                      "instance_prefix": "string",
                      "instance_type": "string",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "name": "string",
                      "private_network_ids": [
                        "set",
                        "string"
                      ],
                      "security_group_ids": [
                        "set",
                        "string"
                      ],
                      "size": "number",
                      "state": "string",
                      "storage_lvm": "bool",
                      "taints": [
                        "map",
                        "string"
                      ],
                      "template_id": "string",
                      "version": "string",
                      "zone": "string"
                    }
                  ]
                ],
                "description_kind": "plain",
                "computed": true
              },
              "size": {
                "type": "number",
                "description": "Match against this int",
                "description_kind": "markdown",
                "optional": true
              },
              "state": {
                "type": "string",
                "description": "Match against this string. If you supply a string that begins and ends with a \"/\" it will be matched as a regex.",
                "description_kind": "markdown",
                "optional": true
              },
              "storage_lvm": {
                "type": "bool",
                "description": "Match against this bool",
                "description_kind": "markdown",
                "optional": true
              },
              "taints": {
                "type": [
                  "map",
                  "string"
                ],
                "description": "Match against key/values. Keys are matched exactly, while values may be matched as a regex if you supply a string that begins and ends with \"/\"",
                "description_kind": "markdown",
                "optional": true
              },
              "template_id": {
                "type": "string",
                "description": "Match against this string. If you supply a string that begins and ends with a \"/\" it will be matched as a regex.",
                "description_kind": "markdown",
                "optional": true
              },
              "version": {
                "type": "string",
                "description": "Match against this string. If you supply a string that begins and ends with a \"/\" it will be matched as a regex.",
                "description_kind": "markdown",
                "optional": true
              },
              "zone": {
                "type": "string",
                "description": "The Exoscale [Zone](https://www.exoscale.com/datacenters/) name.",
                "description_kind": "markdown",
                "required": true
              }
            },
            "description_kind": "plain"
          }
        },
        "exoscale_template": {
          "version": 0,
          "block": {
            "attributes": {
              "default_user": {
                "type": "string",
                "description": "Username to use to log into a compute instance based on this template",
                "description_kind": "markdown",
                "computed": true
              },
              "id": {
                "type": "string",
                "description": "The compute instance template ID to match (conflicts with `name`).",
                "description_kind": "markdown",
                "optional": true
              },
              "name": {
                "type": "string",
                "description": "The template name to match (conflicts with `id`) (when multiple templates have the same name, the newest one will be returned).",
                "description_kind": "markdown",
                "optional": true
              },
              "visibility": {
                "type": "string",
                "description": "A template category filter (default: `public`); among: - `public` - official Exoscale templates - `private` - custom templates private to my organization",
                "description_kind": "markdown",
                "optional": true
              },
              "zone": {
                "type": "string",
                "description": "The Exoscale [Zone](https://www.exoscale.com/datacenters/) name.",
                "description_kind": "markdown",
                "required": true
              }
            },
            "description": "Fetch Exoscale [Compute Instance Templates](https://community.exoscale.com/documentation/compute/custom-templates/) data.",
            "description_kind": "markdown"
          }
        },
        "exoscale_zones": {
          "version": 0,
          "block": {
            "attributes": {
              "zones": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "List of zones",
                "description_kind": "plain",
                "computed": true
              }
            },
            "description": "Lists all zones.",
            "description_kind": "plain"
          }
        }
      }
    }
  }
}
