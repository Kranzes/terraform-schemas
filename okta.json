{
  "format_version": "1.0",
  "provider_schemas": {
    "registry.terraform.io/okta/okta": {
      "provider": {
        "version": 0,
        "block": {
          "attributes": {
            "access_token": {
              "type": "string",
              "description": "Bearer token granting privileges to Okta API.",
              "description_kind": "plain",
              "optional": true
            },
            "api_token": {
              "type": "string",
              "description": "API Token granting privileges to Okta API.",
              "description_kind": "plain",
              "optional": true
            },
            "backoff": {
              "type": "bool",
              "description": "Use exponential back off strategy for rate limits.",
              "description_kind": "plain",
              "optional": true
            },
            "base_url": {
              "type": "string",
              "description": "The Okta url. (Use 'oktapreview.com' for Okta testing)",
              "description_kind": "plain",
              "optional": true
            },
            "client_id": {
              "type": "string",
              "description": "API Token granting privileges to Okta API.",
              "description_kind": "plain",
              "optional": true
            },
            "http_proxy": {
              "type": "string",
              "description": "Alternate HTTP proxy of scheme://hostname or scheme://hostname:port format",
              "description_kind": "plain",
              "optional": true
            },
            "log_level": {
              "type": "number",
              "description": "providers log level. Minimum is 1 (TRACE), and maximum is 5 (ERROR)",
              "description_kind": "plain",
              "optional": true
            },
            "max_api_capacity": {
              "type": "number",
              "description": "(Experimental) sets what percentage of capacity the provider can use of the total rate limit capacity while making calls to the Okta management API endpoints. Okta API operates in one minute buckets. See Okta Management API Rate Limits: https://developer.okta.com/docs/reference/rl-global-mgmt/",
              "description_kind": "plain",
              "optional": true
            },
            "max_retries": {
              "type": "number",
              "description": "maximum number of retries to attempt before erroring out.",
              "description_kind": "plain",
              "optional": true
            },
            "max_wait_seconds": {
              "type": "number",
              "description": "maximum seconds to wait when rate limit is hit. We use exponential backoffs when backoff is enabled.",
              "description_kind": "plain",
              "optional": true
            },
            "min_wait_seconds": {
              "type": "number",
              "description": "minimum seconds to wait when rate limit is hit. We use exponential backoffs when backoff is enabled.",
              "description_kind": "plain",
              "optional": true
            },
            "org_name": {
              "type": "string",
              "description": "The organization to manage in Okta.",
              "description_kind": "plain",
              "optional": true
            },
            "parallelism": {
              "type": "number",
              "description": "Number of concurrent requests to make within a resource where bulk operations are not possible. Take note of https://developer.okta.com/docs/api/getting_started/rate-limits.",
              "description_kind": "plain",
              "optional": true
            },
            "private_key": {
              "type": "string",
              "description": "API Token granting privileges to Okta API.",
              "description_kind": "plain",
              "optional": true
            },
            "private_key_id": {
              "type": "string",
              "description": "API Token Id granting privileges to Okta API.",
              "description_kind": "plain",
              "optional": true
            },
            "request_timeout": {
              "type": "number",
              "description": "Timeout for single request (in seconds) which is made to Okta, the default is `0` (means no limit is set). The maximum value can be `300`.",
              "description_kind": "plain",
              "optional": true
            },
            "scopes": {
              "type": [
                "set",
                "string"
              ],
              "description": "API Token granting privileges to Okta API.",
              "description_kind": "plain",
              "optional": true
            }
          },
          "description_kind": "plain"
        }
      },
      "resource_schemas": {
        "okta_admin_role_custom": {
          "version": 0,
          "block": {
            "attributes": {
              "description": {
                "type": "string",
                "description": "A human-readable description of the new Role",
                "description_kind": "plain",
                "required": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "label": {
                "type": "string",
                "description": "The name given to the new Role",
                "description_kind": "plain",
                "required": true
              },
              "permissions": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "The permissions that the new Role grants.",
                "description_kind": "plain",
                "optional": true
              }
            },
            "description": "Resource to manage administrative Role assignments for a User",
            "description_kind": "plain"
          }
        },
        "okta_admin_role_custom_assignments": {
          "version": 0,
          "block": {
            "attributes": {
              "custom_role_id": {
                "type": "string",
                "description": "ID of the Custom Role",
                "description_kind": "plain",
                "required": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "members": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "The hrefs that point to User(s) and/or Group(s) that receive the Role",
                "description_kind": "plain",
                "optional": true
              },
              "resource_set_id": {
                "type": "string",
                "description": "ID of the target Resource Set",
                "description_kind": "plain",
                "required": true
              }
            },
            "description": "Resource to manage the assignment and unassignment of Custom Roles",
            "description_kind": "plain"
          }
        },
        "okta_admin_role_targets": {
          "version": 0,
          "block": {
            "attributes": {
              "apps": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "List of app names (name represents set of app instances) or a combination of app name and app instance ID (like 'salesforce' or 'facebook.0oapsqQ6dv19pqyEo0g3')",
                "description_kind": "plain",
                "optional": true
              },
              "groups": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "List of group IDs",
                "description_kind": "plain",
                "optional": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "role_id": {
                "type": "string",
                "description": "ID of a role",
                "description_kind": "plain",
                "computed": true
              },
              "role_type": {
                "type": "string",
                "description": "Type of the role that is assigned to the user and supports optional targets",
                "description_kind": "plain",
                "required": true
              },
              "user_id": {
                "type": "string",
                "description": "User associated with the role",
                "description_kind": "plain",
                "required": true
              }
            },
            "description_kind": "plain"
          }
        },
        "okta_app_access_policy_assignment": {
          "version": 0,
          "block": {
            "attributes": {
              "app_id": {
                "type": "string",
                "description": "The application ID; this value is immutable and can not be updated.",
                "description_kind": "plain",
                "required": true
              },
              "id": {
                "type": "string",
                "description": "The ID of the resource. This ID is simply the application ID.",
                "description_kind": "plain",
                "computed": true
              },
              "policy_id": {
                "type": "string",
                "description": "The access policy ID.",
                "description_kind": "plain",
                "required": true
              }
            },
            "description": "Manages assignment of Access Policy to an Application",
            "description_kind": "plain"
          }
        },
        "okta_app_auto_login": {
          "version": 0,
          "block": {
            "attributes": {
              "accessibility_error_redirect_url": {
                "type": "string",
                "description": "Custom error page URL",
                "description_kind": "plain",
                "optional": true
              },
              "accessibility_login_redirect_url": {
                "type": "string",
                "description": "Custom login page URL",
                "description_kind": "plain",
                "optional": true
              },
              "accessibility_self_service": {
                "type": "bool",
                "description": "Enable self service",
                "description_kind": "plain",
                "optional": true
              },
              "admin_note": {
                "type": "string",
                "description": "Application notes for admins.",
                "description_kind": "plain",
                "optional": true
              },
              "app_links_json": {
                "type": "string",
                "description": "Displays specific appLinks for the app",
                "description_kind": "plain",
                "optional": true
              },
              "app_settings_json": {
                "type": "string",
                "description": "Application settings in JSON format",
                "description_kind": "plain",
                "optional": true
              },
              "auto_submit_toolbar": {
                "type": "bool",
                "description": "Display auto submit toolbar",
                "description_kind": "plain",
                "optional": true
              },
              "credentials_scheme": {
                "type": "string",
                "description": "Application credentials scheme",
                "description_kind": "plain",
                "optional": true
              },
              "enduser_note": {
                "type": "string",
                "description": "Application notes for end users.",
                "description_kind": "plain",
                "optional": true
              },
              "hide_ios": {
                "type": "bool",
                "description": "Do not display application icon on mobile app",
                "description_kind": "plain",
                "optional": true
              },
              "hide_web": {
                "type": "bool",
                "description": "Do not display application icon to users",
                "description_kind": "plain",
                "optional": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "label": {
                "type": "string",
                "description": "Pretty name of app.",
                "description_kind": "plain",
                "required": true
              },
              "logo": {
                "type": "string",
                "description": "Local path to logo of the application.",
                "description_kind": "plain",
                "optional": true
              },
              "logo_url": {
                "type": "string",
                "description": "URL of the application's logo",
                "description_kind": "plain",
                "computed": true
              },
              "name": {
                "type": "string",
                "description": "Name of the app.",
                "description_kind": "plain",
                "computed": true
              },
              "preconfigured_app": {
                "type": "string",
                "description": "Preconfigured app name",
                "description_kind": "plain",
                "optional": true
              },
              "reveal_password": {
                "type": "bool",
                "description": "Allow user to reveal password",
                "description_kind": "plain",
                "optional": true
              },
              "shared_password": {
                "type": "string",
                "description": "Shared password, required for certain schemes.",
                "description_kind": "plain",
                "optional": true
              },
              "shared_username": {
                "type": "string",
                "description": "Shared username, required for certain schemes.",
                "description_kind": "plain",
                "optional": true
              },
              "sign_on_mode": {
                "type": "string",
                "description": "Sign on mode of application.",
                "description_kind": "plain",
                "computed": true
              },
              "sign_on_redirect_url": {
                "type": "string",
                "description": "Post login redirect URL",
                "description_kind": "plain",
                "optional": true
              },
              "sign_on_url": {
                "type": "string",
                "description": "Login URL",
                "description_kind": "plain",
                "optional": true
              },
              "status": {
                "type": "string",
                "description": "Status of application.",
                "description_kind": "plain",
                "optional": true
              },
              "user_name_template": {
                "type": "string",
                "description": "Username template",
                "description_kind": "plain",
                "optional": true
              },
              "user_name_template_push_status": {
                "type": "string",
                "description": "Push username on update",
                "description_kind": "plain",
                "optional": true
              },
              "user_name_template_suffix": {
                "type": "string",
                "description": "Username template suffix",
                "description_kind": "plain",
                "optional": true
              },
              "user_name_template_type": {
                "type": "string",
                "description": "Username template type",
                "description_kind": "plain",
                "optional": true
              }
            },
            "block_types": {
              "timeouts": {
                "nesting_mode": "single",
                "block": {
                  "attributes": {
                    "create": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "read": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "update": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true
                    }
                  },
                  "description_kind": "plain"
                }
              }
            },
            "description_kind": "plain"
          }
        },
        "okta_app_basic_auth": {
          "version": 0,
          "block": {
            "attributes": {
              "accessibility_error_redirect_url": {
                "type": "string",
                "description": "Custom error page URL",
                "description_kind": "plain",
                "optional": true
              },
              "accessibility_login_redirect_url": {
                "type": "string",
                "description": "Custom login page URL",
                "description_kind": "plain",
                "optional": true
              },
              "accessibility_self_service": {
                "type": "bool",
                "description": "Enable self service",
                "description_kind": "plain",
                "optional": true
              },
              "admin_note": {
                "type": "string",
                "description": "Application notes for admins.",
                "description_kind": "plain",
                "optional": true
              },
              "app_links_json": {
                "type": "string",
                "description": "Displays specific appLinks for the app",
                "description_kind": "plain",
                "optional": true
              },
              "auth_url": {
                "type": "string",
                "description": "Login button field",
                "description_kind": "plain",
                "required": true
              },
              "auto_submit_toolbar": {
                "type": "bool",
                "description": "Display auto submit toolbar",
                "description_kind": "plain",
                "optional": true
              },
              "enduser_note": {
                "type": "string",
                "description": "Application notes for end users.",
                "description_kind": "plain",
                "optional": true
              },
              "hide_ios": {
                "type": "bool",
                "description": "Do not display application icon on mobile app",
                "description_kind": "plain",
                "optional": true
              },
              "hide_web": {
                "type": "bool",
                "description": "Do not display application icon to users",
                "description_kind": "plain",
                "optional": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "label": {
                "type": "string",
                "description": "Pretty name of app.",
                "description_kind": "plain",
                "required": true
              },
              "logo": {
                "type": "string",
                "description": "Local path to logo of the application.",
                "description_kind": "plain",
                "optional": true
              },
              "logo_url": {
                "type": "string",
                "description": "URL of the application's logo",
                "description_kind": "plain",
                "computed": true
              },
              "name": {
                "type": "string",
                "description": "Name of the app.",
                "description_kind": "plain",
                "computed": true
              },
              "sign_on_mode": {
                "type": "string",
                "description": "Sign on mode of application.",
                "description_kind": "plain",
                "computed": true
              },
              "status": {
                "type": "string",
                "description": "Status of application.",
                "description_kind": "plain",
                "optional": true
              },
              "url": {
                "type": "string",
                "description": "Login password field",
                "description_kind": "plain",
                "required": true
              }
            },
            "block_types": {
              "timeouts": {
                "nesting_mode": "single",
                "block": {
                  "attributes": {
                    "create": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "read": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "update": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true
                    }
                  },
                  "description_kind": "plain"
                }
              }
            },
            "description_kind": "plain"
          }
        },
        "okta_app_bookmark": {
          "version": 0,
          "block": {
            "attributes": {
              "accessibility_error_redirect_url": {
                "type": "string",
                "description": "Custom error page URL",
                "description_kind": "plain",
                "optional": true
              },
              "accessibility_login_redirect_url": {
                "type": "string",
                "description": "Custom login page URL",
                "description_kind": "plain",
                "optional": true
              },
              "accessibility_self_service": {
                "type": "bool",
                "description": "Enable self service",
                "description_kind": "plain",
                "optional": true
              },
              "admin_note": {
                "type": "string",
                "description": "Application notes for admins.",
                "description_kind": "plain",
                "optional": true
              },
              "app_links_json": {
                "type": "string",
                "description": "Displays specific appLinks for the app",
                "description_kind": "plain",
                "optional": true
              },
              "authentication_policy": {
                "type": "string",
                "description": "Id of this apps authentication policy",
                "description_kind": "plain",
                "optional": true
              },
              "auto_submit_toolbar": {
                "type": "bool",
                "description": "Display auto submit toolbar",
                "description_kind": "plain",
                "optional": true
              },
              "enduser_note": {
                "type": "string",
                "description": "Application notes for end users.",
                "description_kind": "plain",
                "optional": true
              },
              "hide_ios": {
                "type": "bool",
                "description": "Do not display application icon on mobile app",
                "description_kind": "plain",
                "optional": true
              },
              "hide_web": {
                "type": "bool",
                "description": "Do not display application icon to users",
                "description_kind": "plain",
                "optional": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "label": {
                "type": "string",
                "description": "Pretty name of app.",
                "description_kind": "plain",
                "required": true
              },
              "logo": {
                "type": "string",
                "description": "Local path to logo of the application.",
                "description_kind": "plain",
                "optional": true
              },
              "logo_url": {
                "type": "string",
                "description": "URL of the application's logo",
                "description_kind": "plain",
                "computed": true
              },
              "name": {
                "type": "string",
                "description": "Name of the app.",
                "description_kind": "plain",
                "computed": true
              },
              "request_integration": {
                "type": "bool",
                "description": "Would you like Okta to add an integration for this app?",
                "description_kind": "plain",
                "optional": true
              },
              "sign_on_mode": {
                "type": "string",
                "description": "Sign on mode of application.",
                "description_kind": "plain",
                "computed": true
              },
              "status": {
                "type": "string",
                "description": "Status of application.",
                "description_kind": "plain",
                "optional": true
              },
              "url": {
                "type": "string",
                "description_kind": "plain",
                "required": true
              }
            },
            "block_types": {
              "timeouts": {
                "nesting_mode": "single",
                "block": {
                  "attributes": {
                    "create": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "read": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "update": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true
                    }
                  },
                  "description_kind": "plain"
                }
              }
            },
            "description_kind": "plain"
          }
        },
        "okta_app_group_assignment": {
          "version": 0,
          "block": {
            "attributes": {
              "app_id": {
                "type": "string",
                "description": "App to associate group with",
                "description_kind": "plain",
                "required": true
              },
              "group_id": {
                "type": "string",
                "description": "Group associated with the application",
                "description_kind": "plain",
                "required": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "priority": {
                "type": "number",
                "description": "Priority of group assignment.",
                "description_kind": "plain",
                "optional": true
              },
              "profile": {
                "type": "string",
                "description": "JSON document containing [application profile](https://developer.okta.com/docs/reference/api/apps/#profile-object)",
                "description_kind": "plain",
                "optional": true
              },
              "retain_assignment": {
                "type": "bool",
                "description": "Retain the group assignment on destroy. If set to true, the resource will be removed from state but not from the Okta app.",
                "description_kind": "plain",
                "optional": true
              }
            },
            "block_types": {
              "timeouts": {
                "nesting_mode": "single",
                "block": {
                  "attributes": {
                    "create": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "read": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "update": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true
                    }
                  },
                  "description_kind": "plain"
                }
              }
            },
            "description_kind": "plain"
          }
        },
        "okta_app_group_assignments": {
          "version": 0,
          "block": {
            "attributes": {
              "app_id": {
                "type": "string",
                "description": "The ID of the application to assign a group to.",
                "description_kind": "plain",
                "required": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              }
            },
            "block_types": {
              "group": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description": "A group to associate with the application",
                      "description_kind": "plain",
                      "required": true
                    },
                    "priority": {
                      "type": "number",
                      "description": "Priority of group assignment",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "profile": {
                      "type": "string",
                      "description": "JSON document containing [application profile](https://developer.okta.com/docs/reference/api/apps/#profile-object)",
                      "description_kind": "plain",
                      "optional": true
                    }
                  },
                  "description": "A group to assign to this application",
                  "description_kind": "plain"
                },
                "min_items": 1
              }
            },
            "description_kind": "plain"
          }
        },
        "okta_app_oauth": {
          "version": 0,
          "block": {
            "attributes": {
              "accessibility_error_redirect_url": {
                "type": "string",
                "description": "Custom error page URL",
                "description_kind": "plain",
                "optional": true
              },
              "accessibility_login_redirect_url": {
                "type": "string",
                "description": "Custom login page URL",
                "description_kind": "plain",
                "optional": true
              },
              "accessibility_self_service": {
                "type": "bool",
                "description": "Enable self service",
                "description_kind": "plain",
                "optional": true
              },
              "admin_note": {
                "type": "string",
                "description": "Application notes for admins.",
                "description_kind": "plain",
                "optional": true
              },
              "app_links_json": {
                "type": "string",
                "description": "Displays specific appLinks for the app",
                "description_kind": "plain",
                "optional": true
              },
              "app_settings_json": {
                "type": "string",
                "description": "Application settings in JSON format",
                "description_kind": "plain",
                "optional": true
              },
              "authentication_policy": {
                "type": "string",
                "description": "Id of this apps authentication policy",
                "description_kind": "plain",
                "optional": true
              },
              "auto_key_rotation": {
                "type": "bool",
                "description": "Requested key rotation mode.",
                "description_kind": "plain",
                "optional": true
              },
              "auto_submit_toolbar": {
                "type": "bool",
                "description": "Display auto submit toolbar",
                "description_kind": "plain",
                "optional": true
              },
              "client_basic_secret": {
                "type": "string",
                "description": "OAuth client secret key, this can be set when token_endpoint_auth_method is client_secret_basic.",
                "description_kind": "plain",
                "optional": true,
                "sensitive": true
              },
              "client_id": {
                "type": "string",
                "description": "OAuth client ID. If set during creation, app is created with this id.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "client_secret": {
                "type": "string",
                "description": "OAuth client secret key. This will be in plain text in your statefile unless you set omit_secret above.",
                "description_kind": "plain",
                "computed": true,
                "sensitive": true
              },
              "client_uri": {
                "type": "string",
                "description": "URI to a web page providing information about the client.",
                "description_kind": "plain",
                "optional": true
              },
              "consent_method": {
                "type": "string",
                "description": "*Early Access Property*. Indicates whether user consent is required or implicit. Valid values: REQUIRED, TRUSTED. Default value is TRUSTED",
                "description_kind": "plain",
                "optional": true
              },
              "enduser_note": {
                "type": "string",
                "description": "Application notes for end users.",
                "description_kind": "plain",
                "optional": true
              },
              "grant_types": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "List of OAuth 2.0 grant types. Conditional validation params found here https://developer.okta.com/docs/api/resources/apps#credentials-settings-details. Defaults to minimum requirements per app type.",
                "description_kind": "plain",
                "optional": true
              },
              "hide_ios": {
                "type": "bool",
                "description": "Do not display application icon on mobile app",
                "description_kind": "plain",
                "optional": true
              },
              "hide_web": {
                "type": "bool",
                "description": "Do not display application icon to users",
                "description_kind": "plain",
                "optional": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "implicit_assignment": {
                "type": "bool",
                "description": "*Early Access Property*. Enable Federation Broker Mode.",
                "description_kind": "plain",
                "optional": true
              },
              "issuer_mode": {
                "type": "string",
                "description": "*Early Access Property*. Indicates whether the Okta Authorization Server uses the original Okta org domain URL or a custom domain URL as the issuer of ID token for this client.",
                "description_kind": "plain",
                "optional": true
              },
              "jwks_uri": {
                "type": "string",
                "description": "URL reference to JWKS",
                "description_kind": "plain",
                "optional": true
              },
              "label": {
                "type": "string",
                "description": "Pretty name of app.",
                "description_kind": "plain",
                "required": true
              },
              "login_mode": {
                "type": "string",
                "description": "The type of Idp-Initiated login that the client supports, if any",
                "description_kind": "plain",
                "optional": true
              },
              "login_scopes": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "List of scopes to use for the request",
                "description_kind": "plain",
                "optional": true
              },
              "login_uri": {
                "type": "string",
                "description": "URI that initiates login.",
                "description_kind": "plain",
                "optional": true
              },
              "logo": {
                "type": "string",
                "description": "Local path to logo of the application.",
                "description_kind": "plain",
                "optional": true
              },
              "logo_uri": {
                "type": "string",
                "description": "URI that references a logo for the client.",
                "description_kind": "plain",
                "optional": true
              },
              "logo_url": {
                "type": "string",
                "description": "URL of the application's logo",
                "description_kind": "plain",
                "computed": true
              },
              "name": {
                "type": "string",
                "description": "Name of the app.",
                "description_kind": "plain",
                "computed": true
              },
              "omit_secret": {
                "type": "bool",
                "description": "This tells the provider not to persist the application's secret to state. If this is ever changes from true => false your app will be recreated.",
                "description_kind": "plain",
                "optional": true
              },
              "pkce_required": {
                "type": "bool",
                "description": "Require Proof Key for Code Exchange (PKCE) for additional verification key rotation mode. See: https://developer.okta.com/docs/reference/api/apps/#oauth-credential-object",
                "description_kind": "plain",
                "optional": true
              },
              "policy_uri": {
                "type": "string",
                "description": "URI to web page providing client policy document.",
                "description_kind": "plain",
                "optional": true
              },
              "post_logout_redirect_uris": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "List of URIs for redirection after logout. Note: see okta_app_oauth_post_logout_redirect_uri for appending to this list in a decentralized way.",
                "description_kind": "plain",
                "optional": true
              },
              "profile": {
                "type": "string",
                "description": "Custom JSON that represents an OAuth application's profile",
                "description_kind": "plain",
                "optional": true
              },
              "redirect_uris": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "List of URIs for use in the redirect-based flow. This is required for all application types except service. Note: see okta_app_oauth_redirect_uri for appending to this list in a decentralized way.",
                "description_kind": "plain",
                "optional": true
              },
              "refresh_token_leeway": {
                "type": "number",
                "description": "*Early Access Property* Grace period for token rotation, required with grant types refresh_token",
                "description_kind": "plain",
                "optional": true
              },
              "refresh_token_rotation": {
                "type": "string",
                "description": "*Early Access Property* Refresh token rotation behavior, required with grant types refresh_token",
                "description_kind": "plain",
                "optional": true
              },
              "response_types": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "List of OAuth 2.0 response type strings.",
                "description_kind": "plain",
                "optional": true
              },
              "sign_on_mode": {
                "type": "string",
                "description": "Sign on mode of application.",
                "description_kind": "plain",
                "computed": true
              },
              "status": {
                "type": "string",
                "description": "Status of application.",
                "description_kind": "plain",
                "optional": true
              },
              "token_endpoint_auth_method": {
                "type": "string",
                "description": "Requested authentication method for the token endpoint.",
                "description_kind": "plain",
                "optional": true
              },
              "tos_uri": {
                "type": "string",
                "description": "URI to web page providing client tos (terms of service).",
                "description_kind": "plain",
                "optional": true
              },
              "type": {
                "type": "string",
                "description": "The type of client application.",
                "description_kind": "plain",
                "required": true
              },
              "user_name_template": {
                "type": "string",
                "description": "Username template",
                "description_kind": "plain",
                "optional": true
              },
              "user_name_template_push_status": {
                "type": "string",
                "description": "Push username on update",
                "description_kind": "plain",
                "optional": true
              },
              "user_name_template_suffix": {
                "type": "string",
                "description": "Username template suffix",
                "description_kind": "plain",
                "optional": true
              },
              "user_name_template_type": {
                "type": "string",
                "description": "Username template type",
                "description_kind": "plain",
                "optional": true
              },
              "wildcard_redirect": {
                "type": "string",
                "description": "*Early Access Property*. Indicates if the client is allowed to use wildcard matching of redirect_uris",
                "description_kind": "plain",
                "optional": true
              }
            },
            "block_types": {
              "groups_claim": {
                "nesting_mode": "set",
                "block": {
                  "attributes": {
                    "filter_type": {
                      "type": "string",
                      "description": "Groups claim filter. Can only be set if type is FILTER.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "issuer_mode": {
                      "type": "string",
                      "description": "Issuer mode inherited from OAuth App",
                      "description_kind": "plain",
                      "computed": true
                    },
                    "name": {
                      "type": "string",
                      "description": "Name of the claim that will be used in the token.",
                      "description_kind": "plain",
                      "required": true
                    },
                    "type": {
                      "type": "string",
                      "description": "Groups claim type.",
                      "description_kind": "plain",
                      "required": true
                    },
                    "value": {
                      "type": "string",
                      "description": "Value of the claim. Can be an Okta Expression Language statement that evaluates at the time the token is minted.",
                      "description_kind": "plain",
                      "required": true
                    }
                  },
                  "description": "Groups claim for an OpenID Connect client application (argument is ignored when API auth is done with OAuth 2.0 credentials)",
                  "description_kind": "plain"
                },
                "max_items": 1
              },
              "jwks": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "e": {
                      "type": "string",
                      "description": "RSA Exponent",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "kid": {
                      "type": "string",
                      "description": "Key ID",
                      "description_kind": "plain",
                      "required": true
                    },
                    "kty": {
                      "type": "string",
                      "description": "Key type",
                      "description_kind": "plain",
                      "required": true
                    },
                    "n": {
                      "type": "string",
                      "description": "RSA Modulus",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "x": {
                      "type": "string",
                      "description": "X coordinate of the elliptic curve point",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "y": {
                      "type": "string",
                      "description": "Y coordinate of the elliptic curve point",
                      "description_kind": "plain",
                      "optional": true
                    }
                  },
                  "description_kind": "plain"
                }
              },
              "timeouts": {
                "nesting_mode": "single",
                "block": {
                  "attributes": {
                    "create": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "read": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "update": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true
                    }
                  },
                  "description_kind": "plain"
                }
              }
            },
            "description_kind": "plain"
          }
        },
        "okta_app_oauth_api_scope": {
          "version": 0,
          "block": {
            "attributes": {
              "app_id": {
                "type": "string",
                "description": "ID of the application.",
                "description_kind": "plain",
                "required": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "issuer": {
                "type": "string",
                "description": "The issuer of your Org Authorization Server, your Org URL.",
                "description_kind": "plain",
                "required": true
              },
              "scopes": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "Scopes of the application for which consent is granted.",
                "description_kind": "plain",
                "required": true
              }
            },
            "description_kind": "plain"
          }
        },
        "okta_app_oauth_post_logout_redirect_uri": {
          "version": 0,
          "block": {
            "attributes": {
              "app_id": {
                "type": "string",
                "description": "OAuth application ID.",
                "description_kind": "plain",
                "required": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "uri": {
                "type": "string",
                "description": "Post Logout Redirect URI to append to Okta OIDC application.",
                "description_kind": "plain",
                "required": true
              }
            },
            "description_kind": "plain",
            "deprecated": true
          }
        },
        "okta_app_oauth_redirect_uri": {
          "version": 0,
          "block": {
            "attributes": {
              "app_id": {
                "type": "string",
                "description": "OAuth application ID.",
                "description_kind": "plain",
                "required": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "uri": {
                "type": "string",
                "description": "Redirect URI to append to Okta OIDC application.",
                "description_kind": "plain",
                "required": true
              }
            },
            "description_kind": "plain",
            "deprecated": true
          }
        },
        "okta_app_oauth_role_assignment": {
          "version": 0,
          "block": {
            "attributes": {
              "client_id": {
                "type": "string",
                "description": "Client ID for the role to be assigned to",
                "description_kind": "markdown",
                "required": true
              },
              "id": {
                "type": "string",
                "description": "Role Assignment ID",
                "description_kind": "markdown",
                "computed": true
              },
              "label": {
                "type": "string",
                "description": "Label of the role assignment",
                "description_kind": "markdown",
                "computed": true
              },
              "resource_set": {
                "type": "string",
                "description": "Resource set for the custom role to assign, must be the ID of the created resource set.",
                "description_kind": "markdown",
                "optional": true
              },
              "role": {
                "type": "string",
                "description": "Custom Role ID",
                "description_kind": "markdown",
                "optional": true
              },
              "status": {
                "type": "string",
                "description": "Status of the role assignment",
                "description_kind": "markdown",
                "computed": true
              },
              "type": {
                "type": "string",
                "description": "Role type to assign. This can be one of the standard Okta roles, such as `HELP_DESK_ADMIN`, or `CUSTOM`. Using custom requires the `resource_set` and `role` attributes to be set.",
                "description_kind": "markdown",
                "required": true
              }
            },
            "description": "Manages assignment of an admin role to an OAuth application",
            "description_kind": "markdown"
          }
        },
        "okta_app_saml": {
          "version": 0,
          "block": {
            "attributes": {
              "accessibility_error_redirect_url": {
                "type": "string",
                "description": "Custom error page URL",
                "description_kind": "plain",
                "optional": true
              },
              "accessibility_login_redirect_url": {
                "type": "string",
                "description": "Custom login page URL",
                "description_kind": "plain",
                "optional": true
              },
              "accessibility_self_service": {
                "type": "bool",
                "description": "Enable self service",
                "description_kind": "plain",
                "optional": true
              },
              "acs_endpoints": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "List of ACS endpoints for this SAML application",
                "description_kind": "plain",
                "optional": true
              },
              "admin_note": {
                "type": "string",
                "description": "Application notes for admins.",
                "description_kind": "plain",
                "optional": true
              },
              "app_links_json": {
                "type": "string",
                "description": "Displays specific appLinks for the app",
                "description_kind": "plain",
                "optional": true
              },
              "app_settings_json": {
                "type": "string",
                "description": "Application settings in JSON format",
                "description_kind": "plain",
                "optional": true
              },
              "assertion_signed": {
                "type": "bool",
                "description": "Determines whether the SAML assertion is digitally signed",
                "description_kind": "plain",
                "optional": true
              },
              "audience": {
                "type": "string",
                "description": "Audience Restriction",
                "description_kind": "plain",
                "optional": true
              },
              "authentication_policy": {
                "type": "string",
                "description": "Id of this apps authentication policy",
                "description_kind": "plain",
                "optional": true
              },
              "authn_context_class_ref": {
                "type": "string",
                "description": "Identifies the SAML authentication context class for the assertion’s authentication statement",
                "description_kind": "plain",
                "optional": true
              },
              "auto_submit_toolbar": {
                "type": "bool",
                "description": "Display auto submit toolbar",
                "description_kind": "plain",
                "optional": true
              },
              "certificate": {
                "type": "string",
                "description": "cert from SAML XML metadata payload",
                "description_kind": "plain",
                "computed": true
              },
              "default_relay_state": {
                "type": "string",
                "description": "Identifies a specific application resource in an IDP initiated SSO scenario.",
                "description_kind": "plain",
                "optional": true
              },
              "destination": {
                "type": "string",
                "description": "Identifies the location where the SAML response is intended to be sent inside of the SAML assertion",
                "description_kind": "plain",
                "optional": true
              },
              "digest_algorithm": {
                "type": "string",
                "description": "Determines the digest algorithm used to digitally sign the SAML assertion and response",
                "description_kind": "plain",
                "optional": true
              },
              "embed_url": {
                "type": "string",
                "description": "The url that can be used to embed this application in other portals.",
                "description_kind": "plain",
                "computed": true
              },
              "enduser_note": {
                "type": "string",
                "description": "Application notes for end users.",
                "description_kind": "plain",
                "optional": true
              },
              "entity_key": {
                "type": "string",
                "description": "Entity ID, the ID portion of the entity_url",
                "description_kind": "plain",
                "computed": true
              },
              "entity_url": {
                "type": "string",
                "description": "Entity URL for instance http://www.okta.com/exk1fcia6d6EMsf331d8",
                "description_kind": "plain",
                "computed": true
              },
              "features": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "features to enable",
                "description_kind": "plain",
                "computed": true
              },
              "hide_ios": {
                "type": "bool",
                "description": "Do not display application icon on mobile app",
                "description_kind": "plain",
                "optional": true
              },
              "hide_web": {
                "type": "bool",
                "description": "Do not display application icon to users",
                "description_kind": "plain",
                "optional": true
              },
              "honor_force_authn": {
                "type": "bool",
                "description": "Prompt user to re-authenticate if SP asks for it",
                "description_kind": "plain",
                "optional": true
              },
              "http_post_binding": {
                "type": "string",
                "description": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Post location from the SAML metadata.",
                "description_kind": "plain",
                "computed": true
              },
              "http_redirect_binding": {
                "type": "string",
                "description": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect location from the SAML metadata.",
                "description_kind": "plain",
                "computed": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "idp_issuer": {
                "type": "string",
                "description": "SAML issuer ID",
                "description_kind": "plain",
                "optional": true
              },
              "implicit_assignment": {
                "type": "bool",
                "description": "*Early Access Property*. Enable Federation Broker Mode.",
                "description_kind": "plain",
                "optional": true
              },
              "inline_hook_id": {
                "type": "string",
                "description": "Saml Inline Hook setting",
                "description_kind": "plain",
                "optional": true
              },
              "key_id": {
                "type": "string",
                "description": "Certificate ID",
                "description_kind": "plain",
                "computed": true
              },
              "key_name": {
                "type": "string",
                "description": "Certificate name. This modulates the rotation of keys. New name == new key.",
                "description_kind": "plain",
                "optional": true
              },
              "key_years_valid": {
                "type": "number",
                "description": "Number of years the certificate is valid.",
                "description_kind": "plain",
                "optional": true
              },
              "keys": {
                "type": [
                  "list",
                  [
                    "object",
                    {
                      "created": "string",
                      "e": "string",
                      "expires_at": "string",
                      "kid": "string",
                      "kty": "string",
                      "last_updated": "string",
                      "n": "string",
                      "use": "string",
                      "x5c": [
                        "list",
                        "string"
                      ],
                      "x5t_s256": "string"
                    }
                  ]
                ],
                "description": "Application keys",
                "description_kind": "plain",
                "computed": true
              },
              "label": {
                "type": "string",
                "description": "Pretty name of app.",
                "description_kind": "plain",
                "required": true
              },
              "logo": {
                "type": "string",
                "description": "Local path to logo of the application.",
                "description_kind": "plain",
                "optional": true
              },
              "logo_url": {
                "type": "string",
                "description": "URL of the application's logo",
                "description_kind": "plain",
                "computed": true
              },
              "metadata": {
                "type": "string",
                "description": "SAML xml metadata payload",
                "description_kind": "plain",
                "computed": true
              },
              "metadata_url": {
                "type": "string",
                "description": "SAML xml metadata URL",
                "description_kind": "plain",
                "computed": true
              },
              "name": {
                "type": "string",
                "description": "Name of the app.",
                "description_kind": "plain",
                "computed": true
              },
              "preconfigured_app": {
                "type": "string",
                "description": "Name of preexisting SAML application. For instance 'slack'",
                "description_kind": "plain",
                "optional": true
              },
              "recipient": {
                "type": "string",
                "description": "The location where the app may present the SAML assertion",
                "description_kind": "plain",
                "optional": true
              },
              "request_compressed": {
                "type": "bool",
                "description": "Denotes whether the request is compressed or not.",
                "description_kind": "plain",
                "optional": true
              },
              "response_signed": {
                "type": "bool",
                "description": "Determines whether the SAML auth response message is digitally signed",
                "description_kind": "plain",
                "optional": true
              },
              "saml_signed_request_enabled": {
                "type": "bool",
                "description": "SAML Signed Request enabled",
                "description_kind": "plain",
                "optional": true
              },
              "saml_version": {
                "type": "string",
                "description": "SAML version for the app's sign-on mode",
                "description_kind": "plain",
                "optional": true
              },
              "sign_on_mode": {
                "type": "string",
                "description": "Sign on mode of application.",
                "description_kind": "plain",
                "computed": true
              },
              "signature_algorithm": {
                "type": "string",
                "description": "Signature algorithm used ot digitally sign the assertion and response",
                "description_kind": "plain",
                "optional": true
              },
              "single_logout_certificate": {
                "type": "string",
                "description": "x509 encoded certificate that the Service Provider uses to sign Single Logout requests",
                "description_kind": "plain",
                "optional": true
              },
              "single_logout_issuer": {
                "type": "string",
                "description": "The issuer of the Service Provider that generates the Single Logout request",
                "description_kind": "plain",
                "optional": true
              },
              "single_logout_url": {
                "type": "string",
                "description": "The location where the logout response is sent",
                "description_kind": "plain",
                "optional": true
              },
              "sp_issuer": {
                "type": "string",
                "description": "SAML SP issuer ID",
                "description_kind": "plain",
                "optional": true
              },
              "sso_url": {
                "type": "string",
                "description": "Single Sign On URL",
                "description_kind": "plain",
                "optional": true
              },
              "status": {
                "type": "string",
                "description": "Status of application.",
                "description_kind": "plain",
                "optional": true
              },
              "subject_name_id_format": {
                "type": "string",
                "description": "Identifies the SAML processing rules.",
                "description_kind": "plain",
                "optional": true
              },
              "subject_name_id_template": {
                "type": "string",
                "description": "Template for app user's username when a user is assigned to the app",
                "description_kind": "plain",
                "optional": true
              },
              "user_name_template": {
                "type": "string",
                "description": "Username template",
                "description_kind": "plain",
                "optional": true
              },
              "user_name_template_push_status": {
                "type": "string",
                "description": "Push username on update",
                "description_kind": "plain",
                "optional": true
              },
              "user_name_template_suffix": {
                "type": "string",
                "description": "Username template suffix",
                "description_kind": "plain",
                "optional": true
              },
              "user_name_template_type": {
                "type": "string",
                "description": "Username template type",
                "description_kind": "plain",
                "optional": true
              }
            },
            "block_types": {
              "attribute_statements": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "filter_type": {
                      "type": "string",
                      "description": "Type of group attribute filter",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "filter_value": {
                      "type": "string",
                      "description": "Filter value to use",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "name": {
                      "type": "string",
                      "description": "The reference name of the attribute statement",
                      "description_kind": "plain",
                      "required": true
                    },
                    "namespace": {
                      "type": "string",
                      "description": "The name format of the attribute",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "type": {
                      "type": "string",
                      "description": "The type of attribute statements object",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "values": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "description_kind": "plain",
                      "optional": true
                    }
                  },
                  "description_kind": "plain"
                }
              },
              "timeouts": {
                "nesting_mode": "single",
                "block": {
                  "attributes": {
                    "create": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "read": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "update": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true
                    }
                  },
                  "description_kind": "plain"
                }
              }
            },
            "description_kind": "plain"
          }
        },
        "okta_app_saml_app_settings": {
          "version": 0,
          "block": {
            "attributes": {
              "app_id": {
                "type": "string",
                "description": "Application ID",
                "description_kind": "plain",
                "required": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "settings": {
                "type": "string",
                "description": "Application settings in JSON format",
                "description_kind": "plain",
                "required": true
              }
            },
            "description_kind": "plain"
          }
        },
        "okta_app_secure_password_store": {
          "version": 0,
          "block": {
            "attributes": {
              "accessibility_error_redirect_url": {
                "type": "string",
                "description": "Custom error page URL",
                "description_kind": "plain",
                "optional": true
              },
              "accessibility_login_redirect_url": {
                "type": "string",
                "description": "Custom login page URL",
                "description_kind": "plain",
                "optional": true
              },
              "accessibility_self_service": {
                "type": "bool",
                "description": "Enable self service",
                "description_kind": "plain",
                "optional": true
              },
              "admin_note": {
                "type": "string",
                "description": "Application notes for admins.",
                "description_kind": "plain",
                "optional": true
              },
              "app_links_json": {
                "type": "string",
                "description": "Displays specific appLinks for the app",
                "description_kind": "plain",
                "optional": true
              },
              "auto_submit_toolbar": {
                "type": "bool",
                "description": "Display auto submit toolbar",
                "description_kind": "plain",
                "optional": true
              },
              "credentials_scheme": {
                "type": "string",
                "description": "Application credentials scheme",
                "description_kind": "plain",
                "optional": true
              },
              "enduser_note": {
                "type": "string",
                "description": "Application notes for end users.",
                "description_kind": "plain",
                "optional": true
              },
              "hide_ios": {
                "type": "bool",
                "description": "Do not display application icon on mobile app",
                "description_kind": "plain",
                "optional": true
              },
              "hide_web": {
                "type": "bool",
                "description": "Do not display application icon to users",
                "description_kind": "plain",
                "optional": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "label": {
                "type": "string",
                "description": "Pretty name of app.",
                "description_kind": "plain",
                "required": true
              },
              "logo": {
                "type": "string",
                "description": "Local path to logo of the application.",
                "description_kind": "plain",
                "optional": true
              },
              "logo_url": {
                "type": "string",
                "description": "URL of the application's logo",
                "description_kind": "plain",
                "computed": true
              },
              "name": {
                "type": "string",
                "description": "Name of the app.",
                "description_kind": "plain",
                "computed": true
              },
              "optional_field1": {
                "type": "string",
                "description": "Name of optional param in the login form",
                "description_kind": "plain",
                "optional": true
              },
              "optional_field1_value": {
                "type": "string",
                "description": "Name of optional value in login form",
                "description_kind": "plain",
                "optional": true
              },
              "optional_field2": {
                "type": "string",
                "description": "Name of optional param in the login form",
                "description_kind": "plain",
                "optional": true
              },
              "optional_field2_value": {
                "type": "string",
                "description": "Name of optional value in login form",
                "description_kind": "plain",
                "optional": true
              },
              "optional_field3": {
                "type": "string",
                "description": "Name of optional param in the login form",
                "description_kind": "plain",
                "optional": true
              },
              "optional_field3_value": {
                "type": "string",
                "description": "Name of optional value in login form",
                "description_kind": "plain",
                "optional": true
              },
              "password_field": {
                "type": "string",
                "description": "Login password field",
                "description_kind": "plain",
                "required": true
              },
              "reveal_password": {
                "type": "bool",
                "description": "Allow user to reveal password",
                "description_kind": "plain",
                "optional": true
              },
              "shared_password": {
                "type": "string",
                "description": "Shared password, required for certain schemes.",
                "description_kind": "plain",
                "optional": true
              },
              "shared_username": {
                "type": "string",
                "description": "Shared username, required for certain schemes.",
                "description_kind": "plain",
                "optional": true
              },
              "sign_on_mode": {
                "type": "string",
                "description": "Sign on mode of application.",
                "description_kind": "plain",
                "computed": true
              },
              "status": {
                "type": "string",
                "description": "Status of application.",
                "description_kind": "plain",
                "optional": true
              },
              "url": {
                "type": "string",
                "description": "Login URL",
                "description_kind": "plain",
                "required": true
              },
              "user_name_template": {
                "type": "string",
                "description": "Username template",
                "description_kind": "plain",
                "optional": true
              },
              "user_name_template_push_status": {
                "type": "string",
                "description": "Push username on update",
                "description_kind": "plain",
                "optional": true
              },
              "user_name_template_suffix": {
                "type": "string",
                "description": "Username template suffix",
                "description_kind": "plain",
                "optional": true
              },
              "user_name_template_type": {
                "type": "string",
                "description": "Username template type",
                "description_kind": "plain",
                "optional": true
              },
              "username_field": {
                "type": "string",
                "description": "Login username field",
                "description_kind": "plain",
                "required": true
              }
            },
            "block_types": {
              "timeouts": {
                "nesting_mode": "single",
                "block": {
                  "attributes": {
                    "create": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "read": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "update": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true
                    }
                  },
                  "description_kind": "plain"
                }
              }
            },
            "description_kind": "plain"
          }
        },
        "okta_app_shared_credentials": {
          "version": 0,
          "block": {
            "attributes": {
              "accessibility_error_redirect_url": {
                "type": "string",
                "description": "Custom error page URL",
                "description_kind": "plain",
                "optional": true
              },
              "accessibility_login_redirect_url": {
                "type": "string",
                "description": "Custom login page URL",
                "description_kind": "plain",
                "optional": true
              },
              "accessibility_self_service": {
                "type": "bool",
                "description": "Enable self service",
                "description_kind": "plain",
                "optional": true
              },
              "admin_note": {
                "type": "string",
                "description": "Application notes for admins.",
                "description_kind": "plain",
                "optional": true
              },
              "app_links_json": {
                "type": "string",
                "description": "Displays specific appLinks for the app",
                "description_kind": "plain",
                "optional": true
              },
              "auto_submit_toolbar": {
                "type": "bool",
                "description": "Display auto submit toolbar",
                "description_kind": "plain",
                "optional": true
              },
              "button_field": {
                "type": "string",
                "description": "Login button field",
                "description_kind": "plain",
                "optional": true
              },
              "checkbox": {
                "type": "string",
                "description": "CSS selector for the checkbox",
                "description_kind": "plain",
                "optional": true
              },
              "enduser_note": {
                "type": "string",
                "description": "Application notes for end users.",
                "description_kind": "plain",
                "optional": true
              },
              "hide_ios": {
                "type": "bool",
                "description": "Do not display application icon on mobile app",
                "description_kind": "plain",
                "optional": true
              },
              "hide_web": {
                "type": "bool",
                "description": "Do not display application icon to users",
                "description_kind": "plain",
                "optional": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "label": {
                "type": "string",
                "description": "Pretty name of app.",
                "description_kind": "plain",
                "required": true
              },
              "logo": {
                "type": "string",
                "description": "Local path to logo of the application.",
                "description_kind": "plain",
                "optional": true
              },
              "logo_url": {
                "type": "string",
                "description": "URL of the application's logo",
                "description_kind": "plain",
                "computed": true
              },
              "name": {
                "type": "string",
                "description": "Name of the app.",
                "description_kind": "plain",
                "computed": true
              },
              "password_field": {
                "type": "string",
                "description": "Login password field",
                "description_kind": "plain",
                "optional": true
              },
              "preconfigured_app": {
                "type": "string",
                "description": "Preconfigured app name",
                "description_kind": "plain",
                "optional": true
              },
              "redirect_url": {
                "type": "string",
                "description": "Secondary URL of the sign-in page for this app",
                "description_kind": "plain",
                "optional": true
              },
              "shared_password": {
                "type": "string",
                "description": "Shared password, required for certain schemes.",
                "description_kind": "plain",
                "optional": true
              },
              "shared_username": {
                "type": "string",
                "description": "Shared username, required for certain schemes.",
                "description_kind": "plain",
                "optional": true
              },
              "sign_on_mode": {
                "type": "string",
                "description": "Sign on mode of application.",
                "description_kind": "plain",
                "computed": true
              },
              "status": {
                "type": "string",
                "description": "Status of application.",
                "description_kind": "plain",
                "optional": true
              },
              "url": {
                "type": "string",
                "description": "Login URL",
                "description_kind": "plain",
                "optional": true
              },
              "url_regex": {
                "type": "string",
                "description": "A regex that further restricts URL to the specified regex",
                "description_kind": "plain",
                "optional": true
              },
              "user_name_template": {
                "type": "string",
                "description": "Username template",
                "description_kind": "plain",
                "optional": true
              },
              "user_name_template_push_status": {
                "type": "string",
                "description": "Push username on update",
                "description_kind": "plain",
                "optional": true
              },
              "user_name_template_suffix": {
                "type": "string",
                "description": "Username template suffix",
                "description_kind": "plain",
                "optional": true
              },
              "user_name_template_type": {
                "type": "string",
                "description": "Username template type",
                "description_kind": "plain",
                "optional": true
              },
              "username_field": {
                "type": "string",
                "description": "Login username field",
                "description_kind": "plain",
                "optional": true
              }
            },
            "block_types": {
              "timeouts": {
                "nesting_mode": "single",
                "block": {
                  "attributes": {
                    "create": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "read": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "update": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true
                    }
                  },
                  "description_kind": "plain"
                }
              }
            },
            "description_kind": "plain"
          }
        },
        "okta_app_signon_policy": {
          "version": 0,
          "block": {
            "attributes": {
              "description": {
                "type": "string",
                "description": "Policy Description",
                "description_kind": "plain",
                "required": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "description": "Policy Name",
                "description_kind": "plain",
                "required": true
              }
            },
            "description_kind": "plain"
          }
        },
        "okta_app_signon_policy_rule": {
          "version": 0,
          "block": {
            "attributes": {
              "access": {
                "type": "string",
                "description": "Allow or deny access based on the rule conditions: ALLOW or DENY",
                "description_kind": "plain",
                "optional": true
              },
              "constraints": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "An array that contains nested Authenticator Constraint objects that are organized by the Authenticator class",
                "description_kind": "plain",
                "optional": true
              },
              "custom_expression": {
                "type": "string",
                "description": "This is an optional advanced setting. If the expression is formatted incorrectly or conflicts with conditions set above, the rule may not match any users.",
                "description_kind": "plain",
                "optional": true
              },
              "device_assurances_included": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "List of device assurance IDs to include",
                "description_kind": "plain",
                "optional": true
              },
              "device_is_managed": {
                "type": "bool",
                "description": "If the device is managed. A device is managed if it's managed by a device management system. When managed is passed, registered must also be included and must be set to true.",
                "description_kind": "plain",
                "optional": true
              },
              "device_is_registered": {
                "type": "bool",
                "description": "If the device is registered. A device is registered if the User enrolls with Okta Verify that is installed on the device.",
                "description_kind": "plain",
                "optional": true
              },
              "factor_mode": {
                "type": "string",
                "description": "The number of factors required to satisfy this assurance level",
                "description_kind": "plain",
                "optional": true
              },
              "groups_excluded": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "List of group IDs to exclude",
                "description_kind": "plain",
                "optional": true
              },
              "groups_included": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "List of group IDs to include",
                "description_kind": "plain",
                "optional": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "inactivity_period": {
                "type": "string",
                "description": "The inactivity duration after which the end user must re-authenticate. Use the ISO 8601 Period format for recurring time intervals.",
                "description_kind": "plain",
                "optional": true
              },
              "name": {
                "type": "string",
                "description": "Policy Rule Name",
                "description_kind": "plain",
                "required": true
              },
              "network_connection": {
                "type": "string",
                "description": "Network selection mode: ANYWHERE, ZONE, ON_NETWORK, or OFF_NETWORK.",
                "description_kind": "plain",
                "optional": true
              },
              "network_excludes": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "The zones to exclude",
                "description_kind": "plain",
                "optional": true
              },
              "network_includes": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "The zones to include",
                "description_kind": "plain",
                "optional": true
              },
              "policy_id": {
                "type": "string",
                "description": "ID of the policy",
                "description_kind": "plain",
                "required": true
              },
              "priority": {
                "type": "number",
                "description": "Priority of the rule.",
                "description_kind": "plain",
                "optional": true
              },
              "re_authentication_frequency": {
                "type": "string",
                "description": "The duration after which the end user must re-authenticate, regardless of user activity. Use the ISO 8601 Period format for recurring time intervals. PT0S - Every sign-in attempt, PT43800H - Once per session",
                "description_kind": "plain",
                "optional": true
              },
              "risk_score": {
                "type": "string",
                "description": "The risk score specifies a particular level of risk to match on: ANY, LOW, MEDIUM, HIGH",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "status": {
                "type": "string",
                "description": "Status of the rule",
                "description_kind": "plain",
                "optional": true
              },
              "system": {
                "type": "bool",
                "description": "Often the \"Catch-all Rule\" this rule is the system (default) rule for its associated policy",
                "description_kind": "plain",
                "computed": true
              },
              "type": {
                "type": "string",
                "description": "The Verification Method type",
                "description_kind": "plain",
                "optional": true
              },
              "user_types_excluded": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "Set of User Type IDs to exclude",
                "description_kind": "plain",
                "optional": true
              },
              "user_types_included": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "Set of User Type IDs to include",
                "description_kind": "plain",
                "optional": true
              },
              "users_excluded": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "Set of User IDs to exclude",
                "description_kind": "plain",
                "optional": true
              },
              "users_included": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "Set of User IDs to include",
                "description_kind": "plain",
                "optional": true
              }
            },
            "block_types": {
              "platform_include": {
                "nesting_mode": "set",
                "block": {
                  "attributes": {
                    "os_expression": {
                      "type": "string",
                      "description": "Only available with OTHER OS type",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "os_type": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "type": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true
                    }
                  },
                  "description_kind": "plain"
                }
              }
            },
            "description_kind": "plain"
          }
        },
        "okta_app_swa": {
          "version": 0,
          "block": {
            "attributes": {
              "accessibility_error_redirect_url": {
                "type": "string",
                "description": "Custom error page URL",
                "description_kind": "plain",
                "optional": true
              },
              "accessibility_login_redirect_url": {
                "type": "string",
                "description": "Custom login page URL",
                "description_kind": "plain",
                "optional": true
              },
              "accessibility_self_service": {
                "type": "bool",
                "description": "Enable self service",
                "description_kind": "plain",
                "optional": true
              },
              "admin_note": {
                "type": "string",
                "description": "Application notes for admins.",
                "description_kind": "plain",
                "optional": true
              },
              "app_links_json": {
                "type": "string",
                "description": "Displays specific appLinks for the app",
                "description_kind": "plain",
                "optional": true
              },
              "auto_submit_toolbar": {
                "type": "bool",
                "description": "Display auto submit toolbar",
                "description_kind": "plain",
                "optional": true
              },
              "button_field": {
                "type": "string",
                "description": "Login button field",
                "description_kind": "plain",
                "optional": true
              },
              "checkbox": {
                "type": "string",
                "description": "CSS selector for the checkbox",
                "description_kind": "plain",
                "optional": true
              },
              "enduser_note": {
                "type": "string",
                "description": "Application notes for end users.",
                "description_kind": "plain",
                "optional": true
              },
              "hide_ios": {
                "type": "bool",
                "description": "Do not display application icon on mobile app",
                "description_kind": "plain",
                "optional": true
              },
              "hide_web": {
                "type": "bool",
                "description": "Do not display application icon to users",
                "description_kind": "plain",
                "optional": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "label": {
                "type": "string",
                "description": "Pretty name of app.",
                "description_kind": "plain",
                "required": true
              },
              "logo": {
                "type": "string",
                "description": "Local path to logo of the application.",
                "description_kind": "plain",
                "optional": true
              },
              "logo_url": {
                "type": "string",
                "description": "URL of the application's logo",
                "description_kind": "plain",
                "computed": true
              },
              "name": {
                "type": "string",
                "description": "Name of the app.",
                "description_kind": "plain",
                "computed": true
              },
              "password_field": {
                "type": "string",
                "description": "Login password field",
                "description_kind": "plain",
                "optional": true
              },
              "preconfigured_app": {
                "type": "string",
                "description": "Preconfigured app name",
                "description_kind": "plain",
                "optional": true
              },
              "redirect_url": {
                "type": "string",
                "description": "If going to the login page URL redirects to another page, then enter that URL here",
                "description_kind": "plain",
                "optional": true
              },
              "sign_on_mode": {
                "type": "string",
                "description": "Sign on mode of application.",
                "description_kind": "plain",
                "computed": true
              },
              "status": {
                "type": "string",
                "description": "Status of application.",
                "description_kind": "plain",
                "optional": true
              },
              "url": {
                "type": "string",
                "description": "Login URL",
                "description_kind": "plain",
                "optional": true
              },
              "url_regex": {
                "type": "string",
                "description": "A regex that further restricts URL to the specified regex",
                "description_kind": "plain",
                "optional": true
              },
              "user_name_template": {
                "type": "string",
                "description": "Username template",
                "description_kind": "plain",
                "optional": true
              },
              "user_name_template_push_status": {
                "type": "string",
                "description": "Push username on update",
                "description_kind": "plain",
                "optional": true
              },
              "user_name_template_suffix": {
                "type": "string",
                "description": "Username template suffix",
                "description_kind": "plain",
                "optional": true
              },
              "user_name_template_type": {
                "type": "string",
                "description": "Username template type",
                "description_kind": "plain",
                "optional": true
              },
              "username_field": {
                "type": "string",
                "description": "Login username field",
                "description_kind": "plain",
                "optional": true
              }
            },
            "block_types": {
              "timeouts": {
                "nesting_mode": "single",
                "block": {
                  "attributes": {
                    "create": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "read": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "update": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true
                    }
                  },
                  "description_kind": "plain"
                }
              }
            },
            "description_kind": "plain"
          }
        },
        "okta_app_three_field": {
          "version": 0,
          "block": {
            "attributes": {
              "accessibility_error_redirect_url": {
                "type": "string",
                "description": "Custom error page URL",
                "description_kind": "plain",
                "optional": true
              },
              "accessibility_login_redirect_url": {
                "type": "string",
                "description": "Custom login page URL",
                "description_kind": "plain",
                "optional": true
              },
              "accessibility_self_service": {
                "type": "bool",
                "description": "Enable self service",
                "description_kind": "plain",
                "optional": true
              },
              "admin_note": {
                "type": "string",
                "description": "Application notes for admins.",
                "description_kind": "plain",
                "optional": true
              },
              "app_links_json": {
                "type": "string",
                "description": "Displays specific appLinks for the app",
                "description_kind": "plain",
                "optional": true
              },
              "auto_submit_toolbar": {
                "type": "bool",
                "description": "Display auto submit toolbar",
                "description_kind": "plain",
                "optional": true
              },
              "button_selector": {
                "type": "string",
                "description": "Login button field CSS selector",
                "description_kind": "plain",
                "required": true
              },
              "credentials_scheme": {
                "type": "string",
                "description": "Application credentials scheme",
                "description_kind": "plain",
                "optional": true
              },
              "enduser_note": {
                "type": "string",
                "description": "Application notes for end users.",
                "description_kind": "plain",
                "optional": true
              },
              "extra_field_selector": {
                "type": "string",
                "description": "Extra field CSS selector",
                "description_kind": "plain",
                "required": true
              },
              "extra_field_value": {
                "type": "string",
                "description": "Value for extra form field",
                "description_kind": "plain",
                "required": true
              },
              "hide_ios": {
                "type": "bool",
                "description": "Do not display application icon on mobile app",
                "description_kind": "plain",
                "optional": true
              },
              "hide_web": {
                "type": "bool",
                "description": "Do not display application icon to users",
                "description_kind": "plain",
                "optional": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "label": {
                "type": "string",
                "description": "Pretty name of app.",
                "description_kind": "plain",
                "required": true
              },
              "logo": {
                "type": "string",
                "description": "Local path to logo of the application.",
                "description_kind": "plain",
                "optional": true
              },
              "logo_url": {
                "type": "string",
                "description": "URL of the application's logo",
                "description_kind": "plain",
                "computed": true
              },
              "name": {
                "type": "string",
                "description": "Name of the app.",
                "description_kind": "plain",
                "computed": true
              },
              "password_selector": {
                "type": "string",
                "description": "Login password field CSS selector",
                "description_kind": "plain",
                "required": true
              },
              "reveal_password": {
                "type": "bool",
                "description": "Allow user to reveal password",
                "description_kind": "plain",
                "optional": true
              },
              "shared_password": {
                "type": "string",
                "description": "Shared password, required for certain schemes.",
                "description_kind": "plain",
                "optional": true
              },
              "shared_username": {
                "type": "string",
                "description": "Shared username, required for certain schemes.",
                "description_kind": "plain",
                "optional": true
              },
              "sign_on_mode": {
                "type": "string",
                "description": "Sign on mode of application.",
                "description_kind": "plain",
                "computed": true
              },
              "status": {
                "type": "string",
                "description": "Status of application.",
                "description_kind": "plain",
                "optional": true
              },
              "url": {
                "type": "string",
                "description": "Login URL",
                "description_kind": "plain",
                "required": true
              },
              "url_regex": {
                "type": "string",
                "description": "A regex that further restricts URL to the specified regex",
                "description_kind": "plain",
                "optional": true
              },
              "user_name_template": {
                "type": "string",
                "description": "Username template",
                "description_kind": "plain",
                "optional": true
              },
              "user_name_template_push_status": {
                "type": "string",
                "description": "Push username on update",
                "description_kind": "plain",
                "optional": true
              },
              "user_name_template_suffix": {
                "type": "string",
                "description": "Username template suffix",
                "description_kind": "plain",
                "optional": true
              },
              "user_name_template_type": {
                "type": "string",
                "description": "Username template type",
                "description_kind": "plain",
                "optional": true
              },
              "username_selector": {
                "type": "string",
                "description": "Login username field CSS selector",
                "description_kind": "plain",
                "required": true
              }
            },
            "block_types": {
              "timeouts": {
                "nesting_mode": "single",
                "block": {
                  "attributes": {
                    "create": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "read": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "update": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true
                    }
                  },
                  "description_kind": "plain"
                }
              }
            },
            "description_kind": "plain"
          }
        },
        "okta_app_user": {
          "version": 0,
          "block": {
            "attributes": {
              "app_id": {
                "type": "string",
                "description": "App to associate user with",
                "description_kind": "plain",
                "required": true
              },
              "has_shared_username": {
                "type": "bool",
                "description_kind": "plain",
                "computed": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "password": {
                "type": "string",
                "description": "The password to use.",
                "description_kind": "plain",
                "optional": true,
                "sensitive": true
              },
              "profile": {
                "type": "string",
                "description": "The JSON profile of the App User.",
                "description_kind": "plain",
                "optional": true
              },
              "retain_assignment": {
                "type": "bool",
                "description": "Retain the user assignment on destroy. If set to true, the resource will be removed from state but not from the Okta app.",
                "description_kind": "plain",
                "optional": true
              },
              "user_id": {
                "type": "string",
                "description": "User associated with the application",
                "description_kind": "plain",
                "required": true
              },
              "username": {
                "type": "string",
                "description": "The username to use for the app user. In case the user is assigned to the app with `SHARED_USERNAME_AND_PASSWORD` credentials scheme, this field will be computed and should not be set.",
                "description_kind": "plain",
                "optional": true
              }
            },
            "description_kind": "plain"
          }
        },
        "okta_app_user_base_schema_property": {
          "version": 1,
          "block": {
            "attributes": {
              "app_id": {
                "type": "string",
                "description": "The Application's ID the user schema property should be assigned to.",
                "description_kind": "plain",
                "required": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "index": {
                "type": "string",
                "description": "Subschema unique string identifier",
                "description_kind": "plain",
                "required": true
              },
              "master": {
                "type": "string",
                "description": "SubSchema profile manager, if not set it will inherit its setting.",
                "description_kind": "plain",
                "optional": true
              },
              "pattern": {
                "type": "string",
                "description": "The validation pattern to use for the subschema. Must be in form of '.+', or '[<pattern>]+' if present.'",
                "description_kind": "plain",
                "optional": true
              },
              "permissions": {
                "type": "string",
                "description": "SubSchema permissions: HIDE, READ_ONLY, or READ_WRITE.",
                "description_kind": "plain",
                "optional": true
              },
              "required": {
                "type": "bool",
                "description": "Whether the subschema is required",
                "description_kind": "plain",
                "optional": true
              },
              "title": {
                "type": "string",
                "description": "Subschema title (display name)",
                "description_kind": "plain",
                "required": true
              },
              "type": {
                "type": "string",
                "description": "Subschema type: string, boolean, number, integer, array, or object",
                "description_kind": "plain",
                "required": true
              },
              "user_type": {
                "type": "string",
                "description": "Custom subschema user type",
                "description_kind": "plain",
                "optional": true
              }
            },
            "description_kind": "plain"
          }
        },
        "okta_app_user_schema_property": {
          "version": 2,
          "block": {
            "attributes": {
              "app_id": {
                "type": "string",
                "description": "The Application's ID the user custom schema property should be assigned to.",
                "description_kind": "plain",
                "required": true
              },
              "array_enum": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "Custom Subschema enumerated value of a property of type array.",
                "description_kind": "plain",
                "optional": true
              },
              "array_type": {
                "type": "string",
                "description": "Subschema array type: string, number, integer, reference. Type field must be an array.",
                "description_kind": "plain",
                "optional": true
              },
              "description": {
                "type": "string",
                "description": "Custom Subschema description",
                "description_kind": "plain",
                "optional": true
              },
              "enum": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "Custom Subschema enumerated value of the property. see: developer.okta.com/docs/api/resources/schemas#user-profile-schema-property-object",
                "description_kind": "plain",
                "optional": true
              },
              "external_name": {
                "type": "string",
                "description": "Subschema external name",
                "description_kind": "plain",
                "optional": true
              },
              "external_namespace": {
                "type": "string",
                "description": "Subschema external namespace",
                "description_kind": "plain",
                "optional": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "index": {
                "type": "string",
                "description": "Subschema unique string identifier",
                "description_kind": "plain",
                "required": true
              },
              "master": {
                "type": "string",
                "description": "SubSchema profile manager, if not set it will inherit its setting.",
                "description_kind": "plain",
                "optional": true
              },
              "max_length": {
                "type": "number",
                "description": "Subschema of type string maximum length",
                "description_kind": "plain",
                "optional": true
              },
              "min_length": {
                "type": "number",
                "description": "Subschema of type string minimum length",
                "description_kind": "plain",
                "optional": true
              },
              "permissions": {
                "type": "string",
                "description": "SubSchema permissions: HIDE, READ_ONLY, or READ_WRITE.",
                "description_kind": "plain",
                "optional": true
              },
              "required": {
                "type": "bool",
                "description": "Whether the subschema is required",
                "description_kind": "plain",
                "optional": true
              },
              "scope": {
                "type": "string",
                "description": "determines whether an app user attribute can be set at the Personal `SELF` or Group `NONE` level. Default value is `NONE`.",
                "description_kind": "plain",
                "optional": true
              },
              "title": {
                "type": "string",
                "description": "Subschema title (display name)",
                "description_kind": "plain",
                "required": true
              },
              "type": {
                "type": "string",
                "description": "Subschema type: string, boolean, number, integer, array, or object",
                "description_kind": "plain",
                "required": true
              },
              "union": {
                "type": "bool",
                "description": "Allows to assign attribute's group priority",
                "description_kind": "plain",
                "optional": true
              },
              "unique": {
                "type": "string",
                "description": "Subschema unique restriction",
                "description_kind": "plain",
                "optional": true
              },
              "user_type": {
                "type": "string",
                "description": "Custom subschema user type",
                "description_kind": "plain",
                "optional": true
              }
            },
            "block_types": {
              "array_one_of": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "const": {
                      "type": "string",
                      "description": "Enum value",
                      "description_kind": "plain",
                      "required": true
                    },
                    "title": {
                      "type": "string",
                      "description": "Enum title",
                      "description_kind": "plain",
                      "required": true
                    }
                  },
                  "description": "array of valid JSON schemas for property type array.",
                  "description_kind": "plain"
                }
              },
              "one_of": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "const": {
                      "type": "string",
                      "description": "Enum value",
                      "description_kind": "plain",
                      "required": true
                    },
                    "title": {
                      "type": "string",
                      "description": "Enum title",
                      "description_kind": "plain",
                      "required": true
                    }
                  },
                  "description": "Custom Subschema json schemas. see: developer.okta.com/docs/api/resources/schemas#user-profile-schema-property-object",
                  "description_kind": "plain"
                }
              }
            },
            "description_kind": "plain"
          }
        },
        "okta_auth_server": {
          "version": 0,
          "block": {
            "attributes": {
              "audiences": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "Currently Okta only supports a single value here",
                "description_kind": "plain",
                "required": true
              },
              "credentials_last_rotated": {
                "type": "string",
                "description": "The timestamp when the authorization server started to use the `kid` for signing tokens.",
                "description_kind": "plain",
                "computed": true
              },
              "credentials_next_rotation": {
                "type": "string",
                "description": "The timestamp when the authorization server changes the key for signing tokens. Only returned when `credentials_rotation_mode` is `AUTO`.",
                "description_kind": "plain",
                "computed": true
              },
              "credentials_rotation_mode": {
                "type": "string",
                "description": "Credential rotation mode, in many cases you cannot set this to MANUAL, the API will ignore the value and you will get a perpetual diff. This should rarely be used.",
                "description_kind": "plain",
                "optional": true
              },
              "description": {
                "type": "string",
                "description": "The description of the authorization server.",
                "description_kind": "plain",
                "optional": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "issuer": {
                "type": "string",
                "description": "allows you to use a custom issuer URL",
                "description_kind": "plain",
                "computed": true
              },
              "issuer_mode": {
                "type": "string",
                "description": "*Early Access Property*. Indicates which value is specified in the issuer of the tokens that a Custom Authorization Server returns: the original Okta org domain URL or a custom domain URL",
                "description_kind": "plain",
                "optional": true
              },
              "kid": {
                "type": "string",
                "description": "The ID of the JSON Web Key used for signing tokens issued by the authorization server.",
                "description_kind": "plain",
                "computed": true
              },
              "name": {
                "type": "string",
                "description": "The name of the authorization server.",
                "description_kind": "plain",
                "required": true
              },
              "status": {
                "type": "string",
                "description_kind": "plain",
                "optional": true
              }
            },
            "description_kind": "plain"
          }
        },
        "okta_auth_server_claim": {
          "version": 0,
          "block": {
            "attributes": {
              "always_include_in_token": {
                "type": "bool",
                "description": "Specifies whether to include claims in token, by default it is set to `true`.",
                "description_kind": "plain",
                "optional": true
              },
              "auth_server_id": {
                "type": "string",
                "description": "Auth server ID",
                "description_kind": "plain",
                "required": true
              },
              "claim_type": {
                "type": "string",
                "description": "Specifies whether the claim is for an access token `RESOURCE` or ID token `IDENTITY`.",
                "description_kind": "plain",
                "required": true
              },
              "group_filter_type": {
                "type": "string",
                "description": "Specifies the type of group filter if `value_type` is `GROUPS`. Can be set to one of the following `STARTS_WITH`, `EQUALS`, `CONTAINS`, `REGEX`.",
                "description_kind": "plain",
                "optional": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "description": "Auth server claim name",
                "description_kind": "plain",
                "required": true
              },
              "scopes": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "Auth server claim list of scopes",
                "description_kind": "plain",
                "optional": true
              },
              "status": {
                "type": "string",
                "description_kind": "plain",
                "optional": true
              },
              "value": {
                "type": "string",
                "description": "The value of the claim.",
                "description_kind": "plain",
                "required": true
              },
              "value_type": {
                "type": "string",
                "description": "The type of value of the claim. It can be set to `EXPRESSION` or `GROUPS`. It defaults to `EXPRESSION`.",
                "description_kind": "plain",
                "optional": true
              }
            },
            "description_kind": "plain"
          }
        },
        "okta_auth_server_claim_default": {
          "version": 0,
          "block": {
            "attributes": {
              "always_include_in_token": {
                "type": "bool",
                "description": "Specifies whether to include claims in token.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "auth_server_id": {
                "type": "string",
                "description": "Auth server ID",
                "description_kind": "plain",
                "required": true
              },
              "claim_type": {
                "type": "string",
                "description": "Specifies whether the claim is for an access token `RESOURCE` or ID token `IDENTITY`.",
                "description_kind": "plain",
                "computed": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "description": "Default auth server claim name",
                "description_kind": "plain",
                "required": true
              },
              "scopes": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "Auth server claim list of scopes",
                "description_kind": "plain",
                "computed": true
              },
              "status": {
                "type": "string",
                "description": "The status of the application.",
                "description_kind": "plain",
                "computed": true
              },
              "value": {
                "type": "string",
                "description": "The value of the claim.",
                "description_kind": "plain",
                "optional": true
              },
              "value_type": {
                "type": "string",
                "description": "The type of value of the claim.",
                "description_kind": "plain",
                "computed": true
              }
            },
            "description_kind": "plain"
          }
        },
        "okta_auth_server_default": {
          "version": 0,
          "block": {
            "attributes": {
              "audiences": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "Currently Okta only supports a single value here",
                "description_kind": "plain",
                "optional": true
              },
              "credentials_last_rotated": {
                "type": "string",
                "description": "The timestamp when the authorization server started to use the `kid` for signing tokens.",
                "description_kind": "plain",
                "computed": true
              },
              "credentials_next_rotation": {
                "type": "string",
                "description": "The timestamp when the authorization server changes the key for signing tokens. Only returned when `credentials_rotation_mode` is `AUTO`.",
                "description_kind": "plain",
                "computed": true
              },
              "credentials_rotation_mode": {
                "type": "string",
                "description": "Credential rotation mode, in many cases you cannot set this to MANUAL, the API will ignore the value and you will get a perpetual diff. This should rarely be used.",
                "description_kind": "plain",
                "optional": true
              },
              "description": {
                "type": "string",
                "description": "The description of the authorization server.",
                "description_kind": "plain",
                "optional": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "issuer": {
                "type": "string",
                "description": "allows you to use a custom issuer URL",
                "description_kind": "plain",
                "computed": true
              },
              "issuer_mode": {
                "type": "string",
                "description": "*Early Access Property*. Indicates which value is specified in the issuer of the tokens that a Custom Authorization Server returns: the original Okta org domain URL or a custom domain URL",
                "description_kind": "plain",
                "optional": true
              },
              "kid": {
                "type": "string",
                "description": "The ID of the JSON Web Key used for signing tokens issued by the authorization server.",
                "description_kind": "plain",
                "computed": true
              },
              "name": {
                "type": "string",
                "description": "The name of the authorization server. Not necessary but left for backwards capacity with legacy implementation.",
                "description_kind": "plain",
                "optional": true
              },
              "status": {
                "type": "string",
                "description_kind": "plain",
                "optional": true
              }
            },
            "description_kind": "plain"
          }
        },
        "okta_auth_server_policy": {
          "version": 0,
          "block": {
            "attributes": {
              "auth_server_id": {
                "type": "string",
                "description": "The ID of the Auth Server.",
                "description_kind": "plain",
                "required": true
              },
              "client_whitelist": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "The clients to whitelist the policy for. `[ALL_CLIENTS]` is a special value that can be used to whitelist all clients, otherwise it is a list of client ids.",
                "description_kind": "plain",
                "required": true
              },
              "description": {
                "type": "string",
                "description": "The description of the Auth Server Policy.",
                "description_kind": "plain",
                "required": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "description": "The name of the Auth Server Policy.",
                "description_kind": "plain",
                "required": true
              },
              "priority": {
                "type": "number",
                "description": "Priority of the auth server policy",
                "description_kind": "plain",
                "required": true
              },
              "status": {
                "type": "string",
                "description_kind": "plain",
                "optional": true
              }
            },
            "description_kind": "plain"
          }
        },
        "okta_auth_server_policy_rule": {
          "version": 0,
          "block": {
            "attributes": {
              "access_token_lifetime_minutes": {
                "type": "number",
                "description": "Lifetime of access token. Can be set to a value between 5 and 1440 minutes. Default is `60`.",
                "description_kind": "plain",
                "optional": true
              },
              "auth_server_id": {
                "type": "string",
                "description": "Auth server ID",
                "description_kind": "plain",
                "required": true
              },
              "grant_type_whitelist": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "Accepted grant type values: authorization_code, implicit, password, client_credentials",
                "description_kind": "plain",
                "required": true
              },
              "group_blacklist": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "Specifies a set of Groups whose Users are to be excluded.",
                "description_kind": "plain",
                "optional": true
              },
              "group_whitelist": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "Specifies a set of Groups whose Users are to be included. Can be set to Group ID or to the following: `EVERYONE`.",
                "description_kind": "plain",
                "optional": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "inline_hook_id": {
                "type": "string",
                "description": "The ID of the inline token to trigger.",
                "description_kind": "plain",
                "optional": true
              },
              "name": {
                "type": "string",
                "description": "Auth server policy rule name",
                "description_kind": "plain",
                "required": true
              },
              "policy_id": {
                "type": "string",
                "description": "Auth server policy ID",
                "description_kind": "plain",
                "required": true
              },
              "priority": {
                "type": "number",
                "description": "Priority of the auth server policy rule",
                "description_kind": "plain",
                "required": true
              },
              "refresh_token_lifetime_minutes": {
                "type": "number",
                "description": "Lifetime of refresh token.",
                "description_kind": "plain",
                "optional": true
              },
              "refresh_token_window_minutes": {
                "type": "number",
                "description": "Window in which a refresh token can be used. It can be a value between 5 and 2628000 (5 years) minutes. Default is `10080` (7 days).`refresh_token_window_minutes` must be between `access_token_lifetime_minutes` and `refresh_token_lifetime_minutes`.",
                "description_kind": "plain",
                "optional": true
              },
              "scope_whitelist": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "Scopes allowed for this policy rule. They can be whitelisted by name or all can be whitelisted with ` * `",
                "description_kind": "plain",
                "optional": true
              },
              "status": {
                "type": "string",
                "description_kind": "plain",
                "optional": true
              },
              "system": {
                "type": "bool",
                "description": "The rule is the system (default) rule for its associated policy",
                "description_kind": "plain",
                "computed": true
              },
              "type": {
                "type": "string",
                "description": "Auth server policy rule type, unlikely this will be anything other then the default",
                "description_kind": "plain",
                "optional": true
              },
              "user_blacklist": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "Specifies a set of Users to be excluded.",
                "description_kind": "plain",
                "optional": true
              },
              "user_whitelist": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "Specifies a set of Users to be included.",
                "description_kind": "plain",
                "optional": true
              }
            },
            "description_kind": "plain"
          }
        },
        "okta_auth_server_scope": {
          "version": 0,
          "block": {
            "attributes": {
              "auth_server_id": {
                "type": "string",
                "description": "Auth server ID",
                "description_kind": "plain",
                "required": true
              },
              "consent": {
                "type": "string",
                "description": "EA Feature and thus it is simply ignored if the feature is off",
                "description_kind": "plain",
                "optional": true
              },
              "default": {
                "type": "bool",
                "description": "A default scope will be returned in an access token when the client omits the scope parameter in a token request, provided this scope is allowed as part of the access policy rule.",
                "description_kind": "plain",
                "optional": true
              },
              "description": {
                "type": "string",
                "description": "Description of the Auth Server Scope.",
                "description_kind": "plain",
                "optional": true
              },
              "display_name": {
                "type": "string",
                "description": "Name of the end user displayed in a consent dialog box",
                "description_kind": "plain",
                "optional": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "metadata_publish": {
                "type": "string",
                "description": "Whether to publish metadata or not, matching API type despite the fact it could just be a boolean",
                "description_kind": "plain",
                "optional": true
              },
              "name": {
                "type": "string",
                "description": "Auth server scope name",
                "description_kind": "plain",
                "required": true
              },
              "optional": {
                "type": "bool",
                "description": "Whether the scope optional",
                "description_kind": "plain",
                "optional": true
              },
              "system": {
                "type": "bool",
                "description": "Whether Okta created the Scope",
                "description_kind": "plain",
                "computed": true
              }
            },
            "description_kind": "plain"
          }
        },
        "okta_authenticator": {
          "version": 0,
          "block": {
            "attributes": {
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "key": {
                "type": "string",
                "description": "A human-readable string that identifies the Authenticator",
                "description_kind": "plain",
                "required": true
              },
              "name": {
                "type": "string",
                "description": "Display name of the Authenticator",
                "description_kind": "plain",
                "required": true
              },
              "provider_auth_port": {
                "type": "number",
                "description": "The RADIUS server port (for example 1812). This is defined when the On-Prem RADIUS server is configured",
                "description_kind": "plain",
                "optional": true
              },
              "provider_host": {
                "type": "string",
                "description": "The Duo Security API hostname",
                "description_kind": "plain",
                "optional": true
              },
              "provider_hostname": {
                "type": "string",
                "description": "Server host name or IP address",
                "description_kind": "plain",
                "optional": true
              },
              "provider_instance_id": {
                "type": "string",
                "description": "App Instance ID.",
                "description_kind": "plain",
                "computed": true
              },
              "provider_integration_key": {
                "type": "string",
                "description": "The Duo Security integration key",
                "description_kind": "plain",
                "optional": true
              },
              "provider_json": {
                "type": "string",
                "description": "Provider in JSON format",
                "description_kind": "plain",
                "optional": true
              },
              "provider_secret_key": {
                "type": "string",
                "description": "The Duo Security secret key",
                "description_kind": "plain",
                "optional": true
              },
              "provider_shared_secret": {
                "type": "string",
                "description": "An authentication key that must be defined when the RADIUS server is configured, and must be the same on both the RADIUS client and server.",
                "description_kind": "plain",
                "optional": true,
                "sensitive": true
              },
              "provider_type": {
                "type": "string",
                "description": "Provider type. Supported value for Duo: `DUO`. Supported value for Custom App: `PUSH`",
                "description_kind": "plain",
                "computed": true
              },
              "provider_user_name_template": {
                "type": "string",
                "description": "Format expected by the provider",
                "description_kind": "plain",
                "optional": true
              },
              "settings": {
                "type": "string",
                "description": "Authenticator settings in JSON format",
                "description_kind": "plain",
                "optional": true
              },
              "status": {
                "type": "string",
                "description": "Authenticator status: ACTIVE or INACTIVE",
                "description_kind": "plain",
                "optional": true
              },
              "type": {
                "type": "string",
                "description": "The type of Authenticator",
                "description_kind": "plain",
                "computed": true
              }
            },
            "description_kind": "plain"
          }
        },
        "okta_behavior": {
          "version": 0,
          "block": {
            "attributes": {
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "location_granularity_type": {
                "type": "string",
                "description": "Determines the method and level of detail used to evaluate the behavior.",
                "description_kind": "plain",
                "optional": true
              },
              "name": {
                "type": "string",
                "description": "Name of the behavior",
                "description_kind": "plain",
                "required": true
              },
              "number_of_authentications": {
                "type": "number",
                "description": "The number of recent authentications used to evaluate the behavior.",
                "description_kind": "plain",
                "optional": true
              },
              "radius_from_location": {
                "type": "number",
                "description": "Radius from location (in kilometers)",
                "description_kind": "plain",
                "optional": true
              },
              "status": {
                "type": "string",
                "description": "Behavior status: ACTIVE or INACTIVE.",
                "description_kind": "plain",
                "optional": true
              },
              "type": {
                "type": "string",
                "description": "Behavior type",
                "description_kind": "plain",
                "required": true
              },
              "velocity": {
                "type": "number",
                "description": "Velocity (in kilometers per hour).",
                "description_kind": "plain",
                "optional": true
              }
            },
            "description_kind": "plain"
          }
        },
        "okta_brand": {
          "version": 0,
          "block": {
            "attributes": {
              "agree_to_custom_privacy_policy": {
                "type": "bool",
                "description": "Consent for updating the custom privacy policy URL.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "brand_id": {
                "type": "string",
                "description": "Brand ID - Note: Okta API for brands only reads and updates therefore the okta_brand resource needs to act as a quasi data source. Do this by setting brand_id.",
                "description_kind": "plain",
                "deprecated": true,
                "optional": true,
                "computed": true
              },
              "custom_privacy_policy_url": {
                "type": "string",
                "description": "Custom privacy policy URL",
                "description_kind": "plain",
                "optional": true
              },
              "default_app_app_instance_id": {
                "type": "string",
                "description": "Default app app instance id",
                "description_kind": "plain",
                "optional": true
              },
              "default_app_app_link_name": {
                "type": "string",
                "description": "Default app app link name",
                "description_kind": "plain",
                "optional": true
              },
              "default_app_classic_application_uri": {
                "type": "string",
                "description": "Default app classic application uri",
                "description_kind": "plain",
                "optional": true
              },
              "email_domain_id": {
                "type": "string",
                "description": "Email Domain ID tied to this brand",
                "description_kind": "plain",
                "computed": true
              },
              "id": {
                "type": "string",
                "description": "Brand id",
                "description_kind": "plain",
                "computed": true
              },
              "is_default": {
                "type": "bool",
                "description": "Is this the default brand",
                "description_kind": "plain",
                "computed": true
              },
              "links": {
                "type": "string",
                "description": "Link relations for this object - JSON HAL - Discoverable resources related to the brand",
                "description_kind": "plain",
                "computed": true
              },
              "locale": {
                "type": "string",
                "description": "The language specified as an IETF BCP 47 language tag",
                "description_kind": "plain",
                "optional": true
              },
              "name": {
                "type": "string",
                "description": "Brand name",
                "description_kind": "plain",
                "required": true
              },
              "remove_powered_by_okta": {
                "type": "bool",
                "description": "Removes \"Powered by Okta\" from the Okta-hosted sign-in page and \"© 2021 Okta, Inc.\" from the Okta End-User Dashboard",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              }
            },
            "description": "Manages brand",
            "description_kind": "plain"
          }
        },
        "okta_captcha": {
          "version": 0,
          "block": {
            "attributes": {
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "description": "Name of the CAPTCHA",
                "description_kind": "plain",
                "required": true
              },
              "secret_key": {
                "type": "string",
                "description": "Secret key issued from the CAPTCHA vendor to perform server-side validation for a CAPTCHA token",
                "description_kind": "plain",
                "required": true,
                "sensitive": true
              },
              "site_key": {
                "type": "string",
                "description": "Site key issued from the CAPTCHA vendor to render a CAPTCHA on a page",
                "description_kind": "plain",
                "required": true
              },
              "type": {
                "type": "string",
                "description": "Captcha type",
                "description_kind": "plain",
                "required": true
              }
            },
            "description_kind": "plain"
          }
        },
        "okta_captcha_org_wide_settings": {
          "version": 0,
          "block": {
            "attributes": {
              "captcha_id": {
                "type": "string",
                "description": "ID of the CAPTCHA",
                "description_kind": "plain",
                "optional": true
              },
              "enabled_for": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "Set of pages that have CAPTCHA enabled",
                "description_kind": "plain",
                "optional": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              }
            },
            "description_kind": "plain"
          }
        },
        "okta_domain": {
          "version": 0,
          "block": {
            "attributes": {
              "brand_id": {
                "type": "string",
                "description": "Brand id of the domain",
                "description_kind": "plain",
                "optional": true
              },
              "certificate_source_type": {
                "type": "string",
                "description": "Optional. Certificate source type that indicates whether the certificate is provided by the user or Okta. Accepted values: MANUAL, OKTA_MANAGED. Warning: Use of OKTA_MANAGED requires a feature flag to be enabled. Default value = MANUAL",
                "description_kind": "plain",
                "optional": true
              },
              "dns_records": {
                "type": [
                  "list",
                  [
                    "object",
                    {
                      "expiration": "string",
                      "fqdn": "string",
                      "record_type": "string",
                      "values": [
                        "list",
                        "string"
                      ]
                    }
                  ]
                ],
                "description": "TXT and CNAME records to be registered for the Domain",
                "description_kind": "plain",
                "computed": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "description": "Custom Domain name",
                "description_kind": "plain",
                "required": true
              },
              "validation_status": {
                "type": "string",
                "description": "Status of the domain",
                "description_kind": "plain",
                "computed": true
              }
            },
            "description_kind": "plain"
          }
        },
        "okta_domain_certificate": {
          "version": 0,
          "block": {
            "attributes": {
              "certificate": {
                "type": "string",
                "description": "Certificate content",
                "description_kind": "plain",
                "required": true
              },
              "certificate_chain": {
                "type": "string",
                "description": "Certificate chain",
                "description_kind": "plain",
                "required": true
              },
              "domain_id": {
                "type": "string",
                "description": "Domain's ID",
                "description_kind": "plain",
                "required": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "private_key": {
                "type": "string",
                "description": "Certificate private key",
                "description_kind": "plain",
                "required": true
              },
              "type": {
                "type": "string",
                "description": "Certificate type",
                "description_kind": "plain",
                "optional": true
              }
            },
            "description_kind": "plain"
          }
        },
        "okta_domain_verification": {
          "version": 0,
          "block": {
            "attributes": {
              "domain_id": {
                "type": "string",
                "description": "Domain's ID",
                "description_kind": "plain",
                "required": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              }
            },
            "description_kind": "plain"
          }
        },
        "okta_email_customization": {
          "version": 0,
          "block": {
            "attributes": {
              "body": {
                "type": "string",
                "description": "The body of the customization",
                "description_kind": "plain",
                "optional": true
              },
              "brand_id": {
                "type": "string",
                "description": "Brand ID",
                "description_kind": "plain",
                "required": true
              },
              "force_is_default": {
                "type": "string",
                "description": "Force is_default on the create and delete by deleting all email customizations. Comma separated string with values of 'create' or 'destroy' or both `create,destroy'.",
                "description_kind": "plain",
                "deprecated": true,
                "optional": true
              },
              "id": {
                "type": "string",
                "description": "The ID of the customization",
                "description_kind": "plain",
                "computed": true
              },
              "is_default": {
                "type": "bool",
                "description": "Whether the customization is the default",
                "description_kind": "plain",
                "optional": true
              },
              "language": {
                "type": "string",
                "description": "The language supported by the customization",
                "description_kind": "plain",
                "optional": true
              },
              "links": {
                "type": "string",
                "description": "Link relations for this object - JSON HAL - Discoverable resources related to the email template",
                "description_kind": "plain",
                "computed": true
              },
              "subject": {
                "type": "string",
                "description": "The subject of the customization",
                "description_kind": "plain",
                "optional": true
              },
              "template_name": {
                "type": "string",
                "description": "Template Name",
                "description_kind": "plain",
                "required": true
              }
            },
            "description_kind": "plain"
          }
        },
        "okta_email_domain": {
          "version": 0,
          "block": {
            "attributes": {
              "brand_id": {
                "type": "string",
                "description": "Brand id",
                "description_kind": "plain",
                "required": true
              },
              "display_name": {
                "type": "string",
                "description": "Display name",
                "description_kind": "plain",
                "required": true
              },
              "dns_validation_records": {
                "type": [
                  "list",
                  [
                    "object",
                    {
                      "expiration": "string",
                      "fqdn": "string",
                      "record_type": "string",
                      "value": "string"
                    }
                  ]
                ],
                "description": "TXT and cname records to be registered for the email Domain",
                "description_kind": "plain",
                "computed": true
              },
              "domain": {
                "type": "string",
                "description": "Domain name",
                "description_kind": "plain",
                "required": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "user_name": {
                "type": "string",
                "description": "User name",
                "description_kind": "plain",
                "required": true
              },
              "validation_status": {
                "type": "string",
                "description": "Status of the email domain. Values: NOT_STARTED, IN_PROGRESS, VERIFIED, COMPLETED",
                "description_kind": "plain",
                "computed": true
              }
            },
            "description_kind": "plain"
          }
        },
        "okta_email_domain_verification": {
          "version": 0,
          "block": {
            "attributes": {
              "email_domain_id": {
                "type": "string",
                "description": "Email domain ID",
                "description_kind": "plain",
                "required": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              }
            },
            "description_kind": "plain"
          }
        },
        "okta_email_sender": {
          "version": 0,
          "block": {
            "attributes": {
              "dns_records": {
                "type": [
                  "list",
                  [
                    "object",
                    {
                      "fqdn": "string",
                      "record_type": "string",
                      "value": "string"
                    }
                  ]
                ],
                "description": "TXT and CNAME records to be registered for the Domain",
                "description_kind": "plain",
                "computed": true
              },
              "from_address": {
                "type": "string",
                "description": "Email address to send from ",
                "description_kind": "plain",
                "required": true
              },
              "from_name": {
                "type": "string",
                "description": "Name of sender",
                "description_kind": "plain",
                "required": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "status": {
                "type": "string",
                "description": "Verification status",
                "description_kind": "plain",
                "computed": true
              },
              "subdomain": {
                "type": "string",
                "description": "Mail domain to send from",
                "description_kind": "plain",
                "required": true
              }
            },
            "description_kind": "plain",
            "deprecated": true
          }
        },
        "okta_email_sender_verification": {
          "version": 0,
          "block": {
            "attributes": {
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "sender_id": {
                "type": "string",
                "description": "Email sender ID",
                "description_kind": "plain",
                "required": true
              }
            },
            "description_kind": "plain",
            "deprecated": true
          }
        },
        "okta_event_hook": {
          "version": 0,
          "block": {
            "attributes": {
              "auth": {
                "type": [
                  "map",
                  "string"
                ],
                "description": "Authentication required for event hook request.",
                "description_kind": "plain",
                "optional": true
              },
              "channel": {
                "type": [
                  "map",
                  "string"
                ],
                "description": "Details of the endpoint the event hook will hit.",
                "description_kind": "plain",
                "required": true
              },
              "events": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "The events that will be delivered to this hook. [See here for a list of supported events](https://developer.okta.com/docs/reference/api/event-types/?q=event-hook-eligible).",
                "description_kind": "plain",
                "required": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "description": "The event hook display name.",
                "description_kind": "plain",
                "required": true
              },
              "status": {
                "type": "string",
                "description_kind": "plain",
                "optional": true
              }
            },
            "block_types": {
              "headers": {
                "nesting_mode": "set",
                "block": {
                  "attributes": {
                    "key": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "value": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true
                    }
                  },
                  "description": "Map of headers to send along in event hook request.",
                  "description_kind": "plain"
                }
              }
            },
            "description_kind": "plain"
          }
        },
        "okta_event_hook_verification": {
          "version": 0,
          "block": {
            "attributes": {
              "event_hook_id": {
                "type": "string",
                "description": "Event hook ID",
                "description_kind": "plain",
                "required": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              }
            },
            "description_kind": "plain"
          }
        },
        "okta_factor": {
          "version": 0,
          "block": {
            "attributes": {
              "active": {
                "type": "bool",
                "description": "Is this provider active?",
                "description_kind": "plain",
                "optional": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "provider_id": {
                "type": "string",
                "description": "Factor provider ID",
                "description_kind": "plain",
                "required": true
              }
            },
            "description_kind": "plain"
          }
        },
        "okta_factor_totp": {
          "version": 0,
          "block": {
            "attributes": {
              "clock_drift_interval": {
                "type": "number",
                "description": "Clock drift interval",
                "description_kind": "plain",
                "optional": true
              },
              "hmac_algorithm": {
                "type": "string",
                "description": "Hash-based message authentication code algorithm",
                "description_kind": "plain",
                "optional": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "description": "The TOTP name.",
                "description_kind": "plain",
                "required": true
              },
              "otp_length": {
                "type": "number",
                "description": "Length of the password. Default is `6`.",
                "description_kind": "plain",
                "optional": true
              },
              "shared_secret_encoding": {
                "type": "string",
                "description": "Shared secret encoding",
                "description_kind": "plain",
                "optional": true
              },
              "time_step": {
                "type": "number",
                "description": "Time step in seconds",
                "description_kind": "plain",
                "optional": true
              }
            },
            "description_kind": "plain"
          }
        },
        "okta_group": {
          "version": 0,
          "block": {
            "attributes": {
              "custom_profile_attributes": {
                "type": "string",
                "description": "JSON formatted custom attributes for a group. It must be JSON due to various types Okta allows.",
                "description_kind": "plain",
                "optional": true
              },
              "description": {
                "type": "string",
                "description": "Group description",
                "description_kind": "plain",
                "optional": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "description": "Group name",
                "description_kind": "plain",
                "required": true
              },
              "skip_users": {
                "type": "bool",
                "description": "Ignore users sync. This is a temporary solution until 'users' field is supported in all the app-like resources",
                "description_kind": "plain",
                "deprecated": true,
                "optional": true
              }
            },
            "description_kind": "plain"
          }
        },
        "okta_group_memberships": {
          "version": 0,
          "block": {
            "attributes": {
              "group_id": {
                "type": "string",
                "description": "ID of a Okta group.",
                "description_kind": "plain",
                "required": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "track_all_users": {
                "type": "bool",
                "description": "The resource concerns itself with all users added/deleted to the group; even those managed outside of the resource.",
                "description_kind": "plain",
                "optional": true
              },
              "users": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "The list of Okta user IDs which the group should have membership managed for.",
                "description_kind": "plain",
                "required": true
              }
            },
            "description": "Resource to manage a set of group memberships for a specific group.",
            "description_kind": "plain"
          }
        },
        "okta_group_role": {
          "version": 0,
          "block": {
            "attributes": {
              "disable_notifications": {
                "type": "bool",
                "description": "When this setting is enabled, the admins won't receive any of the default Okta administrator emails",
                "description_kind": "plain",
                "optional": true
              },
              "group_id": {
                "type": "string",
                "description": "ID of group to attach admin roles to",
                "description_kind": "plain",
                "required": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "role_type": {
                "type": "string",
                "description": "Type of Role to assign",
                "description_kind": "plain",
                "required": true
              },
              "target_app_list": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "List of apps ids for the targets of the admin role.",
                "description_kind": "plain",
                "optional": true
              },
              "target_group_list": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "List of groups ids for the targets of the admin role.",
                "description_kind": "plain",
                "optional": true
              }
            },
            "description_kind": "plain"
          }
        },
        "okta_group_rule": {
          "version": 0,
          "block": {
            "attributes": {
              "expression_type": {
                "type": "string",
                "description_kind": "plain",
                "optional": true
              },
              "expression_value": {
                "type": "string",
                "description_kind": "plain",
                "required": true
              },
              "group_assignments": {
                "type": [
                  "set",
                  "string"
                ],
                "description_kind": "plain",
                "required": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "description_kind": "plain",
                "required": true
              },
              "remove_assigned_users": {
                "type": "bool",
                "description": "Remove users added by this rule from the assigned group after deleting this resource",
                "description_kind": "plain",
                "optional": true
              },
              "status": {
                "type": "string",
                "description_kind": "plain",
                "optional": true
              },
              "users_excluded": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "The list of user IDs that would be excluded when rules are processed",
                "description_kind": "plain",
                "optional": true
              }
            },
            "description_kind": "plain"
          }
        },
        "okta_group_schema_property": {
          "version": 0,
          "block": {
            "attributes": {
              "array_enum": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "Custom Subschema enumerated value of a property of type array.",
                "description_kind": "plain",
                "optional": true
              },
              "array_type": {
                "type": "string",
                "description": "Subschema array type: string, number, integer, reference. Type field must be an array.",
                "description_kind": "plain",
                "optional": true
              },
              "description": {
                "type": "string",
                "description": "Custom Subschema description",
                "description_kind": "plain",
                "optional": true
              },
              "enum": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "Custom Subschema enumerated value of the property. see: developer.okta.com/docs/api/resources/schemas#user-profile-schema-property-object",
                "description_kind": "plain",
                "optional": true
              },
              "external_name": {
                "type": "string",
                "description": "Subschema external name",
                "description_kind": "plain",
                "optional": true
              },
              "external_namespace": {
                "type": "string",
                "description": "Subschema external namespace",
                "description_kind": "plain",
                "optional": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "index": {
                "type": "string",
                "description": "Subschema unique string identifier",
                "description_kind": "plain",
                "required": true
              },
              "master": {
                "type": "string",
                "description": "SubSchema profile manager, if not set it will inherit its setting.",
                "description_kind": "plain",
                "optional": true
              },
              "max_length": {
                "type": "number",
                "description": "Subschema of type string maximum length",
                "description_kind": "plain",
                "optional": true
              },
              "min_length": {
                "type": "number",
                "description": "Subschema of type string minimum length",
                "description_kind": "plain",
                "optional": true
              },
              "permissions": {
                "type": "string",
                "description": "SubSchema permissions: HIDE, READ_ONLY, or READ_WRITE.",
                "description_kind": "plain",
                "optional": true
              },
              "required": {
                "type": "bool",
                "description": "Whether the subschema is required",
                "description_kind": "plain",
                "optional": true
              },
              "scope": {
                "type": "string",
                "description_kind": "plain",
                "optional": true
              },
              "title": {
                "type": "string",
                "description": "Subschema title (display name)",
                "description_kind": "plain",
                "required": true
              },
              "type": {
                "type": "string",
                "description": "Subschema type: string, boolean, number, integer, array, or object",
                "description_kind": "plain",
                "required": true
              },
              "unique": {
                "type": "string",
                "description": "Subschema unique restriction",
                "description_kind": "plain",
                "optional": true
              }
            },
            "block_types": {
              "array_one_of": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "const": {
                      "type": "string",
                      "description": "Enum value",
                      "description_kind": "plain",
                      "required": true
                    },
                    "title": {
                      "type": "string",
                      "description": "Enum title",
                      "description_kind": "plain",
                      "required": true
                    }
                  },
                  "description": "array of valid JSON schemas for property type array.",
                  "description_kind": "plain"
                }
              },
              "master_override_priority": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "type": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "value": {
                      "type": "string",
                      "description_kind": "plain",
                      "required": true
                    }
                  },
                  "description_kind": "plain"
                }
              },
              "one_of": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "const": {
                      "type": "string",
                      "description": "Enum value",
                      "description_kind": "plain",
                      "required": true
                    },
                    "title": {
                      "type": "string",
                      "description": "Enum title",
                      "description_kind": "plain",
                      "required": true
                    }
                  },
                  "description": "Custom Subschema json schemas. see: developer.okta.com/docs/api/resources/schemas#user-profile-schema-property-object",
                  "description_kind": "plain"
                }
              }
            },
            "description_kind": "plain"
          }
        },
        "okta_idp_oidc": {
          "version": 0,
          "block": {
            "attributes": {
              "account_link_action": {
                "type": "string",
                "description_kind": "plain",
                "optional": true
              },
              "account_link_group_include": {
                "type": [
                  "set",
                  "string"
                ],
                "description_kind": "plain",
                "optional": true
              },
              "authorization_binding": {
                "type": "string",
                "description_kind": "plain",
                "required": true
              },
              "authorization_url": {
                "type": "string",
                "description_kind": "plain",
                "required": true
              },
              "client_id": {
                "type": "string",
                "description_kind": "plain",
                "required": true
              },
              "client_secret": {
                "type": "string",
                "description_kind": "plain",
                "required": true,
                "sensitive": true
              },
              "deprovisioned_action": {
                "type": "string",
                "description_kind": "plain",
                "optional": true
              },
              "groups_action": {
                "type": "string",
                "description_kind": "plain",
                "optional": true
              },
              "groups_assignment": {
                "type": [
                  "set",
                  "string"
                ],
                "description_kind": "plain",
                "optional": true
              },
              "groups_attribute": {
                "type": "string",
                "description_kind": "plain",
                "optional": true
              },
              "groups_filter": {
                "type": [
                  "set",
                  "string"
                ],
                "description_kind": "plain",
                "optional": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "issuer_mode": {
                "type": "string",
                "description": "Indicates whether Okta uses the original Okta org domain URL, custom domain URL, or dynamic. See Identity Provider attributes - issuerMode - https://developer.okta.com/docs/reference/api/idps/#identity-provider-attributes",
                "description_kind": "plain",
                "optional": true
              },
              "issuer_url": {
                "type": "string",
                "description_kind": "plain",
                "required": true
              },
              "jwks_binding": {
                "type": "string",
                "description_kind": "plain",
                "required": true
              },
              "jwks_url": {
                "type": "string",
                "description_kind": "plain",
                "required": true
              },
              "max_clock_skew": {
                "type": "number",
                "description_kind": "plain",
                "optional": true
              },
              "name": {
                "type": "string",
                "description": "Name of the IdP",
                "description_kind": "plain",
                "required": true
              },
              "profile_master": {
                "type": "bool",
                "description_kind": "plain",
                "optional": true
              },
              "protocol_type": {
                "type": "string",
                "description_kind": "plain",
                "optional": true
              },
              "provisioning_action": {
                "type": "string",
                "description_kind": "plain",
                "optional": true
              },
              "request_signature_algorithm": {
                "type": "string",
                "description": "The HMAC Signature Algorithm used when signing an authorization request",
                "description_kind": "plain",
                "optional": true
              },
              "request_signature_scope": {
                "type": "string",
                "description": "Specifies whether to digitally sign an authorization request to the IdP",
                "description_kind": "plain",
                "optional": true
              },
              "scopes": {
                "type": [
                  "set",
                  "string"
                ],
                "description_kind": "plain",
                "required": true
              },
              "status": {
                "type": "string",
                "description_kind": "plain",
                "optional": true
              },
              "subject_match_attribute": {
                "type": "string",
                "description_kind": "plain",
                "optional": true
              },
              "subject_match_type": {
                "type": "string",
                "description_kind": "plain",
                "optional": true
              },
              "suspended_action": {
                "type": "string",
                "description_kind": "plain",
                "optional": true
              },
              "token_binding": {
                "type": "string",
                "description_kind": "plain",
                "required": true
              },
              "token_url": {
                "type": "string",
                "description_kind": "plain",
                "required": true
              },
              "type": {
                "type": "string",
                "description": "Type of OIDC IdP.",
                "description_kind": "plain",
                "computed": true
              },
              "user_info_binding": {
                "type": "string",
                "description_kind": "plain",
                "optional": true
              },
              "user_info_url": {
                "type": "string",
                "description_kind": "plain",
                "optional": true
              },
              "user_type_id": {
                "type": "string",
                "description_kind": "plain",
                "computed": true
              },
              "username_template": {
                "type": "string",
                "description_kind": "plain",
                "optional": true
              }
            },
            "description_kind": "plain"
          }
        },
        "okta_idp_saml": {
          "version": 0,
          "block": {
            "attributes": {
              "account_link_action": {
                "type": "string",
                "description_kind": "plain",
                "optional": true
              },
              "account_link_group_include": {
                "type": [
                  "set",
                  "string"
                ],
                "description_kind": "plain",
                "optional": true
              },
              "acs_binding": {
                "type": "string",
                "description_kind": "plain",
                "computed": true
              },
              "acs_type": {
                "type": "string",
                "description_kind": "plain",
                "optional": true
              },
              "audience": {
                "type": "string",
                "description_kind": "plain",
                "computed": true
              },
              "deprovisioned_action": {
                "type": "string",
                "description_kind": "plain",
                "optional": true
              },
              "groups_action": {
                "type": "string",
                "description_kind": "plain",
                "optional": true
              },
              "groups_assignment": {
                "type": [
                  "set",
                  "string"
                ],
                "description_kind": "plain",
                "optional": true
              },
              "groups_attribute": {
                "type": "string",
                "description_kind": "plain",
                "optional": true
              },
              "groups_filter": {
                "type": [
                  "set",
                  "string"
                ],
                "description_kind": "plain",
                "optional": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "issuer": {
                "type": "string",
                "description_kind": "plain",
                "required": true
              },
              "issuer_mode": {
                "type": "string",
                "description": "Indicates whether Okta uses the original Okta org domain URL, or a custom domain URL",
                "description_kind": "plain",
                "optional": true
              },
              "kid": {
                "type": "string",
                "description_kind": "plain",
                "required": true
              },
              "max_clock_skew": {
                "type": "number",
                "description_kind": "plain",
                "optional": true
              },
              "name": {
                "type": "string",
                "description": "Name of the IdP",
                "description_kind": "plain",
                "required": true
              },
              "name_format": {
                "type": "string",
                "description_kind": "plain",
                "optional": true
              },
              "profile_master": {
                "type": "bool",
                "description_kind": "plain",
                "optional": true
              },
              "provisioning_action": {
                "type": "string",
                "description_kind": "plain",
                "optional": true
              },
              "request_signature_algorithm": {
                "type": "string",
                "description": "The XML digital Signature Algorithm used when signing an <AuthnRequest> message",
                "description_kind": "plain",
                "optional": true
              },
              "request_signature_scope": {
                "type": "string",
                "description": "Specifies whether to digitally sign <AuthnRequest> messages to the IdP",
                "description_kind": "plain",
                "optional": true
              },
              "response_signature_algorithm": {
                "type": "string",
                "description": "The minimum XML digital Signature Algorithm allowed when verifying a <SAMLResponse> message or <Assertion> element",
                "description_kind": "plain",
                "optional": true
              },
              "response_signature_scope": {
                "type": "string",
                "description": "Specifies whether to verify a <SAMLResponse> message or <Assertion> element XML digital signature",
                "description_kind": "plain",
                "optional": true
              },
              "sso_binding": {
                "type": "string",
                "description_kind": "plain",
                "optional": true
              },
              "sso_destination": {
                "type": "string",
                "description_kind": "plain",
                "optional": true
              },
              "sso_url": {
                "type": "string",
                "description_kind": "plain",
                "required": true
              },
              "status": {
                "type": "string",
                "description_kind": "plain",
                "optional": true
              },
              "subject_filter": {
                "type": "string",
                "description_kind": "plain",
                "optional": true
              },
              "subject_format": {
                "type": [
                  "set",
                  "string"
                ],
                "description_kind": "plain",
                "optional": true
              },
              "subject_match_attribute": {
                "type": "string",
                "description_kind": "plain",
                "optional": true
              },
              "subject_match_type": {
                "type": "string",
                "description_kind": "plain",
                "optional": true
              },
              "suspended_action": {
                "type": "string",
                "description_kind": "plain",
                "optional": true
              },
              "type": {
                "type": "string",
                "description_kind": "plain",
                "computed": true
              },
              "user_type_id": {
                "type": "string",
                "description_kind": "plain",
                "computed": true
              },
              "username_template": {
                "type": "string",
                "description_kind": "plain",
                "optional": true
              }
            },
            "description_kind": "plain"
          }
        },
        "okta_idp_saml_key": {
          "version": 0,
          "block": {
            "attributes": {
              "created": {
                "type": "string",
                "description_kind": "plain",
                "computed": true
              },
              "expires_at": {
                "type": "string",
                "description_kind": "plain",
                "computed": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "kid": {
                "type": "string",
                "description_kind": "plain",
                "computed": true
              },
              "kty": {
                "type": "string",
                "description_kind": "plain",
                "computed": true
              },
              "use": {
                "type": "string",
                "description_kind": "plain",
                "computed": true
              },
              "x5c": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "base64-encoded X.509 certificate chain with DER encoding",
                "description_kind": "plain",
                "required": true
              },
              "x5t_s256": {
                "type": "string",
                "description_kind": "plain",
                "computed": true
              }
            },
            "description_kind": "plain"
          }
        },
        "okta_idp_social": {
          "version": 0,
          "block": {
            "attributes": {
              "account_link_action": {
                "type": "string",
                "description_kind": "plain",
                "optional": true
              },
              "account_link_group_include": {
                "type": [
                  "set",
                  "string"
                ],
                "description_kind": "plain",
                "optional": true
              },
              "apple_kid": {
                "type": "string",
                "description": "The Key ID that you obtained from Apple when you created the private key for the client",
                "description_kind": "plain",
                "optional": true
              },
              "apple_private_key": {
                "type": "string",
                "description": "The PKCS #8 encoded private key that you created for the client and downloaded from Apple",
                "description_kind": "plain",
                "optional": true,
                "sensitive": true
              },
              "apple_team_id": {
                "type": "string",
                "description": "The Team ID associated with your Apple developer account",
                "description_kind": "plain",
                "optional": true
              },
              "authorization_binding": {
                "type": "string",
                "description_kind": "plain",
                "computed": true
              },
              "authorization_url": {
                "type": "string",
                "description_kind": "plain",
                "computed": true
              },
              "client_id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true
              },
              "client_secret": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "sensitive": true
              },
              "deprovisioned_action": {
                "type": "string",
                "description_kind": "plain",
                "optional": true
              },
              "groups_action": {
                "type": "string",
                "description_kind": "plain",
                "optional": true
              },
              "groups_assignment": {
                "type": [
                  "set",
                  "string"
                ],
                "description_kind": "plain",
                "optional": true
              },
              "groups_attribute": {
                "type": "string",
                "description_kind": "plain",
                "optional": true
              },
              "groups_filter": {
                "type": [
                  "set",
                  "string"
                ],
                "description_kind": "plain",
                "optional": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "issuer_mode": {
                "type": "string",
                "description": "Indicates whether Okta uses the original Okta org domain URL, or a custom domain URL",
                "description_kind": "plain",
                "optional": true
              },
              "max_clock_skew": {
                "type": "number",
                "description_kind": "plain",
                "optional": true
              },
              "name": {
                "type": "string",
                "description": "Name of the IdP",
                "description_kind": "plain",
                "required": true
              },
              "profile_master": {
                "type": "bool",
                "description_kind": "plain",
                "optional": true
              },
              "protocol_type": {
                "type": "string",
                "description_kind": "plain",
                "optional": true
              },
              "provisioning_action": {
                "type": "string",
                "description_kind": "plain",
                "optional": true
              },
              "scopes": {
                "type": [
                  "set",
                  "string"
                ],
                "description_kind": "plain",
                "required": true
              },
              "status": {
                "type": "string",
                "description_kind": "plain",
                "optional": true
              },
              "subject_match_attribute": {
                "type": "string",
                "description_kind": "plain",
                "optional": true
              },
              "subject_match_type": {
                "type": "string",
                "description_kind": "plain",
                "optional": true
              },
              "suspended_action": {
                "type": "string",
                "description_kind": "plain",
                "optional": true
              },
              "token_binding": {
                "type": "string",
                "description_kind": "plain",
                "computed": true
              },
              "token_url": {
                "type": "string",
                "description_kind": "plain",
                "computed": true
              },
              "type": {
                "type": "string",
                "description": "Identity Provider Types: https://developer.okta.com/docs/reference/api/idps/#identity-provider-type",
                "description_kind": "plain",
                "required": true
              },
              "username_template": {
                "type": "string",
                "description_kind": "plain",
                "optional": true
              }
            },
            "description_kind": "plain"
          }
        },
        "okta_inline_hook": {
          "version": 0,
          "block": {
            "attributes": {
              "auth": {
                "type": [
                  "map",
                  "string"
                ],
                "description_kind": "plain",
                "optional": true
              },
              "channel": {
                "type": [
                  "map",
                  "string"
                ],
                "description_kind": "plain",
                "required": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "description_kind": "plain",
                "required": true
              },
              "status": {
                "type": "string",
                "description_kind": "plain",
                "optional": true
              },
              "type": {
                "type": "string",
                "description_kind": "plain",
                "required": true
              },
              "version": {
                "type": "string",
                "description_kind": "plain",
                "required": true
              }
            },
            "block_types": {
              "headers": {
                "nesting_mode": "set",
                "block": {
                  "attributes": {
                    "key": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "value": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true
                    }
                  },
                  "description_kind": "plain"
                }
              }
            },
            "description_kind": "plain"
          }
        },
        "okta_link_definition": {
          "version": 0,
          "block": {
            "attributes": {
              "associated_description": {
                "type": "string",
                "description": "Description of the associated relationship.",
                "description_kind": "plain",
                "required": true
              },
              "associated_name": {
                "type": "string",
                "description": "API name of the associated link.",
                "description_kind": "plain",
                "required": true
              },
              "associated_title": {
                "type": "string",
                "description": "Display name of the associated link.",
                "description_kind": "plain",
                "required": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "primary_description": {
                "type": "string",
                "description": "Description of the primary relationship.",
                "description_kind": "plain",
                "required": true
              },
              "primary_name": {
                "type": "string",
                "description": "API name of the primary link.",
                "description_kind": "plain",
                "required": true
              },
              "primary_title": {
                "type": "string",
                "description": "Display name of the primary link.",
                "description_kind": "plain",
                "required": true
              }
            },
            "description_kind": "plain"
          }
        },
        "okta_link_value": {
          "version": 0,
          "block": {
            "attributes": {
              "associated_user_ids": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "Set of User IDs or login values of the users to be assigned the 'associated' relationship.",
                "description_kind": "plain",
                "optional": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "primary_name": {
                "type": "string",
                "description": "Name of the 'primary' relationship being assigned.",
                "description_kind": "plain",
                "required": true
              },
              "primary_user_id": {
                "type": "string",
                "description": "User ID to be assigned to 'primary' for the 'associated' user in the specified relationship.",
                "description_kind": "plain",
                "required": true
              }
            },
            "description_kind": "plain"
          }
        },
        "okta_network_zone": {
          "version": 0,
          "block": {
            "attributes": {
              "asns": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "Format of each array value: a string representation of an ASN numeric value",
                "description_kind": "plain",
                "optional": true
              },
              "dynamic_locations": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "Array of locations ISO-3166-1(2). Format code: countryCode OR countryCode-regionCode",
                "description_kind": "plain",
                "optional": true
              },
              "dynamic_proxy_type": {
                "type": "string",
                "description": "Type of proxy being controlled by this network zone",
                "description_kind": "plain",
                "optional": true
              },
              "gateways": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "Array of values in CIDR/range form depending on the way it's been declared (i.e. CIDR will contain /suffix). Please check API docs for examples",
                "description_kind": "plain",
                "optional": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "description": "Name of the Network Zone Resource",
                "description_kind": "plain",
                "required": true
              },
              "proxies": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "Array of values in CIDR/range form depending on the way it's been declared (i.e. CIDR will contain /suffix). Please check API docs for examples",
                "description_kind": "plain",
                "optional": true
              },
              "status": {
                "type": "string",
                "description": "Network Status - can either be ACTIVE or INACTIVE only",
                "description_kind": "plain",
                "optional": true
              },
              "type": {
                "type": "string",
                "description": "Type of the Network Zone - can either be IP or DYNAMIC only",
                "description_kind": "plain",
                "required": true
              },
              "usage": {
                "type": "string",
                "description": "Zone's purpose: POLICY or BLOCKLIST",
                "description_kind": "plain",
                "optional": true
              }
            },
            "description_kind": "plain"
          }
        },
        "okta_org_configuration": {
          "version": 0,
          "block": {
            "attributes": {
              "address_1": {
                "type": "string",
                "description": "Primary address of org",
                "description_kind": "plain",
                "optional": true
              },
              "address_2": {
                "type": "string",
                "description": "Secondary address of org",
                "description_kind": "plain",
                "optional": true
              },
              "billing_contact_user": {
                "type": "string",
                "description": "User ID representing the billing contact",
                "description_kind": "plain",
                "optional": true
              },
              "city": {
                "type": "string",
                "description": "City of org",
                "description_kind": "plain",
                "optional": true
              },
              "company_name": {
                "type": "string",
                "description": "Name of org",
                "description_kind": "plain",
                "required": true
              },
              "country": {
                "type": "string",
                "description": "Country of org",
                "description_kind": "plain",
                "optional": true
              },
              "end_user_support_help_url": {
                "type": "string",
                "description": "Support link of org",
                "description_kind": "plain",
                "optional": true
              },
              "expires_at": {
                "type": "string",
                "description": "Expiration of org",
                "description_kind": "plain",
                "computed": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "logo": {
                "type": "string",
                "description": "Local path to logo of the org.",
                "description_kind": "plain",
                "optional": true
              },
              "opt_out_communication_emails": {
                "type": "bool",
                "description": "Indicates whether the org's users receive Okta Communication emails",
                "description_kind": "plain",
                "optional": true
              },
              "phone_number": {
                "type": "string",
                "description": "Support help phone of org",
                "description_kind": "plain",
                "optional": true
              },
              "postal_code": {
                "type": "string",
                "description": "Postal code of org",
                "description_kind": "plain",
                "optional": true
              },
              "state": {
                "type": "string",
                "description": "State of org",
                "description_kind": "plain",
                "optional": true
              },
              "subdomain": {
                "type": "string",
                "description": "Subdomain of org",
                "description_kind": "plain",
                "computed": true
              },
              "support_phone_number": {
                "type": "string",
                "description": "Support help phone of org",
                "description_kind": "plain",
                "optional": true
              },
              "technical_contact_user": {
                "type": "string",
                "description": "User ID representing the technical contact",
                "description_kind": "plain",
                "optional": true
              },
              "website": {
                "type": "string",
                "description": "The org's website",
                "description_kind": "plain",
                "optional": true
              }
            },
            "description_kind": "plain"
          }
        },
        "okta_org_support": {
          "version": 0,
          "block": {
            "attributes": {
              "expiration": {
                "type": "string",
                "description": "Expiration of Okta Support",
                "description_kind": "plain",
                "computed": true
              },
              "extend_by": {
                "type": "number",
                "description": "Number of days the support should be extended by",
                "description_kind": "plain",
                "optional": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "status": {
                "type": "string",
                "description": "Status of Okta Support",
                "description_kind": "plain",
                "computed": true
              }
            },
            "description_kind": "plain"
          }
        },
        "okta_policy_device_assurance_android": {
          "version": 0,
          "block": {
            "attributes": {
              "created_by": {
                "type": "string",
                "description": "Created by",
                "description_kind": "plain",
                "computed": true
              },
              "created_date": {
                "type": "string",
                "description": "Created date",
                "description_kind": "plain",
                "computed": true
              },
              "disk_encryption_type": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "List of disk encryption type, can be FULL, USER",
                "description_kind": "plain",
                "optional": true
              },
              "id": {
                "type": "string",
                "description": "Policy assurance id",
                "description_kind": "plain",
                "computed": true
              },
              "jailbreak": {
                "type": "bool",
                "description": "The device jailbreak. Only for android and iOS platform",
                "description_kind": "plain",
                "optional": true
              },
              "last_update": {
                "type": "string",
                "description": "Last update",
                "description_kind": "plain",
                "computed": true
              },
              "last_updated_by": {
                "type": "string",
                "description": "Last updated by",
                "description_kind": "plain",
                "computed": true
              },
              "name": {
                "type": "string",
                "description": "Policy device assurance name",
                "description_kind": "plain",
                "required": true
              },
              "os_version": {
                "type": "string",
                "description": "The device os minimum version",
                "description_kind": "plain",
                "optional": true
              },
              "platform": {
                "type": "string",
                "description": "Policy device assurance platform",
                "description_kind": "plain",
                "computed": true
              },
              "screenlock_type": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "List of screenlock type, can be BIOMETRIC or BIOMETRIC, PASSCODE",
                "description_kind": "plain",
                "optional": true
              },
              "secure_hardware_present": {
                "type": "bool",
                "description": "Indicates if the device constains a secure hardware functionality",
                "description_kind": "plain",
                "optional": true
              }
            },
            "description": "Manages device assurance on policy",
            "description_kind": "plain"
          }
        },
        "okta_policy_device_assurance_chromeos": {
          "version": 0,
          "block": {
            "attributes": {
              "created_by": {
                "type": "string",
                "description": "Created by",
                "description_kind": "plain",
                "computed": true
              },
              "created_date": {
                "type": "string",
                "description": "Created date",
                "description_kind": "plain",
                "computed": true
              },
              "id": {
                "type": "string",
                "description": "Policy assurance id",
                "description_kind": "plain",
                "computed": true
              },
              "last_update": {
                "type": "string",
                "description": "Last update",
                "description_kind": "plain",
                "computed": true
              },
              "last_updated_by": {
                "type": "string",
                "description": "Last updated by",
                "description_kind": "plain",
                "computed": true
              },
              "name": {
                "type": "string",
                "description": "Policy device assurance name",
                "description_kind": "plain",
                "required": true
              },
              "platform": {
                "type": "string",
                "description": "Policy device assurance platform",
                "description_kind": "plain",
                "computed": true
              },
              "tpsp_allow_screen_lock": {
                "type": "bool",
                "description": "Third party signal provider allow screen lock",
                "description_kind": "plain",
                "optional": true
              },
              "tpsp_browser_version": {
                "type": "string",
                "description": "Third party signal provider minimum browser version",
                "description_kind": "plain",
                "optional": true
              },
              "tpsp_builtin_dns_client_enabled": {
                "type": "bool",
                "description": "Third party signal provider builtin dns client enabled",
                "description_kind": "plain",
                "optional": true
              },
              "tpsp_chrome_remote_desktop_app_blocked": {
                "type": "bool",
                "description": "Third party signal provider chrome remote desktop app blocked",
                "description_kind": "plain",
                "optional": true
              },
              "tpsp_device_enrollment_domain": {
                "type": "string",
                "description": "Third party signal provider device enrollment domain",
                "description_kind": "plain",
                "optional": true
              },
              "tpsp_disk_encrypted": {
                "type": "bool",
                "description": "Third party signal provider disk encrypted",
                "description_kind": "plain",
                "optional": true
              },
              "tpsp_key_trust_level": {
                "type": "string",
                "description": "Third party signal provider key trust level",
                "description_kind": "plain",
                "optional": true
              },
              "tpsp_os_firewall": {
                "type": "bool",
                "description": "Third party signal provider os firewall",
                "description_kind": "plain",
                "optional": true
              },
              "tpsp_os_version": {
                "type": "string",
                "description": "Third party signal provider minimum os version",
                "description_kind": "plain",
                "optional": true
              },
              "tpsp_password_proctection_warning_trigger": {
                "type": "string",
                "description": "Third party signal provider password protection warning trigger",
                "description_kind": "plain",
                "optional": true
              },
              "tpsp_realtime_url_check_mode": {
                "type": "bool",
                "description": "Third party signal provider realtime url check mode",
                "description_kind": "plain",
                "optional": true
              },
              "tpsp_safe_browsing_protection_level": {
                "type": "string",
                "description": "Third party signal provider safe browsing protection level",
                "description_kind": "plain",
                "optional": true
              },
              "tpsp_screen_lock_secured": {
                "type": "bool",
                "description": "Third party signal provider screen lock secure",
                "description_kind": "plain",
                "optional": true
              },
              "tpsp_site_isolation_enabled": {
                "type": "bool",
                "description": "Third party signal provider site isolation enabled",
                "description_kind": "plain",
                "optional": true
              }
            },
            "description": "Manages device assurance on policy",
            "description_kind": "plain"
          }
        },
        "okta_policy_device_assurance_ios": {
          "version": 0,
          "block": {
            "attributes": {
              "created_by": {
                "type": "string",
                "description": "Created by",
                "description_kind": "plain",
                "computed": true
              },
              "created_date": {
                "type": "string",
                "description": "Created date",
                "description_kind": "plain",
                "computed": true
              },
              "id": {
                "type": "string",
                "description": "Policy assurance id",
                "description_kind": "plain",
                "computed": true
              },
              "jailbreak": {
                "type": "bool",
                "description": "The device jailbreak. Only for android and iOS platform",
                "description_kind": "plain",
                "optional": true
              },
              "last_update": {
                "type": "string",
                "description": "Last update",
                "description_kind": "plain",
                "computed": true
              },
              "last_updated_by": {
                "type": "string",
                "description": "Last updated by",
                "description_kind": "plain",
                "computed": true
              },
              "name": {
                "type": "string",
                "description": "Policy device assurance name",
                "description_kind": "plain",
                "required": true
              },
              "os_version": {
                "type": "string",
                "description": "The device os minimum version",
                "description_kind": "plain",
                "optional": true
              },
              "platform": {
                "type": "string",
                "description": "Policy device assurance platform",
                "description_kind": "plain",
                "computed": true
              },
              "screenlock_type": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "List of screenlock type, can be BIOMETRIC or BIOMETRIC, PASSCODE",
                "description_kind": "plain",
                "optional": true
              }
            },
            "description": "Manages device assurance on policy",
            "description_kind": "plain"
          }
        },
        "okta_policy_device_assurance_macos": {
          "version": 0,
          "block": {
            "attributes": {
              "created_by": {
                "type": "string",
                "description": "Created by",
                "description_kind": "plain",
                "computed": true
              },
              "created_date": {
                "type": "string",
                "description": "Created date",
                "description_kind": "plain",
                "computed": true
              },
              "disk_encryption_type": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "List of disk encryption type, can be ALL_INTERNAL_VOLUMES",
                "description_kind": "plain",
                "optional": true
              },
              "id": {
                "type": "string",
                "description": "Policy assurance id",
                "description_kind": "plain",
                "computed": true
              },
              "last_update": {
                "type": "string",
                "description": "Last update",
                "description_kind": "plain",
                "computed": true
              },
              "last_updated_by": {
                "type": "string",
                "description": "Last updated by",
                "description_kind": "plain",
                "computed": true
              },
              "name": {
                "type": "string",
                "description": "Policy device assurance name",
                "description_kind": "plain",
                "required": true
              },
              "os_version": {
                "type": "string",
                "description": "The device os minimum version",
                "description_kind": "plain",
                "optional": true
              },
              "platform": {
                "type": "string",
                "description": "Policy device assurance platform",
                "description_kind": "plain",
                "computed": true
              },
              "screenlock_type": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "List of screenlock type, can be BIOMETRIC or BIOMETRIC, PASSCODE",
                "description_kind": "plain",
                "optional": true
              },
              "secure_hardware_present": {
                "type": "bool",
                "description": "Indicates if the device constains a secure hardware functionality",
                "description_kind": "plain",
                "optional": true
              },
              "third_party_signal_providers": {
                "type": "bool",
                "description": "Check to include third party signal provider",
                "description_kind": "plain",
                "optional": true
              },
              "tpsp_browser_version": {
                "type": "string",
                "description": "Third party signal provider minimum browser version",
                "description_kind": "plain",
                "optional": true
              },
              "tpsp_builtin_dns_client_enabled": {
                "type": "bool",
                "description": "Third party signal provider builtin dns client enable",
                "description_kind": "plain",
                "optional": true
              },
              "tpsp_chrome_remote_desktop_app_blocked": {
                "type": "bool",
                "description": "Third party signal provider chrome remote desktop app blocked",
                "description_kind": "plain",
                "optional": true
              },
              "tpsp_device_enrollment_domain": {
                "type": "string",
                "description": "Third party signal provider device enrollment domain",
                "description_kind": "plain",
                "optional": true
              },
              "tpsp_disk_encrypted": {
                "type": "bool",
                "description": "Third party signal provider disk encrypted",
                "description_kind": "plain",
                "optional": true
              },
              "tpsp_key_trust_level": {
                "type": "string",
                "description": "Third party signal provider key trust level",
                "description_kind": "plain",
                "optional": true
              },
              "tpsp_os_firewall": {
                "type": "bool",
                "description": "Third party signal provider os firewall",
                "description_kind": "plain",
                "optional": true
              },
              "tpsp_os_version": {
                "type": "string",
                "description": "Third party signal provider minimum os version",
                "description_kind": "plain",
                "optional": true
              },
              "tpsp_password_proctection_warning_trigger": {
                "type": "string",
                "description": "Third party signal provider password protection warning trigger",
                "description_kind": "plain",
                "optional": true
              },
              "tpsp_realtime_url_check_mode": {
                "type": "bool",
                "description": "Third party signal provider realtime url check mode",
                "description_kind": "plain",
                "optional": true
              },
              "tpsp_safe_browsing_protection_level": {
                "type": "string",
                "description": "Third party signal provider safe browsing protection level",
                "description_kind": "plain",
                "optional": true
              },
              "tpsp_screen_lock_secured": {
                "type": "bool",
                "description": "Third party signal provider screen lock secure",
                "description_kind": "plain",
                "optional": true
              },
              "tpsp_site_isolation_enabled": {
                "type": "bool",
                "description": "Third party signal provider site isolation enabled",
                "description_kind": "plain",
                "optional": true
              }
            },
            "description": "Manages device assurance on policy",
            "description_kind": "plain"
          }
        },
        "okta_policy_device_assurance_windows": {
          "version": 0,
          "block": {
            "attributes": {
              "created_by": {
                "type": "string",
                "description": "Created by",
                "description_kind": "plain",
                "computed": true
              },
              "created_date": {
                "type": "string",
                "description": "Created date",
                "description_kind": "plain",
                "computed": true
              },
              "disk_encryption_type": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "List of disk encryption type, can be ALL_INTERNAL_VOLUMES",
                "description_kind": "plain",
                "optional": true
              },
              "id": {
                "type": "string",
                "description": "Policy assurance id",
                "description_kind": "plain",
                "computed": true
              },
              "last_update": {
                "type": "string",
                "description": "Last update",
                "description_kind": "plain",
                "computed": true
              },
              "last_updated_by": {
                "type": "string",
                "description": "Last updated by",
                "description_kind": "plain",
                "computed": true
              },
              "name": {
                "type": "string",
                "description": "Policy device assurance name",
                "description_kind": "plain",
                "required": true
              },
              "os_version": {
                "type": "string",
                "description": "The device os minimum version",
                "description_kind": "plain",
                "optional": true
              },
              "platform": {
                "type": "string",
                "description": "Policy device assurance platform",
                "description_kind": "plain",
                "computed": true
              },
              "screenlock_type": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "List of screenlock type, can be BIOMETRIC or BIOMETRIC, PASSCODE",
                "description_kind": "plain",
                "optional": true
              },
              "secure_hardware_present": {
                "type": "bool",
                "description": "Indicates if the device constains a secure hardware functionality",
                "description_kind": "plain",
                "optional": true
              },
              "third_party_signal_providers": {
                "type": "bool",
                "description": "Check to include third party signal provider",
                "description_kind": "plain",
                "optional": true
              },
              "tpsp_browser_version": {
                "type": "string",
                "description": "Third party signal provider minimum browser version",
                "description_kind": "plain",
                "optional": true
              },
              "tpsp_builtin_dns_client_enabled": {
                "type": "bool",
                "description": "Third party signal provider builtin dns client enable",
                "description_kind": "plain",
                "optional": true
              },
              "tpsp_chrome_remote_desktop_app_blocked": {
                "type": "bool",
                "description": "Third party signal provider chrome remote desktop app blocked",
                "description_kind": "plain",
                "optional": true
              },
              "tpsp_crowd_strike_agent_id": {
                "type": "string",
                "description": "Third party signal provider crowdstrike agent id",
                "description_kind": "plain",
                "optional": true
              },
              "tpsp_crowd_strike_customer_id": {
                "type": "string",
                "description": "Third party signal provider crowdstrike user id",
                "description_kind": "plain",
                "optional": true
              },
              "tpsp_device_enrollment_domain": {
                "type": "string",
                "description": "Third party signal provider device enrollment domain",
                "description_kind": "plain",
                "optional": true
              },
              "tpsp_disk_encrypted": {
                "type": "bool",
                "description": "Third party signal provider disk encrypted",
                "description_kind": "plain",
                "optional": true
              },
              "tpsp_key_trust_level": {
                "type": "string",
                "description": "Third party signal provider key trust level",
                "description_kind": "plain",
                "optional": true
              },
              "tpsp_os_firewall": {
                "type": "bool",
                "description": "Third party signal provider os firewall",
                "description_kind": "plain",
                "optional": true
              },
              "tpsp_os_version": {
                "type": "string",
                "description": "Third party signal provider minimum os version",
                "description_kind": "plain",
                "optional": true
              },
              "tpsp_password_proctection_warning_trigger": {
                "type": "string",
                "description": "Third party signal provider password protection warning trigger",
                "description_kind": "plain",
                "optional": true
              },
              "tpsp_realtime_url_check_mode": {
                "type": "bool",
                "description": "Third party signal provider realtime url check mode",
                "description_kind": "plain",
                "optional": true
              },
              "tpsp_safe_browsing_protection_level": {
                "type": "string",
                "description": "Third party signal provider safe browsing protection level",
                "description_kind": "plain",
                "optional": true
              },
              "tpsp_screen_lock_secured": {
                "type": "bool",
                "description": "Third party signal provider screen lock secure",
                "description_kind": "plain",
                "optional": true
              },
              "tpsp_secure_boot_enabled": {
                "type": "bool",
                "description": "Third party signal provider secure boot enabled",
                "description_kind": "plain",
                "optional": true
              },
              "tpsp_site_isolation_enabled": {
                "type": "bool",
                "description": "Third party signal provider site isolation enabled",
                "description_kind": "plain",
                "optional": true
              },
              "tpsp_third_party_blocking_enabled": {
                "type": "bool",
                "description": "Third party signal provider third party blocking enabled",
                "description_kind": "plain",
                "optional": true
              },
              "tpsp_windows_machine_domain": {
                "type": "string",
                "description": "Third party signal provider windows machine domain",
                "description_kind": "plain",
                "optional": true
              },
              "tpsp_windows_user_domain": {
                "type": "string",
                "description": "Third party signal provider windows user domain",
                "description_kind": "plain",
                "optional": true
              }
            },
            "description": "Manages device assurance on policy",
            "description_kind": "plain"
          }
        },
        "okta_policy_mfa": {
          "version": 0,
          "block": {
            "attributes": {
              "description": {
                "type": "string",
                "description": "Policy Description",
                "description_kind": "plain",
                "optional": true
              },
              "duo": {
                "type": [
                  "map",
                  "string"
                ],
                "description_kind": "plain",
                "optional": true
              },
              "external_idp": {
                "type": [
                  "map",
                  "string"
                ],
                "description_kind": "plain",
                "optional": true
              },
              "fido_u2f": {
                "type": [
                  "map",
                  "string"
                ],
                "description_kind": "plain",
                "optional": true
              },
              "fido_webauthn": {
                "type": [
                  "map",
                  "string"
                ],
                "description_kind": "plain",
                "optional": true
              },
              "google_otp": {
                "type": [
                  "map",
                  "string"
                ],
                "description_kind": "plain",
                "optional": true
              },
              "groups_included": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "List of Group IDs to Include",
                "description_kind": "plain",
                "optional": true
              },
              "hotp": {
                "type": [
                  "map",
                  "string"
                ],
                "description_kind": "plain",
                "optional": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "is_oie": {
                "type": "bool",
                "description": "Is the policy using Okta Identity Engine (OIE) with authenticators instead of factors?",
                "description_kind": "plain",
                "optional": true
              },
              "name": {
                "type": "string",
                "description": "Policy Name",
                "description_kind": "plain",
                "required": true
              },
              "okta_call": {
                "type": [
                  "map",
                  "string"
                ],
                "description_kind": "plain",
                "optional": true
              },
              "okta_email": {
                "type": [
                  "map",
                  "string"
                ],
                "description_kind": "plain",
                "optional": true
              },
              "okta_otp": {
                "type": [
                  "map",
                  "string"
                ],
                "description_kind": "plain",
                "optional": true
              },
              "okta_password": {
                "type": [
                  "map",
                  "string"
                ],
                "description_kind": "plain",
                "optional": true
              },
              "okta_push": {
                "type": [
                  "map",
                  "string"
                ],
                "description_kind": "plain",
                "optional": true
              },
              "okta_question": {
                "type": [
                  "map",
                  "string"
                ],
                "description_kind": "plain",
                "optional": true
              },
              "okta_sms": {
                "type": [
                  "map",
                  "string"
                ],
                "description_kind": "plain",
                "optional": true
              },
              "okta_verify": {
                "type": [
                  "map",
                  "string"
                ],
                "description_kind": "plain",
                "optional": true
              },
              "onprem_mfa": {
                "type": [
                  "map",
                  "string"
                ],
                "description_kind": "plain",
                "optional": true
              },
              "phone_number": {
                "type": [
                  "map",
                  "string"
                ],
                "description_kind": "plain",
                "optional": true
              },
              "priority": {
                "type": "number",
                "description": "Policy Priority, this attribute can be set to a valid priority. To avoid endless diff situation we error if an invalid priority is provided. API defaults it to the last (lowest) if not there.",
                "description_kind": "plain",
                "optional": true
              },
              "rsa_token": {
                "type": [
                  "map",
                  "string"
                ],
                "description_kind": "plain",
                "optional": true
              },
              "security_question": {
                "type": [
                  "map",
                  "string"
                ],
                "description_kind": "plain",
                "optional": true
              },
              "status": {
                "type": "string",
                "description": "Policy Status: ACTIVE or INACTIVE.",
                "description_kind": "plain",
                "optional": true
              },
              "symantec_vip": {
                "type": [
                  "map",
                  "string"
                ],
                "description_kind": "plain",
                "optional": true
              },
              "webauthn": {
                "type": [
                  "map",
                  "string"
                ],
                "description_kind": "plain",
                "optional": true
              },
              "yubikey_token": {
                "type": [
                  "map",
                  "string"
                ],
                "description_kind": "plain",
                "optional": true
              }
            },
            "description_kind": "plain"
          }
        },
        "okta_policy_mfa_default": {
          "version": 0,
          "block": {
            "attributes": {
              "default_included_group_id": {
                "type": "string",
                "description": "Default group ID (always included)",
                "description_kind": "plain",
                "computed": true
              },
              "description": {
                "type": "string",
                "description": "Default policy description",
                "description_kind": "plain",
                "computed": true
              },
              "duo": {
                "type": [
                  "map",
                  "string"
                ],
                "description_kind": "plain",
                "optional": true
              },
              "external_idp": {
                "type": [
                  "map",
                  "string"
                ],
                "description_kind": "plain",
                "optional": true
              },
              "fido_u2f": {
                "type": [
                  "map",
                  "string"
                ],
                "description_kind": "plain",
                "optional": true
              },
              "fido_webauthn": {
                "type": [
                  "map",
                  "string"
                ],
                "description_kind": "plain",
                "optional": true
              },
              "google_otp": {
                "type": [
                  "map",
                  "string"
                ],
                "description_kind": "plain",
                "optional": true
              },
              "hotp": {
                "type": [
                  "map",
                  "string"
                ],
                "description_kind": "plain",
                "optional": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "is_oie": {
                "type": "bool",
                "description": "Is the policy using Okta Identity Engine (OIE) with authenticators instead of factors?",
                "description_kind": "plain",
                "optional": true
              },
              "name": {
                "type": "string",
                "description": "Default policy name",
                "description_kind": "plain",
                "computed": true
              },
              "okta_call": {
                "type": [
                  "map",
                  "string"
                ],
                "description_kind": "plain",
                "optional": true
              },
              "okta_email": {
                "type": [
                  "map",
                  "string"
                ],
                "description_kind": "plain",
                "optional": true
              },
              "okta_otp": {
                "type": [
                  "map",
                  "string"
                ],
                "description_kind": "plain",
                "optional": true
              },
              "okta_password": {
                "type": [
                  "map",
                  "string"
                ],
                "description_kind": "plain",
                "optional": true
              },
              "okta_push": {
                "type": [
                  "map",
                  "string"
                ],
                "description_kind": "plain",
                "optional": true
              },
              "okta_question": {
                "type": [
                  "map",
                  "string"
                ],
                "description_kind": "plain",
                "optional": true
              },
              "okta_sms": {
                "type": [
                  "map",
                  "string"
                ],
                "description_kind": "plain",
                "optional": true
              },
              "okta_verify": {
                "type": [
                  "map",
                  "string"
                ],
                "description_kind": "plain",
                "optional": true
              },
              "onprem_mfa": {
                "type": [
                  "map",
                  "string"
                ],
                "description_kind": "plain",
                "optional": true
              },
              "phone_number": {
                "type": [
                  "map",
                  "string"
                ],
                "description_kind": "plain",
                "optional": true
              },
              "priority": {
                "type": "number",
                "description": "Default policy priority",
                "description_kind": "plain",
                "computed": true
              },
              "rsa_token": {
                "type": [
                  "map",
                  "string"
                ],
                "description_kind": "plain",
                "optional": true
              },
              "security_question": {
                "type": [
                  "map",
                  "string"
                ],
                "description_kind": "plain",
                "optional": true
              },
              "status": {
                "type": "string",
                "description": "Default policy status",
                "description_kind": "plain",
                "computed": true
              },
              "symantec_vip": {
                "type": [
                  "map",
                  "string"
                ],
                "description_kind": "plain",
                "optional": true
              },
              "webauthn": {
                "type": [
                  "map",
                  "string"
                ],
                "description_kind": "plain",
                "optional": true
              },
              "yubikey_token": {
                "type": [
                  "map",
                  "string"
                ],
                "description_kind": "plain",
                "optional": true
              }
            },
            "description_kind": "plain"
          }
        },
        "okta_policy_password": {
          "version": 0,
          "block": {
            "attributes": {
              "auth_provider": {
                "type": "string",
                "description": "Authentication Provider: OKTA, ACTIVE_DIRECTORY or LDAP",
                "description_kind": "plain",
                "optional": true
              },
              "call_recovery": {
                "type": "string",
                "description": "Enable or disable voice call recovery: ACTIVE or INACTIVE.",
                "description_kind": "plain",
                "optional": true
              },
              "description": {
                "type": "string",
                "description": "Policy Description",
                "description_kind": "plain",
                "optional": true
              },
              "email_recovery": {
                "type": "string",
                "description": "Enable or disable email password recovery: ACTIVE or INACTIVE.",
                "description_kind": "plain",
                "optional": true
              },
              "groups_included": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "List of Group IDs to Include",
                "description_kind": "plain",
                "optional": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "description": "Policy Name",
                "description_kind": "plain",
                "required": true
              },
              "password_auto_unlock_minutes": {
                "type": "number",
                "description": "Number of minutes before a locked account is unlocked: 0 = no limit.",
                "description_kind": "plain",
                "optional": true
              },
              "password_dictionary_lookup": {
                "type": "bool",
                "description": "Check Passwords Against Common Password Dictionary.",
                "description_kind": "plain",
                "optional": true
              },
              "password_exclude_first_name": {
                "type": "bool",
                "description": "User firstName attribute must be excluded from the password",
                "description_kind": "plain",
                "optional": true
              },
              "password_exclude_last_name": {
                "type": "bool",
                "description": "User lastName attribute must be excluded from the password",
                "description_kind": "plain",
                "optional": true
              },
              "password_exclude_username": {
                "type": "bool",
                "description": "If the user name must be excluded from the password.",
                "description_kind": "plain",
                "optional": true
              },
              "password_expire_warn_days": {
                "type": "number",
                "description": "Length in days a user will be warned before password expiry: 0 = no warning.",
                "description_kind": "plain",
                "optional": true
              },
              "password_history_count": {
                "type": "number",
                "description": "Number of distinct passwords that must be created before they can be reused: 0 = none.",
                "description_kind": "plain",
                "optional": true
              },
              "password_lockout_notification_channels": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "Notification channels to use to notify a user when their account has been locked.",
                "description_kind": "plain",
                "optional": true
              },
              "password_max_age_days": {
                "type": "number",
                "description": "Length in days a password is valid before expiry: 0 = no limit.",
                "description_kind": "plain",
                "optional": true
              },
              "password_max_lockout_attempts": {
                "type": "number",
                "description": "Number of unsuccessful login attempts allowed before lockout: 0 = no limit.",
                "description_kind": "plain",
                "optional": true
              },
              "password_min_age_minutes": {
                "type": "number",
                "description": "Minimum time interval in minutes between password changes: 0 = no limit.",
                "description_kind": "plain",
                "optional": true
              },
              "password_min_length": {
                "type": "number",
                "description": "Minimum password length.",
                "description_kind": "plain",
                "optional": true
              },
              "password_min_lowercase": {
                "type": "number",
                "description": "If a password must contain at least one lower case letter: 0 = no, 1 = yes. Default = 1",
                "description_kind": "plain",
                "optional": true
              },
              "password_min_number": {
                "type": "number",
                "description": "If a password must contain at least one number: 0 = no, 1 = yes. Default = 1",
                "description_kind": "plain",
                "optional": true
              },
              "password_min_symbol": {
                "type": "number",
                "description": "If a password must contain at least one symbol (!@#$%^&*): 0 = no, 1 = yes. Default = 1",
                "description_kind": "plain",
                "optional": true
              },
              "password_min_uppercase": {
                "type": "number",
                "description": "If a password must contain at least one upper case letter: 0 = no, 1 = yes. Default = 1",
                "description_kind": "plain",
                "optional": true
              },
              "password_show_lockout_failures": {
                "type": "bool",
                "description": "If a user should be informed when their account is locked.",
                "description_kind": "plain",
                "optional": true
              },
              "priority": {
                "type": "number",
                "description": "Policy Priority, this attribute can be set to a valid priority. To avoid endless diff situation we error if an invalid priority is provided. API defaults it to the last (lowest) if not there.",
                "description_kind": "plain",
                "optional": true
              },
              "question_min_length": {
                "type": "number",
                "description": "Min length of the password recovery question answer.",
                "description_kind": "plain",
                "optional": true
              },
              "question_recovery": {
                "type": "string",
                "description": "Enable or disable security question password recovery: ACTIVE or INACTIVE.",
                "description_kind": "plain",
                "optional": true
              },
              "recovery_email_token": {
                "type": "number",
                "description": "Lifetime in minutes of the recovery email token.",
                "description_kind": "plain",
                "optional": true
              },
              "skip_unlock": {
                "type": "bool",
                "description": "When an Active Directory user is locked out of Okta, the Okta unlock operation should also attempt to unlock the user's Windows account.",
                "description_kind": "plain",
                "optional": true
              },
              "sms_recovery": {
                "type": "string",
                "description": "Enable or disable SMS password recovery: ACTIVE or INACTIVE.",
                "description_kind": "plain",
                "optional": true
              },
              "status": {
                "type": "string",
                "description": "Policy Status: ACTIVE or INACTIVE.",
                "description_kind": "plain",
                "optional": true
              }
            },
            "description_kind": "plain"
          }
        },
        "okta_policy_password_default": {
          "version": 0,
          "block": {
            "attributes": {
              "call_recovery": {
                "type": "string",
                "description": "Enable or disable voice call recovery: ACTIVE or INACTIVE.",
                "description_kind": "plain",
                "optional": true
              },
              "default_auth_provider": {
                "type": "string",
                "description": "Default Authentication Provider",
                "description_kind": "plain",
                "computed": true
              },
              "default_included_group_id": {
                "type": "string",
                "description": "Default group ID (always included)",
                "description_kind": "plain",
                "computed": true
              },
              "description": {
                "type": "string",
                "description": "Default policy description",
                "description_kind": "plain",
                "computed": true
              },
              "email_recovery": {
                "type": "string",
                "description": "Enable or disable email password recovery: ACTIVE or INACTIVE.",
                "description_kind": "plain",
                "optional": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "description": "Default policy name",
                "description_kind": "plain",
                "computed": true
              },
              "password_auto_unlock_minutes": {
                "type": "number",
                "description": "Number of minutes before a locked account is unlocked: 0 = no limit.",
                "description_kind": "plain",
                "optional": true
              },
              "password_dictionary_lookup": {
                "type": "bool",
                "description": "Check Passwords Against Common Password Dictionary.",
                "description_kind": "plain",
                "optional": true
              },
              "password_exclude_first_name": {
                "type": "bool",
                "description": "User firstName attribute must be excluded from the password",
                "description_kind": "plain",
                "optional": true
              },
              "password_exclude_last_name": {
                "type": "bool",
                "description": "User lastName attribute must be excluded from the password",
                "description_kind": "plain",
                "optional": true
              },
              "password_exclude_username": {
                "type": "bool",
                "description": "If the user name must be excluded from the password.",
                "description_kind": "plain",
                "optional": true
              },
              "password_expire_warn_days": {
                "type": "number",
                "description": "Length in days a user will be warned before password expiry: 0 = no warning.",
                "description_kind": "plain",
                "optional": true
              },
              "password_history_count": {
                "type": "number",
                "description": "Number of distinct passwords that must be created before they can be reused: 0 = none.",
                "description_kind": "plain",
                "optional": true
              },
              "password_lockout_notification_channels": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "Notification channels to use to notify a user when their account has been locked.",
                "description_kind": "plain",
                "optional": true
              },
              "password_max_age_days": {
                "type": "number",
                "description": "Length in days a password is valid before expiry: 0 = no limit.",
                "description_kind": "plain",
                "optional": true
              },
              "password_max_lockout_attempts": {
                "type": "number",
                "description": "Number of unsuccessful login attempts allowed before lockout: 0 = no limit.",
                "description_kind": "plain",
                "optional": true
              },
              "password_min_age_minutes": {
                "type": "number",
                "description": "Minimum time interval in minutes between password changes: 0 = no limit.",
                "description_kind": "plain",
                "optional": true
              },
              "password_min_length": {
                "type": "number",
                "description": "Minimum password length.",
                "description_kind": "plain",
                "optional": true
              },
              "password_min_lowercase": {
                "type": "number",
                "description": "If a password must contain at least one lower case letter: 0 = no, 1 = yes. Default = 1",
                "description_kind": "plain",
                "optional": true
              },
              "password_min_number": {
                "type": "number",
                "description": "If a password must contain at least one number: 0 = no, 1 = yes. Default = 1",
                "description_kind": "plain",
                "optional": true
              },
              "password_min_symbol": {
                "type": "number",
                "description": "If a password must contain at least one symbol (!@#$%^&*): 0 = no, 1 = yes. Default = 1",
                "description_kind": "plain",
                "optional": true
              },
              "password_min_uppercase": {
                "type": "number",
                "description": "If a password must contain at least one upper case letter: 0 = no, 1 = yes. Default = 1",
                "description_kind": "plain",
                "optional": true
              },
              "password_show_lockout_failures": {
                "type": "bool",
                "description": "If a user should be informed when their account is locked.",
                "description_kind": "plain",
                "optional": true
              },
              "priority": {
                "type": "number",
                "description": "Default policy priority",
                "description_kind": "plain",
                "computed": true
              },
              "question_min_length": {
                "type": "number",
                "description": "Min length of the password recovery question answer.",
                "description_kind": "plain",
                "optional": true
              },
              "question_recovery": {
                "type": "string",
                "description": "Enable or disable security question password recovery: ACTIVE or INACTIVE.",
                "description_kind": "plain",
                "optional": true
              },
              "recovery_email_token": {
                "type": "number",
                "description": "Lifetime in minutes of the recovery email token.",
                "description_kind": "plain",
                "optional": true
              },
              "skip_unlock": {
                "type": "bool",
                "description": "When an Active Directory user is locked out of Okta, the Okta unlock operation should also attempt to unlock the user's Windows account.",
                "description_kind": "plain",
                "optional": true
              },
              "sms_recovery": {
                "type": "string",
                "description": "Enable or disable SMS password recovery: ACTIVE or INACTIVE.",
                "description_kind": "plain",
                "optional": true
              },
              "status": {
                "type": "string",
                "description": "Default policy status",
                "description_kind": "plain",
                "computed": true
              }
            },
            "description_kind": "plain"
          }
        },
        "okta_policy_profile_enrollment": {
          "version": 0,
          "block": {
            "attributes": {
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "description": "Name of the policy",
                "description_kind": "plain",
                "required": true
              },
              "status": {
                "type": "string",
                "description": "Status of the policy",
                "description_kind": "plain",
                "optional": true
              }
            },
            "description_kind": "plain"
          }
        },
        "okta_policy_profile_enrollment_apps": {
          "version": 0,
          "block": {
            "attributes": {
              "apps": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "List of app IDs to be added to this policy",
                "description_kind": "plain",
                "optional": true
              },
              "default_policy_id": {
                "type": "string",
                "description": "ID of the Default Enrollment Policy. This policy is used as a policy to re-assign apps to when they are unassigned from this one",
                "description_kind": "plain",
                "computed": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "policy_id": {
                "type": "string",
                "description": "ID of the enrollment policy.",
                "description_kind": "plain",
                "required": true
              }
            },
            "description_kind": "plain"
          }
        },
        "okta_policy_rule_idp_discovery": {
          "version": 0,
          "block": {
            "attributes": {
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "idp_id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true
              },
              "idp_type": {
                "type": "string",
                "description_kind": "plain",
                "optional": true
              },
              "name": {
                "type": "string",
                "description": "Policy Rule Name",
                "description_kind": "plain",
                "required": true
              },
              "network_connection": {
                "type": "string",
                "description": "Network selection mode: ANYWHERE, ZONE, ON_NETWORK, or OFF_NETWORK.",
                "description_kind": "plain",
                "optional": true
              },
              "network_excludes": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "The zones to exclude",
                "description_kind": "plain",
                "optional": true
              },
              "network_includes": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "The zones to include",
                "description_kind": "plain",
                "optional": true
              },
              "policy_id": {
                "type": "string",
                "description": "Policy ID of the Rule",
                "description_kind": "plain",
                "optional": true
              },
              "priority": {
                "type": "number",
                "description": "Policy Rule Priority, this attribute can be set to a valid priority. To avoid endless diff situation we error if an invalid priority is provided. API defaults it to the last (lowest) if not there.",
                "description_kind": "plain",
                "optional": true
              },
              "status": {
                "type": "string",
                "description": "Policy Rule Status: ACTIVE or INACTIVE.",
                "description_kind": "plain",
                "optional": true
              },
              "user_identifier_attribute": {
                "type": "string",
                "description_kind": "plain",
                "optional": true
              },
              "user_identifier_type": {
                "type": "string",
                "description_kind": "plain",
                "optional": true
              }
            },
            "block_types": {
              "app_exclude": {
                "nesting_mode": "set",
                "block": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "name": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "type": {
                      "type": "string",
                      "description_kind": "plain",
                      "required": true
                    }
                  },
                  "description": "Applications to exclude in discovery rule",
                  "description_kind": "plain"
                }
              },
              "app_include": {
                "nesting_mode": "set",
                "block": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "name": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "type": {
                      "type": "string",
                      "description_kind": "plain",
                      "required": true
                    }
                  },
                  "description": "Applications to include in discovery rule",
                  "description_kind": "plain"
                }
              },
              "platform_include": {
                "nesting_mode": "set",
                "block": {
                  "attributes": {
                    "os_expression": {
                      "type": "string",
                      "description": "Only available with OTHER OS type",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "os_type": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "type": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true
                    }
                  },
                  "description_kind": "plain"
                }
              },
              "user_identifier_patterns": {
                "nesting_mode": "set",
                "block": {
                  "attributes": {
                    "match_type": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "value": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true
                    }
                  },
                  "description_kind": "plain"
                }
              }
            },
            "description_kind": "plain"
          }
        },
        "okta_policy_rule_mfa": {
          "version": 0,
          "block": {
            "attributes": {
              "enroll": {
                "type": "string",
                "description": "Should the user be enrolled the first time they LOGIN, the next time they are CHALLENGED, or NEVER?",
                "description_kind": "plain",
                "optional": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "description": "Policy Rule Name",
                "description_kind": "plain",
                "required": true
              },
              "network_connection": {
                "type": "string",
                "description": "Network selection mode: ANYWHERE, ZONE, ON_NETWORK, or OFF_NETWORK.",
                "description_kind": "plain",
                "optional": true
              },
              "network_excludes": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "The zones to exclude",
                "description_kind": "plain",
                "optional": true
              },
              "network_includes": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "The zones to include",
                "description_kind": "plain",
                "optional": true
              },
              "policy_id": {
                "type": "string",
                "description": "Policy ID of the Rule",
                "description_kind": "plain",
                "optional": true
              },
              "priority": {
                "type": "number",
                "description": "Policy Rule Priority, this attribute can be set to a valid priority. To avoid endless diff situation we error if an invalid priority is provided. API defaults it to the last (lowest) if not there.",
                "description_kind": "plain",
                "optional": true
              },
              "status": {
                "type": "string",
                "description": "Policy Rule Status: ACTIVE or INACTIVE.",
                "description_kind": "plain",
                "optional": true
              },
              "users_excluded": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "Set of User IDs to Exclude",
                "description_kind": "plain",
                "optional": true
              }
            },
            "block_types": {
              "app_exclude": {
                "nesting_mode": "set",
                "block": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "name": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "type": {
                      "type": "string",
                      "description_kind": "plain",
                      "required": true
                    }
                  },
                  "description": "Applications to exclude",
                  "description_kind": "plain"
                }
              },
              "app_include": {
                "nesting_mode": "set",
                "block": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "name": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "type": {
                      "type": "string",
                      "description_kind": "plain",
                      "required": true
                    }
                  },
                  "description": "Applications to include",
                  "description_kind": "plain"
                }
              }
            },
            "description_kind": "plain"
          }
        },
        "okta_policy_rule_password": {
          "version": 0,
          "block": {
            "attributes": {
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "description": "Policy Rule Name",
                "description_kind": "plain",
                "required": true
              },
              "network_connection": {
                "type": "string",
                "description": "Network selection mode: ANYWHERE, ZONE, ON_NETWORK, or OFF_NETWORK.",
                "description_kind": "plain",
                "optional": true
              },
              "network_excludes": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "The zones to exclude",
                "description_kind": "plain",
                "optional": true
              },
              "network_includes": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "The zones to include",
                "description_kind": "plain",
                "optional": true
              },
              "password_change": {
                "type": "string",
                "description": "Allow or deny a user to change their password: ALLOW or DENY. Default = ALLOW",
                "description_kind": "plain",
                "optional": true
              },
              "password_reset": {
                "type": "string",
                "description": "Allow or deny a user to reset their password: ALLOW or DENY. Default = ALLOW",
                "description_kind": "plain",
                "optional": true
              },
              "password_unlock": {
                "type": "string",
                "description": "Allow or deny a user to unlock. Default = DENY",
                "description_kind": "plain",
                "optional": true
              },
              "policy_id": {
                "type": "string",
                "description": "Policy ID of the Rule",
                "description_kind": "plain",
                "optional": true
              },
              "priority": {
                "type": "number",
                "description": "Policy Rule Priority, this attribute can be set to a valid priority. To avoid endless diff situation we error if an invalid priority is provided. API defaults it to the last (lowest) if not there.",
                "description_kind": "plain",
                "optional": true
              },
              "status": {
                "type": "string",
                "description": "Policy Rule Status: ACTIVE or INACTIVE.",
                "description_kind": "plain",
                "optional": true
              },
              "users_excluded": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "Set of User IDs to Exclude",
                "description_kind": "plain",
                "optional": true
              }
            },
            "description_kind": "plain"
          }
        },
        "okta_policy_rule_profile_enrollment": {
          "version": 0,
          "block": {
            "attributes": {
              "access": {
                "type": "string",
                "description": "Allow or deny access based on the rule conditions: ALLOW or DENY",
                "description_kind": "plain",
                "optional": true
              },
              "email_verification": {
                "type": "bool",
                "description": "Indicates whether email verification should occur before access is granted",
                "description_kind": "plain",
                "optional": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "inline_hook_id": {
                "type": "string",
                "description": "ID of a Registration Inline Hook",
                "description_kind": "plain",
                "optional": true
              },
              "name": {
                "type": "string",
                "description": "Name of the rule",
                "description_kind": "plain",
                "computed": true
              },
              "policy_id": {
                "type": "string",
                "description": "ID of the policy",
                "description_kind": "plain",
                "required": true
              },
              "progressive_profiling_action": {
                "type": "string",
                "description": "Enabled or disabled progressive profiling action rule conditions: ENABLED or DISABLED",
                "description_kind": "plain",
                "optional": true
              },
              "status": {
                "type": "string",
                "description": "Status of the rule",
                "description_kind": "plain",
                "computed": true
              },
              "target_group_id": {
                "type": "string",
                "description": "The ID of a Group that this User should be added to",
                "description_kind": "plain",
                "optional": true
              },
              "ui_schema_id": {
                "type": "string",
                "description": "Value created by the backend. If present all policy updates must include this attribute/value.",
                "description_kind": "plain",
                "optional": true
              },
              "unknown_user_action": {
                "type": "string",
                "description": "Which action should be taken if this User is new",
                "description_kind": "plain",
                "required": true
              }
            },
            "block_types": {
              "profile_attributes": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "label": {
                      "type": "string",
                      "description": "A display-friendly label for this property",
                      "description_kind": "plain",
                      "required": true
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of a User Profile property",
                      "description_kind": "plain",
                      "required": true
                    },
                    "required": {
                      "type": "bool",
                      "description": "Indicates if this property is required for enrollment",
                      "description_kind": "plain",
                      "optional": true
                    }
                  },
                  "description": "A list of attributes to prompt the user during registration or progressive profiling",
                  "description_kind": "plain"
                }
              }
            },
            "description_kind": "plain"
          }
        },
        "okta_policy_rule_signon": {
          "version": 0,
          "block": {
            "attributes": {
              "access": {
                "type": "string",
                "description": "Allow or deny access based on the rule conditions: ALLOW, DENY or CHALLENGE.",
                "description_kind": "plain",
                "optional": true
              },
              "authtype": {
                "type": "string",
                "description": "Authentication entrypoint: ANY, RADIUS or LDAP_INTERFACE",
                "description_kind": "plain",
                "optional": true
              },
              "behaviors": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "List of behavior IDs",
                "description_kind": "plain",
                "optional": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "identity_provider": {
                "type": "string",
                "description": "Apply rule based on the IdP used: ANY, OKTA or SPECIFIC_IDP.",
                "description_kind": "plain",
                "optional": true
              },
              "identity_provider_ids": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "When identity_provider is SPECIFIC_IDP then this is the list of IdP IDs to apply the rule on",
                "description_kind": "plain",
                "optional": true
              },
              "mfa_lifetime": {
                "type": "number",
                "description": "Elapsed time before the next MFA challenge",
                "description_kind": "plain",
                "optional": true
              },
              "mfa_prompt": {
                "type": "string",
                "description": "Prompt for MFA based on the device used, a factor session lifetime, or every sign-on attempt: DEVICE, SESSION or ALWAYS",
                "description_kind": "plain",
                "optional": true
              },
              "mfa_remember_device": {
                "type": "bool",
                "description": "Remember MFA device.",
                "description_kind": "plain",
                "optional": true
              },
              "mfa_required": {
                "type": "bool",
                "description": "Require MFA.",
                "description_kind": "plain",
                "optional": true
              },
              "name": {
                "type": "string",
                "description": "Policy Rule Name",
                "description_kind": "plain",
                "required": true
              },
              "network_connection": {
                "type": "string",
                "description": "Network selection mode: ANYWHERE, ZONE, ON_NETWORK, or OFF_NETWORK.",
                "description_kind": "plain",
                "optional": true
              },
              "network_excludes": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "The zones to exclude",
                "description_kind": "plain",
                "optional": true
              },
              "network_includes": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "The zones to include",
                "description_kind": "plain",
                "optional": true
              },
              "policy_id": {
                "type": "string",
                "description": "Policy ID of the Rule",
                "description_kind": "plain",
                "optional": true
              },
              "primary_factor": {
                "type": "string",
                "description": "Primary factor.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "priority": {
                "type": "number",
                "description": "Policy Rule Priority, this attribute can be set to a valid priority. To avoid endless diff situation we error if an invalid priority is provided. API defaults it to the last (lowest) if not there.",
                "description_kind": "plain",
                "optional": true
              },
              "risc_level": {
                "type": "string",
                "description": "Risc level: ANY, LOW, MEDIUM or HIGH",
                "description_kind": "plain",
                "optional": true
              },
              "session_idle": {
                "type": "number",
                "description": "Max minutes a session can be idle.",
                "description_kind": "plain",
                "optional": true
              },
              "session_lifetime": {
                "type": "number",
                "description": "Max minutes a session is active: Disable = 0.",
                "description_kind": "plain",
                "optional": true
              },
              "session_persistent": {
                "type": "bool",
                "description": "Whether session cookies will last across browser sessions. Okta Administrators can never have persistent session cookies.",
                "description_kind": "plain",
                "optional": true
              },
              "status": {
                "type": "string",
                "description": "Policy Rule Status: ACTIVE or INACTIVE.",
                "description_kind": "plain",
                "optional": true
              },
              "users_excluded": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "Set of User IDs to Exclude",
                "description_kind": "plain",
                "optional": true
              }
            },
            "block_types": {
              "factor_sequence": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "primary_criteria_factor_type": {
                      "type": "string",
                      "description": "Type of a Factor",
                      "description_kind": "plain",
                      "required": true
                    },
                    "primary_criteria_provider": {
                      "type": "string",
                      "description": "Factor provider",
                      "description_kind": "plain",
                      "required": true
                    }
                  },
                  "block_types": {
                    "secondary_criteria": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "factor_type": {
                            "type": "string",
                            "description": "Type of a Factor",
                            "description_kind": "plain",
                            "required": true
                          },
                          "provider": {
                            "type": "string",
                            "description": "Factor provider",
                            "description_kind": "plain",
                            "required": true
                          }
                        },
                        "description_kind": "plain"
                      }
                    }
                  },
                  "description_kind": "plain"
                }
              }
            },
            "description_kind": "plain"
          }
        },
        "okta_policy_signon": {
          "version": 0,
          "block": {
            "attributes": {
              "description": {
                "type": "string",
                "description": "Policy Description",
                "description_kind": "plain",
                "optional": true
              },
              "groups_included": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "List of Group IDs to Include",
                "description_kind": "plain",
                "optional": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "description": "Policy Name",
                "description_kind": "plain",
                "required": true
              },
              "priority": {
                "type": "number",
                "description": "Policy Priority, this attribute can be set to a valid priority. To avoid endless diff situation we error if an invalid priority is provided. API defaults it to the last (lowest) if not there.",
                "description_kind": "plain",
                "optional": true
              },
              "status": {
                "type": "string",
                "description": "Policy Status: ACTIVE or INACTIVE.",
                "description_kind": "plain",
                "optional": true
              }
            },
            "description_kind": "plain"
          }
        },
        "okta_profile_mapping": {
          "version": 0,
          "block": {
            "attributes": {
              "always_apply": {
                "type": "bool",
                "description": "Whether apply the changes to all users with this profile after updating or creating the these mappings.",
                "description_kind": "plain",
                "optional": true
              },
              "delete_when_absent": {
                "type": "bool",
                "description": "When turned on this flag will trigger the provider to delete mapping properties that are not defined in config. By default, we do not delete missing properties.",
                "description_kind": "plain",
                "optional": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "source_id": {
                "type": "string",
                "description": "The source id of the mapping to manage.",
                "description_kind": "plain",
                "required": true
              },
              "source_name": {
                "type": "string",
                "description_kind": "plain",
                "computed": true
              },
              "source_type": {
                "type": "string",
                "description_kind": "plain",
                "computed": true
              },
              "target_id": {
                "type": "string",
                "description": "The target id of the mapping to manage.",
                "description_kind": "plain",
                "required": true
              },
              "target_name": {
                "type": "string",
                "description_kind": "plain",
                "computed": true
              },
              "target_type": {
                "type": "string",
                "description_kind": "plain",
                "computed": true
              }
            },
            "block_types": {
              "mappings": {
                "nesting_mode": "set",
                "block": {
                  "attributes": {
                    "expression": {
                      "type": "string",
                      "description_kind": "plain",
                      "required": true
                    },
                    "id": {
                      "type": "string",
                      "description": "The mapping property key.",
                      "description_kind": "plain",
                      "required": true
                    },
                    "push_status": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true
                    }
                  },
                  "description_kind": "plain"
                }
              }
            },
            "description_kind": "plain"
          }
        },
        "okta_rate_limiting": {
          "version": 0,
          "block": {
            "attributes": {
              "authorize": {
                "type": "string",
                "description": "Called during authentication.",
                "description_kind": "plain",
                "required": true
              },
              "communications_enabled": {
                "type": "bool",
                "description": "Enables rate limit warning, violation, notification emails and banners when this org meets rate limits.",
                "description_kind": "plain",
                "optional": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "login": {
                "type": "string",
                "description": "Called when accessing the Okta hosted login page.",
                "description_kind": "plain",
                "required": true
              }
            },
            "description_kind": "plain"
          }
        },
        "okta_resource_set": {
          "version": 0,
          "block": {
            "attributes": {
              "description": {
                "type": "string",
                "description": "A description of the Resource Set",
                "description_kind": "plain",
                "required": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "label": {
                "type": "string",
                "description": "Unique name given to the Resource Set",
                "description_kind": "plain",
                "required": true
              },
              "resources": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "The endpoints that reference the resources to be included in the new Resource Set",
                "description_kind": "plain",
                "optional": true
              }
            },
            "description": "Resource to manage administrative Role assignments for a User",
            "description_kind": "plain"
          }
        },
        "okta_role_subscription": {
          "version": 0,
          "block": {
            "attributes": {
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "notification_type": {
                "type": "string",
                "description": "Type of the notification",
                "description_kind": "plain",
                "required": true
              },
              "role_type": {
                "type": "string",
                "description": "Type of the role",
                "description_kind": "plain",
                "required": true
              },
              "status": {
                "type": "string",
                "description": "Status of subscription",
                "description_kind": "plain",
                "optional": true
              }
            },
            "description_kind": "plain"
          }
        },
        "okta_security_notification_emails": {
          "version": 0,
          "block": {
            "attributes": {
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "report_suspicious_activity_enabled": {
                "type": "bool",
                "description": "Notifies end users about suspicious or unrecognized activity from their account",
                "description_kind": "plain",
                "optional": true
              },
              "send_email_for_factor_enrollment_enabled": {
                "type": "bool",
                "description": "Notifies end users of any activity on their account related to MFA factor enrollment",
                "description_kind": "plain",
                "optional": true
              },
              "send_email_for_factor_reset_enabled": {
                "type": "bool",
                "description": "Notifies end users that one or more factors have been reset for their account",
                "description_kind": "plain",
                "optional": true
              },
              "send_email_for_new_device_enabled": {
                "type": "bool",
                "description": "Notifies end users about new sign-on activity",
                "description_kind": "plain",
                "optional": true
              },
              "send_email_for_password_changed_enabled": {
                "type": "bool",
                "description": "Notifies end users that the password for their account has changed",
                "description_kind": "plain",
                "optional": true
              }
            },
            "description_kind": "plain"
          }
        },
        "okta_template_sms": {
          "version": 0,
          "block": {
            "attributes": {
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "template": {
                "type": "string",
                "description": "SMS default template",
                "description_kind": "plain",
                "required": true
              },
              "type": {
                "type": "string",
                "description": "SMS template type",
                "description_kind": "plain",
                "required": true
              }
            },
            "block_types": {
              "translations": {
                "nesting_mode": "set",
                "block": {
                  "attributes": {
                    "language": {
                      "type": "string",
                      "description_kind": "plain",
                      "required": true
                    },
                    "template": {
                      "type": "string",
                      "description_kind": "plain",
                      "required": true
                    }
                  },
                  "description_kind": "plain"
                }
              }
            },
            "description_kind": "plain"
          }
        },
        "okta_theme": {
          "version": 0,
          "block": {
            "attributes": {
              "background_image": {
                "type": "string",
                "description": "Path to local file",
                "description_kind": "plain",
                "optional": true
              },
              "background_image_url": {
                "type": "string",
                "description": "Background image URL",
                "description_kind": "plain",
                "computed": true
              },
              "brand_id": {
                "type": "string",
                "description": "Brand ID",
                "description_kind": "plain",
                "required": true
              },
              "email_template_touch_point_variant": {
                "type": "string",
                "description": "Variant for email templates (`OKTA_DEFAULT`, `FULL_THEME`)",
                "description_kind": "plain",
                "optional": true
              },
              "end_user_dashboard_touch_point_variant": {
                "type": "string",
                "description": "Variant for the Okta End-User Dashboard (`OKTA_DEFAULT`, `WHITE_LOGO_BACKGROUND`, `FULL_THEME`, `LOGO_ON_FULL_WHITE_BACKGROUND`)",
                "description_kind": "plain",
                "optional": true
              },
              "error_page_touch_point_variant": {
                "type": "string",
                "description": "Variant for the error page (`OKTA_DEFAULT`, `BACKGROUND_SECONDARY_COLOR`, `BACKGROUND_IMAGE`)",
                "description_kind": "plain",
                "optional": true
              },
              "favicon": {
                "type": "string",
                "description": "Path to local file",
                "description_kind": "plain",
                "optional": true
              },
              "favicon_url": {
                "type": "string",
                "description": "Favicon URL",
                "description_kind": "plain",
                "computed": true
              },
              "id": {
                "type": "string",
                "description": "Brand ID",
                "description_kind": "plain",
                "computed": true
              },
              "links": {
                "type": "string",
                "description": "Link relations for this object - JSON HAL - Discoverable resources related to the email template",
                "description_kind": "plain",
                "computed": true
              },
              "logo": {
                "type": "string",
                "description": "Path to local file",
                "description_kind": "plain",
                "optional": true
              },
              "logo_url": {
                "type": "string",
                "description": "Logo URL",
                "description_kind": "plain",
                "computed": true
              },
              "primary_color_contrast_hex": {
                "type": "string",
                "description": "Primary color contrast hex code",
                "description_kind": "plain",
                "optional": true
              },
              "primary_color_hex": {
                "type": "string",
                "description": "Primary color hex code",
                "description_kind": "plain",
                "optional": true
              },
              "secondary_color_contrast_hex": {
                "type": "string",
                "description": "Secondary color contrast hex code",
                "description_kind": "plain",
                "optional": true
              },
              "secondary_color_hex": {
                "type": "string",
                "description": "Secondary color hex code",
                "description_kind": "plain",
                "optional": true
              },
              "sign_in_page_touch_point_variant": {
                "type": "string",
                "description": "Variant for the Okta Sign-In Page (`OKTA_DEFAULT`, `BACKGROUND_SECONDARY_COLOR`, `BACKGROUND_IMAGE`)",
                "description_kind": "plain",
                "optional": true
              },
              "theme_id": {
                "type": "string",
                "description": "Theme ID - Note: Okta API for theme only reads and updates therefore the okta_theme resource needs to act as a quasi data source. Do this by setting theme_id.",
                "description_kind": "plain",
                "optional": true
              }
            },
            "description_kind": "plain"
          }
        },
        "okta_threat_insight_settings": {
          "version": 0,
          "block": {
            "attributes": {
              "action": {
                "type": "string",
                "description": "Specifies how Okta responds to authentication requests from suspicious IPs",
                "description_kind": "plain",
                "required": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "network_excludes": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "List of Network Zone IDs to exclude to be not logged or blocked by Okta ThreatInsight and proceed to Sign On rules evaluation",
                "description_kind": "plain",
                "optional": true
              }
            },
            "description_kind": "plain"
          }
        },
        "okta_trusted_origin": {
          "version": 0,
          "block": {
            "attributes": {
              "active": {
                "type": "bool",
                "description": "Whether the Trusted Origin is active or not - can only be issued post-creation",
                "description_kind": "plain",
                "optional": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "description": "Unique name for this trusted origin",
                "description_kind": "plain",
                "required": true
              },
              "origin": {
                "type": "string",
                "description": "Unique origin URL for this trusted origin",
                "description_kind": "plain",
                "required": true
              },
              "scopes": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "Scopes of the Trusted Origin - can either be CORS or REDIRECT only",
                "description_kind": "plain",
                "required": true
              }
            },
            "description_kind": "plain"
          }
        },
        "okta_user": {
          "version": 0,
          "block": {
            "attributes": {
              "city": {
                "type": "string",
                "description": "User city",
                "description_kind": "plain",
                "optional": true
              },
              "cost_center": {
                "type": "string",
                "description": "User cost center",
                "description_kind": "plain",
                "optional": true
              },
              "country_code": {
                "type": "string",
                "description": "User country code",
                "description_kind": "plain",
                "optional": true
              },
              "custom_profile_attributes": {
                "type": "string",
                "description": "JSON formatted custom attributes for a user. It must be JSON due to various types Okta allows.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "custom_profile_attributes_to_ignore": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "List of custom_profile_attribute keys that should be excluded from being managed by Terraform.",
                "description_kind": "plain",
                "optional": true
              },
              "department": {
                "type": "string",
                "description": "User department",
                "description_kind": "plain",
                "optional": true
              },
              "display_name": {
                "type": "string",
                "description": "User display name, suitable to show end users",
                "description_kind": "plain",
                "optional": true
              },
              "division": {
                "type": "string",
                "description": "User division",
                "description_kind": "plain",
                "optional": true
              },
              "email": {
                "type": "string",
                "description": "User primary email address",
                "description_kind": "plain",
                "required": true
              },
              "employee_number": {
                "type": "string",
                "description": "User employee number",
                "description_kind": "plain",
                "optional": true
              },
              "expire_password_on_create": {
                "type": "bool",
                "description": "If set to `true`, the user will have to change the password at the next login. This property will be used when user is being created and works only when `password` field is set",
                "description_kind": "plain",
                "optional": true
              },
              "first_name": {
                "type": "string",
                "description": "User first name",
                "description_kind": "plain",
                "required": true
              },
              "honorific_prefix": {
                "type": "string",
                "description": "User honorific prefix",
                "description_kind": "plain",
                "optional": true
              },
              "honorific_suffix": {
                "type": "string",
                "description": "User honorific suffix",
                "description_kind": "plain",
                "optional": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "last_name": {
                "type": "string",
                "description": "User last name",
                "description_kind": "plain",
                "required": true
              },
              "locale": {
                "type": "string",
                "description": "User default location",
                "description_kind": "plain",
                "optional": true
              },
              "login": {
                "type": "string",
                "description": "User Okta login",
                "description_kind": "plain",
                "required": true
              },
              "manager": {
                "type": "string",
                "description": "Manager of User",
                "description_kind": "plain",
                "optional": true
              },
              "manager_id": {
                "type": "string",
                "description": "Manager ID of User",
                "description_kind": "plain",
                "optional": true
              },
              "middle_name": {
                "type": "string",
                "description": "User middle name",
                "description_kind": "plain",
                "optional": true
              },
              "mobile_phone": {
                "type": "string",
                "description": "User mobile phone number",
                "description_kind": "plain",
                "optional": true
              },
              "nick_name": {
                "type": "string",
                "description": "User nickname",
                "description_kind": "plain",
                "optional": true
              },
              "old_password": {
                "type": "string",
                "description": "Old User Password. Should be only set in case the password was not changed using the provider",
                "description_kind": "plain",
                "optional": true,
                "sensitive": true
              },
              "organization": {
                "type": "string",
                "description": "User organization",
                "description_kind": "plain",
                "optional": true
              },
              "password": {
                "type": "string",
                "description": "User Password",
                "description_kind": "plain",
                "optional": true,
                "sensitive": true
              },
              "password_inline_hook": {
                "type": "string",
                "description": "When specified, the Password Inline Hook is triggered to handle verification of the end user's password the first time the user tries to sign in",
                "description_kind": "plain",
                "optional": true
              },
              "postal_address": {
                "type": "string",
                "description": "User mailing address",
                "description_kind": "plain",
                "optional": true
              },
              "preferred_language": {
                "type": "string",
                "description": "User preferred language",
                "description_kind": "plain",
                "optional": true
              },
              "primary_phone": {
                "type": "string",
                "description": "User primary phone number",
                "description_kind": "plain",
                "optional": true
              },
              "profile_url": {
                "type": "string",
                "description": "User online profile (web page)",
                "description_kind": "plain",
                "optional": true
              },
              "raw_status": {
                "type": "string",
                "description": "The raw status of the User in Okta - (status is mapped)",
                "description_kind": "plain",
                "computed": true
              },
              "recovery_answer": {
                "type": "string",
                "description": "User Password Recovery Answer",
                "description_kind": "plain",
                "optional": true,
                "sensitive": true
              },
              "recovery_question": {
                "type": "string",
                "description": "User Password Recovery Question",
                "description_kind": "plain",
                "optional": true
              },
              "second_email": {
                "type": "string",
                "description": "User secondary email address, used for account recovery",
                "description_kind": "plain",
                "optional": true
              },
              "skip_roles": {
                "type": "bool",
                "description": "Do not populate user roles information (prevents additional API call)",
                "description_kind": "plain",
                "deprecated": true,
                "optional": true
              },
              "state": {
                "type": "string",
                "description": "User state or region",
                "description_kind": "plain",
                "optional": true
              },
              "status": {
                "type": "string",
                "description": "The status of the User in Okta - remove to set user back to active/provisioned",
                "description_kind": "plain",
                "optional": true
              },
              "street_address": {
                "type": "string",
                "description": "User street address",
                "description_kind": "plain",
                "optional": true
              },
              "timezone": {
                "type": "string",
                "description": "User default timezone",
                "description_kind": "plain",
                "optional": true
              },
              "title": {
                "type": "string",
                "description": "User title",
                "description_kind": "plain",
                "optional": true
              },
              "user_type": {
                "type": "string",
                "description": "User employee type",
                "description_kind": "plain",
                "optional": true
              },
              "zip_code": {
                "type": "string",
                "description": "User zipcode or postal code",
                "description_kind": "plain",
                "optional": true
              }
            },
            "block_types": {
              "password_hash": {
                "nesting_mode": "set",
                "block": {
                  "attributes": {
                    "algorithm": {
                      "type": "string",
                      "description": "The algorithm used to generate the hash using the password",
                      "description_kind": "plain",
                      "required": true
                    },
                    "salt": {
                      "type": "string",
                      "description": "Only required for salted hashes",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "salt_order": {
                      "type": "string",
                      "description": "Specifies whether salt was pre- or postfixed to the password before hashing",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "value": {
                      "type": "string",
                      "description": "For SHA-512, SHA-256, SHA-1, MD5, This is the actual base64-encoded hash of the password (and salt, if used). This is the Base64 encoded value of the SHA-512/SHA-256/SHA-1/MD5 digest that was computed by either pre-fixing or post-fixing the salt to the password, depending on the saltOrder. If a salt was not used in the source system, then this should just be the the Base64 encoded value of the password's SHA-512/SHA-256/SHA-1/MD5 digest. For BCRYPT, This is the actual radix64-encoded hashed password.",
                      "description_kind": "plain",
                      "required": true
                    },
                    "work_factor": {
                      "type": "number",
                      "description": "Governs the strength of the hash and the time required to compute it. Only required for BCRYPT algorithm",
                      "description_kind": "plain",
                      "optional": true
                    }
                  },
                  "description": "Specifies a hashed password to import into Okta.",
                  "description_kind": "plain"
                },
                "max_items": 1
              }
            },
            "description_kind": "plain"
          }
        },
        "okta_user_admin_roles": {
          "version": 0,
          "block": {
            "attributes": {
              "admin_roles": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "User Okta admin roles - ie. ['APP_ADMIN', 'USER_ADMIN']",
                "description_kind": "plain",
                "required": true
              },
              "disable_notifications": {
                "type": "bool",
                "description": "When this setting is enabled, the admins won't receive any of the default Okta administrator emails",
                "description_kind": "plain",
                "optional": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "user_id": {
                "type": "string",
                "description": "ID of a Okta User",
                "description_kind": "plain",
                "required": true
              }
            },
            "description": "Resource to manage a set of administrator roles for a specific user.",
            "description_kind": "plain"
          }
        },
        "okta_user_base_schema_property": {
          "version": 1,
          "block": {
            "attributes": {
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "index": {
                "type": "string",
                "description": "Subschema unique string identifier",
                "description_kind": "plain",
                "required": true
              },
              "master": {
                "type": "string",
                "description": "SubSchema profile manager, if not set it will inherit its setting.",
                "description_kind": "plain",
                "optional": true
              },
              "pattern": {
                "type": "string",
                "description": "The validation pattern to use for the subschema. Must be in form of '.+', or '[<pattern>]+' if present.'",
                "description_kind": "plain",
                "optional": true
              },
              "permissions": {
                "type": "string",
                "description": "SubSchema permissions: HIDE, READ_ONLY, or READ_WRITE.",
                "description_kind": "plain",
                "optional": true
              },
              "required": {
                "type": "bool",
                "description": "Whether the subschema is required",
                "description_kind": "plain",
                "optional": true
              },
              "title": {
                "type": "string",
                "description": "Subschema title (display name)",
                "description_kind": "plain",
                "required": true
              },
              "type": {
                "type": "string",
                "description": "Subschema type: string, boolean, number, integer, array, or object",
                "description_kind": "plain",
                "required": true
              },
              "user_type": {
                "type": "string",
                "description": "Custom subschema user type",
                "description_kind": "plain",
                "optional": true
              }
            },
            "description_kind": "plain"
          }
        },
        "okta_user_factor_question": {
          "version": 0,
          "block": {
            "attributes": {
              "answer": {
                "type": "string",
                "description": "User password security answer",
                "description_kind": "plain",
                "required": true,
                "sensitive": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "key": {
                "type": "string",
                "description": "Unique key for question",
                "description_kind": "plain",
                "required": true
              },
              "status": {
                "type": "string",
                "description": "User factor status.",
                "description_kind": "plain",
                "computed": true
              },
              "text": {
                "type": "string",
                "description": "Display text for question",
                "description_kind": "plain",
                "computed": true
              },
              "user_id": {
                "type": "string",
                "description": "ID of a Okta User",
                "description_kind": "plain",
                "required": true
              }
            },
            "description": "Resource to manage a question factor for a user",
            "description_kind": "plain"
          }
        },
        "okta_user_group_memberships": {
          "version": 0,
          "block": {
            "attributes": {
              "groups": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "The list of Okta group IDs which the user should have membership managed for.",
                "description_kind": "plain",
                "required": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "user_id": {
                "type": "string",
                "description": "ID of a Okta User",
                "description_kind": "plain",
                "required": true
              }
            },
            "description": "Resource to manage a set of group memberships for a specific user.",
            "description_kind": "plain"
          }
        },
        "okta_user_schema_property": {
          "version": 1,
          "block": {
            "attributes": {
              "array_enum": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "Custom Subschema enumerated value of a property of type array.",
                "description_kind": "plain",
                "optional": true
              },
              "array_type": {
                "type": "string",
                "description": "Subschema array type: string, number, integer, reference. Type field must be an array.",
                "description_kind": "plain",
                "optional": true
              },
              "description": {
                "type": "string",
                "description": "Custom Subschema description",
                "description_kind": "plain",
                "optional": true
              },
              "enum": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "Custom Subschema enumerated value of the property. see: developer.okta.com/docs/api/resources/schemas#user-profile-schema-property-object",
                "description_kind": "plain",
                "optional": true
              },
              "external_name": {
                "type": "string",
                "description": "Subschema external name",
                "description_kind": "plain",
                "optional": true
              },
              "external_namespace": {
                "type": "string",
                "description": "Subschema external namespace",
                "description_kind": "plain",
                "optional": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "index": {
                "type": "string",
                "description": "Subschema unique string identifier",
                "description_kind": "plain",
                "required": true
              },
              "master": {
                "type": "string",
                "description": "SubSchema profile manager, if not set it will inherit its setting.",
                "description_kind": "plain",
                "optional": true
              },
              "max_length": {
                "type": "number",
                "description": "Subschema of type string maximum length",
                "description_kind": "plain",
                "optional": true
              },
              "min_length": {
                "type": "number",
                "description": "Subschema of type string minimum length",
                "description_kind": "plain",
                "optional": true
              },
              "pattern": {
                "type": "string",
                "description": "The validation pattern to use for the subschema. Must be in form of '.+', or '[<pattern>]+' if present.'",
                "description_kind": "plain",
                "optional": true
              },
              "permissions": {
                "type": "string",
                "description": "SubSchema permissions: HIDE, READ_ONLY, or READ_WRITE.",
                "description_kind": "plain",
                "optional": true
              },
              "required": {
                "type": "bool",
                "description": "Whether the subschema is required",
                "description_kind": "plain",
                "optional": true
              },
              "scope": {
                "type": "string",
                "description_kind": "plain",
                "optional": true
              },
              "title": {
                "type": "string",
                "description": "Subschema title (display name)",
                "description_kind": "plain",
                "required": true
              },
              "type": {
                "type": "string",
                "description": "Subschema type: string, boolean, number, integer, array, or object",
                "description_kind": "plain",
                "required": true
              },
              "unique": {
                "type": "string",
                "description": "Subschema unique restriction",
                "description_kind": "plain",
                "optional": true
              },
              "user_type": {
                "type": "string",
                "description": "Custom subschema user type",
                "description_kind": "plain",
                "optional": true
              }
            },
            "block_types": {
              "array_one_of": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "const": {
                      "type": "string",
                      "description": "Enum value",
                      "description_kind": "plain",
                      "required": true
                    },
                    "title": {
                      "type": "string",
                      "description": "Enum title",
                      "description_kind": "plain",
                      "required": true
                    }
                  },
                  "description": "array of valid JSON schemas for property type array.",
                  "description_kind": "plain"
                }
              },
              "master_override_priority": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "type": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "value": {
                      "type": "string",
                      "description_kind": "plain",
                      "required": true
                    }
                  },
                  "description_kind": "plain"
                }
              },
              "one_of": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "const": {
                      "type": "string",
                      "description": "Enum value",
                      "description_kind": "plain",
                      "required": true
                    },
                    "title": {
                      "type": "string",
                      "description": "Enum title",
                      "description_kind": "plain",
                      "required": true
                    }
                  },
                  "description": "Custom Subschema json schemas. see: developer.okta.com/docs/api/resources/schemas#user-profile-schema-property-object",
                  "description_kind": "plain"
                }
              }
            },
            "description_kind": "plain"
          }
        },
        "okta_user_type": {
          "version": 0,
          "block": {
            "attributes": {
              "description": {
                "type": "string",
                "description": "A human-readable description of the User type",
                "description_kind": "plain",
                "required": true
              },
              "display_name": {
                "type": "string",
                "description": "The display name of the user type",
                "description_kind": "plain",
                "required": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "description": "Name of the user type",
                "description_kind": "plain",
                "required": true
              }
            },
            "description_kind": "plain"
          }
        }
      },
      "data_source_schemas": {
        "okta_app": {
          "version": 0,
          "block": {
            "attributes": {
              "active_only": {
                "type": "bool",
                "description": "Search only ACTIVE applications.",
                "description_kind": "plain",
                "optional": true
              },
              "groups": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "Groups associated with the application",
                "description_kind": "plain",
                "deprecated": true,
                "computed": true
              },
              "id": {
                "type": "string",
                "description": "Id of application to retrieve, conflicts with label and label_prefix.",
                "description_kind": "plain",
                "optional": true
              },
              "label": {
                "type": "string",
                "description": "The label of the app to retrieve, conflicts with\n\t\t\t\tlabel_prefix and id. Label uses the ?q=<label> query parameter exposed by\n\t\t\t\tOkta's List Apps API. The API will search both name and label using that\n\t\t\t\tquery. Therefore similarily named and labeled apps may be returned in the query\n\t\t\t\tand have the unitended result of associating the wrong app with this data\n\t\t\t\tsource. See:\n\t\t\t\thttps://developer.okta.com/docs/reference/api/apps/#list-applications",
                "description_kind": "plain",
                "optional": true
              },
              "label_prefix": {
                "type": "string",
                "description": "Label prefix of the app to retrieve, conflicts with label and id. This will tell the\n\t\t\t\tprovider to do a starts with query as opposed to an equals query.",
                "description_kind": "plain",
                "optional": true
              },
              "links": {
                "type": "string",
                "description": "Discoverable resources related to the app",
                "description_kind": "plain",
                "computed": true
              },
              "name": {
                "type": "string",
                "description": "Name of application.",
                "description_kind": "plain",
                "computed": true
              },
              "skip_groups": {
                "type": "bool",
                "description": "Ignore groups sync. This is a temporary solution until 'groups' field is supported in all the app-like resources",
                "description_kind": "plain",
                "deprecated": true,
                "optional": true
              },
              "skip_users": {
                "type": "bool",
                "description": "Ignore users sync. This is a temporary solution until 'users' field is supported in all the app-like resources",
                "description_kind": "plain",
                "deprecated": true,
                "optional": true
              },
              "status": {
                "type": "string",
                "description": "Status of application.",
                "description_kind": "plain",
                "computed": true
              },
              "users": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "Users associated with the application",
                "description_kind": "plain",
                "deprecated": true,
                "computed": true
              }
            },
            "description": "Get an application of any kind from Okta.",
            "description_kind": "plain"
          }
        },
        "okta_app_group_assignments": {
          "version": 0,
          "block": {
            "attributes": {
              "groups": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "List of groups IDs assigned to the app",
                "description_kind": "plain",
                "computed": true
              },
              "id": {
                "type": "string",
                "description": "ID of the Okta App being queried for groups",
                "description_kind": "plain",
                "required": true
              }
            },
            "description": "Get a set of groups assigned to an Okta application.",
            "description_kind": "plain"
          }
        },
        "okta_app_metadata_saml": {
          "version": 0,
          "block": {
            "attributes": {
              "app_id": {
                "type": "string",
                "description": "The application ID.",
                "description_kind": "plain",
                "required": true
              },
              "certificate": {
                "type": "string",
                "description": "Public certificate from application metadata.",
                "description_kind": "plain",
                "computed": true
              },
              "entity_id": {
                "type": "string",
                "description": "Entity URL for instance https://www.okta.com/saml2/service-provider/sposcfdmlybtwkdcgtuf",
                "description_kind": "plain",
                "computed": true
              },
              "http_post_binding": {
                "type": "string",
                "description": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Post location from the SAML metadata.",
                "description_kind": "plain",
                "computed": true
              },
              "http_redirect_binding": {
                "type": "string",
                "description": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect location from the SAML metadata.",
                "description_kind": "plain",
                "computed": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "key_id": {
                "type": "string",
                "description": "Certificate Key ID.",
                "description_kind": "plain",
                "optional": true
              },
              "metadata": {
                "type": "string",
                "description": "Raw metadata of application.",
                "description_kind": "plain",
                "computed": true
              },
              "want_authn_requests_signed": {
                "type": "bool",
                "description": "Whether authn requests are signed.",
                "description_kind": "plain",
                "computed": true
              }
            },
            "description": "Get a SAML application's metadata from Okta.",
            "description_kind": "plain"
          }
        },
        "okta_app_oauth": {
          "version": 0,
          "block": {
            "attributes": {
              "active_only": {
                "type": "bool",
                "description": "Search only ACTIVE applications.",
                "description_kind": "plain",
                "optional": true
              },
              "auto_submit_toolbar": {
                "type": "bool",
                "description": "Display auto submit toolbar",
                "description_kind": "plain",
                "computed": true
              },
              "client_id": {
                "type": "string",
                "description": "OAuth client ID",
                "description_kind": "plain",
                "computed": true
              },
              "client_secret": {
                "type": "string",
                "description": "OAuth client secret",
                "description_kind": "plain",
                "computed": true,
                "sensitive": true
              },
              "client_uri": {
                "type": "string",
                "description": "URI to a web page providing information about the client.",
                "description_kind": "plain",
                "computed": true
              },
              "grant_types": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "List of OAuth 2.0 grant types",
                "description_kind": "plain",
                "computed": true
              },
              "hide_ios": {
                "type": "bool",
                "description": "Do not display application icon on mobile app",
                "description_kind": "plain",
                "computed": true
              },
              "hide_web": {
                "type": "bool",
                "description": "Do not display application icon to users",
                "description_kind": "plain",
                "computed": true
              },
              "id": {
                "type": "string",
                "description": "Id of application to retrieve, conflicts with label and label_prefix.",
                "description_kind": "plain",
                "optional": true
              },
              "label": {
                "type": "string",
                "description": "The label of the app to retrieve, conflicts with\n\t\t\t\tlabel_prefix and id. Label uses the ?q=<label> query parameter exposed by\n\t\t\t\tOkta's List Apps API. The API will search both name and label using that\n\t\t\t\tquery. Therefore similarily named and labeled apps may be returned in the query\n\t\t\t\tand have the unitended result of associating the wrong app with this data\n\t\t\t\tsource. See:\n\t\t\t\thttps://developer.okta.com/docs/reference/api/apps/#list-applications",
                "description_kind": "plain",
                "optional": true
              },
              "label_prefix": {
                "type": "string",
                "description": "Label prefix of the app to retrieve, conflicts with label and id. This will tell the\n\t\t\t\tprovider to do a starts with query as opposed to an equals query.",
                "description_kind": "plain",
                "optional": true
              },
              "links": {
                "type": "string",
                "description": "Discoverable resources related to the app",
                "description_kind": "plain",
                "computed": true
              },
              "login_mode": {
                "type": "string",
                "description": "The type of Idp-Initiated login that the client supports, if any",
                "description_kind": "plain",
                "computed": true
              },
              "login_scopes": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "List of scopes to use for the request when 'login_mode' == OKTA",
                "description_kind": "plain",
                "computed": true
              },
              "login_uri": {
                "type": "string",
                "description": "URI that initiates login.",
                "description_kind": "plain",
                "computed": true
              },
              "logo_uri": {
                "type": "string",
                "description": "URI that references a logo for the client.",
                "description_kind": "plain",
                "computed": true
              },
              "name": {
                "type": "string",
                "description": "Name of application.",
                "description_kind": "plain",
                "computed": true
              },
              "policy_uri": {
                "type": "string",
                "description": "URI to web page providing client policy document.",
                "description_kind": "plain",
                "computed": true
              },
              "post_logout_redirect_uris": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "List of URIs for redirection after logout",
                "description_kind": "plain",
                "computed": true
              },
              "redirect_uris": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "List of URIs for use in the redirect-based flow.",
                "description_kind": "plain",
                "computed": true
              },
              "response_types": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "List of OAuth 2.0 response type strings.",
                "description_kind": "plain",
                "computed": true
              },
              "skip_groups": {
                "type": "bool",
                "description": "Ignore groups sync. This is a temporary solution until 'groups' field is supported in all the app-like resources",
                "description_kind": "plain",
                "deprecated": true,
                "optional": true
              },
              "skip_users": {
                "type": "bool",
                "description": "Ignore users sync. This is a temporary solution until 'users' field is supported in all the app-like resources",
                "description_kind": "plain",
                "deprecated": true,
                "optional": true
              },
              "status": {
                "type": "string",
                "description": "Status of application.",
                "description_kind": "plain",
                "computed": true
              },
              "type": {
                "type": "string",
                "description": "The type of OAuth application.",
                "description_kind": "plain",
                "computed": true
              },
              "wildcard_redirect": {
                "type": "string",
                "description": "Indicates if the client is allowed to use wildcard matching of redirect_uris",
                "description_kind": "plain",
                "computed": true
              }
            },
            "description": "Get a OIDC application from Okta.",
            "description_kind": "plain"
          }
        },
        "okta_app_saml": {
          "version": 0,
          "block": {
            "attributes": {
              "accessibility_error_redirect_url": {
                "type": "string",
                "description": "Custom error page URL",
                "description_kind": "plain",
                "computed": true
              },
              "accessibility_login_redirect_url": {
                "type": "string",
                "description": "Custom login page URL",
                "description_kind": "plain",
                "computed": true
              },
              "accessibility_self_service": {
                "type": "bool",
                "description": "Enable self service",
                "description_kind": "plain",
                "computed": true
              },
              "acs_endpoints": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "List of ACS endpoints for this SAML application",
                "description_kind": "plain",
                "computed": true
              },
              "active_only": {
                "type": "bool",
                "description": "Search only ACTIVE applications.",
                "description_kind": "plain",
                "optional": true
              },
              "app_settings_json": {
                "type": "string",
                "description": "Application settings in JSON format",
                "description_kind": "plain",
                "computed": true
              },
              "assertion_signed": {
                "type": "bool",
                "description": "Determines whether the SAML assertion is digitally signed",
                "description_kind": "plain",
                "computed": true
              },
              "attribute_statements": {
                "type": [
                  "list",
                  [
                    "object",
                    {
                      "filter_type": "string",
                      "filter_value": "string",
                      "name": "string",
                      "namespace": "string",
                      "type": "string",
                      "values": [
                        "list",
                        "string"
                      ]
                    }
                  ]
                ],
                "description_kind": "plain",
                "computed": true
              },
              "audience": {
                "type": "string",
                "description": "Audience Restriction",
                "description_kind": "plain",
                "computed": true
              },
              "authn_context_class_ref": {
                "type": "string",
                "description": "Identifies the SAML authentication context class for the assertion’s authentication statement",
                "description_kind": "plain",
                "computed": true
              },
              "auto_submit_toolbar": {
                "type": "bool",
                "description": "Display auto submit toolbar",
                "description_kind": "plain",
                "computed": true
              },
              "default_relay_state": {
                "type": "string",
                "description": "Identifies a specific application resource in an IDP initiated SSO scenario.",
                "description_kind": "plain",
                "computed": true
              },
              "destination": {
                "type": "string",
                "description": "Identifies the location where the SAML response is intended to be sent inside of the SAML assertion",
                "description_kind": "plain",
                "computed": true
              },
              "digest_algorithm": {
                "type": "string",
                "description": "Determines the digest algorithm used to digitally sign the SAML assertion and response",
                "description_kind": "plain",
                "computed": true
              },
              "features": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "features to enable",
                "description_kind": "plain",
                "computed": true
              },
              "groups": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "Groups associated with the application",
                "description_kind": "plain",
                "deprecated": true,
                "computed": true
              },
              "hide_ios": {
                "type": "bool",
                "description": "Do not display application icon on mobile app",
                "description_kind": "plain",
                "computed": true
              },
              "hide_web": {
                "type": "bool",
                "description": "Do not display application icon to users",
                "description_kind": "plain",
                "computed": true
              },
              "honor_force_authn": {
                "type": "bool",
                "description": "Prompt user to re-authenticate if SP asks for it",
                "description_kind": "plain",
                "computed": true
              },
              "id": {
                "type": "string",
                "description": "Id of application to retrieve, conflicts with label and label_prefix.",
                "description_kind": "plain",
                "optional": true
              },
              "idp_issuer": {
                "type": "string",
                "description": "SAML issuer ID",
                "description_kind": "plain",
                "computed": true
              },
              "inline_hook_id": {
                "type": "string",
                "description": "Saml Inline Hook setting",
                "description_kind": "plain",
                "computed": true
              },
              "key_id": {
                "type": "string",
                "description": "Certificate ID",
                "description_kind": "plain",
                "computed": true
              },
              "label": {
                "type": "string",
                "description": "The label of the app to retrieve, conflicts with label_prefix and id. Label \n\t\t\t\tuses the ?q=<label> query parameter exposed by Okta's API. It should be noted that at this time \n\t\t\t\tthis searches both name and label. This is used to avoid paginating through all applications.",
                "description_kind": "plain",
                "optional": true
              },
              "label_prefix": {
                "type": "string",
                "description": "Label prefix of the app to retrieve, conflicts with label and id. This will tell the\n\t\t\t\tprovider to do a starts with query as opposed to an equals query.",
                "description_kind": "plain",
                "optional": true
              },
              "links": {
                "type": "string",
                "description": "Discoverable resources related to the app",
                "description_kind": "plain",
                "computed": true
              },
              "name": {
                "type": "string",
                "description": "Name of application.",
                "description_kind": "plain",
                "computed": true
              },
              "recipient": {
                "type": "string",
                "description": "The location where the app may present the SAML assertion",
                "description_kind": "plain",
                "computed": true
              },
              "request_compressed": {
                "type": "bool",
                "description": "Denotes whether the request is compressed or not.",
                "description_kind": "plain",
                "optional": true
              },
              "response_signed": {
                "type": "bool",
                "description": "Determines whether the SAML auth response message is digitally signed",
                "description_kind": "plain",
                "computed": true
              },
              "saml_signed_request_enabled": {
                "type": "bool",
                "description": "SAML Signed Request enabled",
                "description_kind": "plain",
                "computed": true
              },
              "signature_algorithm": {
                "type": "string",
                "description": "Signature algorithm used ot digitally sign the assertion and response",
                "description_kind": "plain",
                "computed": true
              },
              "single_logout_certificate": {
                "type": "string",
                "description": "x509 encoded certificate that the Service Provider uses to sign Single Logout requests",
                "description_kind": "plain",
                "computed": true
              },
              "single_logout_issuer": {
                "type": "string",
                "description": "The issuer of the Service Provider that generates the Single Logout request",
                "description_kind": "plain",
                "computed": true
              },
              "single_logout_url": {
                "type": "string",
                "description": "The location where the logout response is sent",
                "description_kind": "plain",
                "computed": true
              },
              "skip_groups": {
                "type": "bool",
                "description": "Ignore groups sync. This is a temporary solution until 'groups' field is supported in all the app-like resources",
                "description_kind": "plain",
                "deprecated": true,
                "optional": true
              },
              "skip_users": {
                "type": "bool",
                "description": "Ignore users sync. This is a temporary solution until 'users' field is supported in all the app-like resources",
                "description_kind": "plain",
                "deprecated": true,
                "optional": true
              },
              "sp_issuer": {
                "type": "string",
                "description": "SAML SP issuer ID",
                "description_kind": "plain",
                "computed": true
              },
              "sso_url": {
                "type": "string",
                "description": "Single Sign On URL",
                "description_kind": "plain",
                "computed": true
              },
              "status": {
                "type": "string",
                "description": "Status of application.",
                "description_kind": "plain",
                "computed": true
              },
              "subject_name_id_format": {
                "type": "string",
                "description": "Identifies the SAML processing rules.",
                "description_kind": "plain",
                "computed": true
              },
              "subject_name_id_template": {
                "type": "string",
                "description": "Template for app user's username when a user is assigned to the app",
                "description_kind": "plain",
                "computed": true
              },
              "user_name_template": {
                "type": "string",
                "description": "Username template",
                "description_kind": "plain",
                "computed": true
              },
              "user_name_template_push_status": {
                "type": "string",
                "description": "Push username on update",
                "description_kind": "plain",
                "computed": true
              },
              "user_name_template_suffix": {
                "type": "string",
                "description": "Username template suffix",
                "description_kind": "plain",
                "computed": true
              },
              "user_name_template_type": {
                "type": "string",
                "description": "Username template type",
                "description_kind": "plain",
                "computed": true
              },
              "users": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "Users associated with the application",
                "description_kind": "plain",
                "deprecated": true,
                "computed": true
              }
            },
            "description": "Get a SAML application from Okta.",
            "description_kind": "plain"
          }
        },
        "okta_app_signon_policy": {
          "version": 0,
          "block": {
            "attributes": {
              "app_id": {
                "type": "string",
                "description": "App ID",
                "description_kind": "plain",
                "required": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "description": "Policy name",
                "description_kind": "plain",
                "computed": true
              }
            },
            "description": "Get a sign-on policy for the application.",
            "description_kind": "plain"
          }
        },
        "okta_app_user_assignments": {
          "version": 0,
          "block": {
            "attributes": {
              "id": {
                "type": "string",
                "description": "ID of the Okta App being queried for groups",
                "description_kind": "plain",
                "required": true
              },
              "users": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "List of user IDs assigned to the app",
                "description_kind": "plain",
                "computed": true
              }
            },
            "description": "Get a set of users assigned to an Okta application.",
            "description_kind": "plain"
          }
        },
        "okta_auth_server": {
          "version": 0,
          "block": {
            "attributes": {
              "audiences": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "Description of Authorization server.",
                "description_kind": "plain",
                "computed": true
              },
              "credentials_last_rotated": {
                "type": "string",
                "description": "Last time credentials were rotated.",
                "description_kind": "plain",
                "computed": true
              },
              "credentials_next_rotation": {
                "type": "string",
                "description": "Next time credentials will be rotated",
                "description_kind": "plain",
                "computed": true
              },
              "credentials_rotation_mode": {
                "type": "string",
                "description": "Mode of credential rotation, auto or manual.",
                "description_kind": "plain",
                "computed": true
              },
              "description": {
                "type": "string",
                "description": "Description of Authorization server.",
                "description_kind": "plain",
                "computed": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "issuer": {
                "type": "string",
                "description": "The complete URL of the authorization server. This becomes the `iss` claim in an access token.",
                "description_kind": "plain",
                "computed": true
              },
              "issuer_mode": {
                "type": "string",
                "description": "Can be set to `CUSTOM_URL` or `ORG_URL`",
                "description_kind": "plain",
                "computed": true
              },
              "kid": {
                "type": "string",
                "description": "Auth server key id.",
                "description_kind": "plain",
                "computed": true
              },
              "name": {
                "type": "string",
                "description": "The name of the auth server to retrieve.",
                "description_kind": "plain",
                "required": true
              },
              "status": {
                "type": "string",
                "description": "The activation status of the authorization server.",
                "description_kind": "plain",
                "computed": true
              }
            },
            "description": "Get an auth server from Okta.",
            "description_kind": "plain"
          }
        },
        "okta_auth_server_claim": {
          "version": 0,
          "block": {
            "attributes": {
              "always_include_in_token": {
                "type": "bool",
                "description": "Specifies whether to include Claims in the token.",
                "description_kind": "plain",
                "computed": true
              },
              "auth_server_id": {
                "type": "string",
                "description": "Auth server ID",
                "description_kind": "plain",
                "required": true
              },
              "claim_type": {
                "type": "string",
                "description": "Specifies whether the Claim is for an access token (`RESOURCE`) or ID token (`IDENTITY`).",
                "description_kind": "plain",
                "computed": true
              },
              "id": {
                "type": "string",
                "description": "Name of the claim. Conflicts with `name`.",
                "description_kind": "plain",
                "optional": true
              },
              "name": {
                "type": "string",
                "description": "Name of the claim. Conflicts with `id`.",
                "description_kind": "plain",
                "optional": true
              },
              "scopes": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "Auth server claim list of scopes",
                "description_kind": "plain",
                "computed": true
              },
              "status": {
                "type": "string",
                "description": "Status of the claim.",
                "description_kind": "plain",
                "computed": true
              },
              "value": {
                "type": "string",
                "description": "Value of the claim.",
                "description_kind": "plain",
                "computed": true
              },
              "value_type": {
                "type": "string",
                "description": "Specifies whether the Claim is an Okta EL expression (`EXPRESSION`), a set of groups (`GROUPS`), or a system claim (`SYSTEM`)",
                "description_kind": "plain",
                "computed": true
              }
            },
            "description": "Get authorization server claim from Okta.",
            "description_kind": "plain"
          }
        },
        "okta_auth_server_claims": {
          "version": 0,
          "block": {
            "attributes": {
              "auth_server_id": {
                "type": "string",
                "description": "Auth server ID",
                "description_kind": "plain",
                "required": true
              },
              "claims": {
                "type": [
                  "list",
                  [
                    "object",
                    {
                      "always_include_in_token": "bool",
                      "claim_type": "string",
                      "id": "string",
                      "name": "string",
                      "scopes": [
                        "set",
                        "string"
                      ],
                      "status": "string",
                      "value": "string",
                      "value_type": "string"
                    }
                  ]
                ],
                "description": "Collection of authorization server claims retrieved from Okta with the following properties.",
                "description_kind": "plain",
                "computed": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              }
            },
            "description": "Get a list of authorization server claims from Okta.",
            "description_kind": "plain"
          }
        },
        "okta_auth_server_policy": {
          "version": 0,
          "block": {
            "attributes": {
              "assigned_clients": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "List of clients this policy is assigned to. `[ALL_CLIENTS]` is a special value when policy is assigned to all clients.",
                "description_kind": "plain",
                "computed": true
              },
              "auth_server_id": {
                "type": "string",
                "description": "Auth server ID",
                "description_kind": "plain",
                "required": true
              },
              "description": {
                "type": "string",
                "description": "Description of authorization server policy.",
                "description_kind": "plain",
                "computed": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "description": "Name of the policy",
                "description_kind": "plain",
                "required": true
              },
              "priority": {
                "type": "number",
                "description": "Priority of the auth server policy",
                "description_kind": "plain",
                "computed": true
              }
            },
            "description": "Get an authorization server policy from Okta.",
            "description_kind": "plain"
          }
        },
        "okta_auth_server_scopes": {
          "version": 0,
          "block": {
            "attributes": {
              "auth_server_id": {
                "type": "string",
                "description": "Auth server ID",
                "description_kind": "plain",
                "required": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "scopes": {
                "type": [
                  "list",
                  [
                    "object",
                    {
                      "consent": "string",
                      "default": "bool",
                      "description": "string",
                      "display_name": "string",
                      "id": "string",
                      "metadata_publish": "string",
                      "name": "string",
                      "optional": "bool",
                      "system": "bool"
                    }
                  ]
                ],
                "description": "Collection of authorization server scopes retrieved from Okta with the following properties.",
                "description_kind": "plain",
                "computed": true
              }
            },
            "description": "Get a list of authorization server scopes from Okta.",
            "description_kind": "plain"
          }
        },
        "okta_authenticator": {
          "version": 0,
          "block": {
            "attributes": {
              "id": {
                "type": "string",
                "description": "ID of the authenticator.",
                "description_kind": "plain",
                "optional": true
              },
              "key": {
                "type": "string",
                "description": "A human-readable string that identifies the authenticator.",
                "description_kind": "plain",
                "optional": true
              },
              "name": {
                "type": "string",
                "description": "Name of the authenticator.",
                "description_kind": "plain",
                "optional": true
              },
              "provider_auth_port": {
                "type": "number",
                "description": "The RADIUS server port (for example 1812). This is defined when the On-Prem RADIUS server is configured",
                "description_kind": "plain",
                "computed": true
              },
              "provider_hostname": {
                "type": "string",
                "description": "Server host name or IP address",
                "description_kind": "plain",
                "computed": true
              },
              "provider_instance_id": {
                "type": "string",
                "description": "(Specific to `security_key`) App Instance ID.",
                "description_kind": "plain",
                "computed": true
              },
              "provider_json": {
                "type": "string",
                "description": "Authenticator Provider in JSON format",
                "description_kind": "plain",
                "computed": true
              },
              "provider_type": {
                "type": "string",
                "description": "Provider type.",
                "description_kind": "plain",
                "computed": true
              },
              "provider_user_name_template": {
                "type": "string",
                "description": "Username template expected by the provider.",
                "description_kind": "plain",
                "computed": true
              },
              "settings": {
                "type": "string",
                "description": "Authenticator settings in JSON format",
                "description_kind": "plain",
                "computed": true
              },
              "status": {
                "type": "string",
                "description": "Status of the Authenticator.",
                "description_kind": "plain",
                "computed": true
              },
              "type": {
                "type": "string",
                "description": "Type of the authenticator",
                "description_kind": "plain",
                "computed": true
              }
            },
            "description": "Get an authenticator by key, name of ID.",
            "description_kind": "plain"
          }
        },
        "okta_behavior": {
          "version": 0,
          "block": {
            "attributes": {
              "id": {
                "type": "string",
                "description": "Behavior ID.",
                "description_kind": "plain",
                "optional": true
              },
              "name": {
                "type": "string",
                "description": "Behavior name.",
                "description_kind": "plain",
                "optional": true
              },
              "settings": {
                "type": [
                  "map",
                  "string"
                ],
                "description": "Map of behavior settings.",
                "description_kind": "plain",
                "computed": true
              },
              "status": {
                "type": "string",
                "description": "Behavior status.",
                "description_kind": "plain",
                "computed": true
              },
              "type": {
                "type": "string",
                "description": "Behavior type.",
                "description_kind": "plain",
                "computed": true
              }
            },
            "description": "Get a behavior by name or ID.",
            "description_kind": "plain"
          }
        },
        "okta_behaviors": {
          "version": 0,
          "block": {
            "attributes": {
              "behaviors": {
                "type": [
                  "list",
                  [
                    "object",
                    {
                      "id": "string",
                      "name": "string",
                      "settings": [
                        "map",
                        "string"
                      ],
                      "status": "string",
                      "type": "string"
                    }
                  ]
                ],
                "description_kind": "plain",
                "computed": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "q": {
                "type": "string",
                "description": "Searches the name property of behaviors for matching value",
                "description_kind": "plain",
                "optional": true
              }
            },
            "description": "Get a behaviors by search criteria.",
            "description_kind": "plain"
          }
        },
        "okta_brand": {
          "version": 0,
          "block": {
            "attributes": {
              "brand_id": {
                "type": "string",
                "description": "Brand ID",
                "description_kind": "plain",
                "required": true
              },
              "custom_privacy_policy_url": {
                "type": "string",
                "description": "Custom privacy policy URL",
                "description_kind": "plain",
                "computed": true
              },
              "id": {
                "type": "string",
                "description": "The ID of the Brand",
                "description_kind": "plain",
                "computed": true
              },
              "links": {
                "type": "string",
                "description": "Link relations for this object - JSON HAL - Discoverable resources related to the brand",
                "description_kind": "plain",
                "computed": true
              },
              "name": {
                "type": "string",
                "description": "Brand name",
                "description_kind": "plain",
                "computed": true
              },
              "remove_powered_by_okta": {
                "type": "bool",
                "description": "Removes \"Powered by Okta\" from the Okta-hosted sign-in page and \"© 2021 Okta, Inc.\" from the Okta End-User Dashboard",
                "description_kind": "plain",
                "computed": true
              }
            },
            "description": "Get a single Brand from Okta.",
            "description_kind": "plain"
          }
        },
        "okta_brands": {
          "version": 0,
          "block": {
            "attributes": {
              "brands": {
                "type": [
                  "set",
                  [
                    "object",
                    {
                      "custom_privacy_policy_url": "string",
                      "id": "string",
                      "links": "string",
                      "name": "string",
                      "remove_powered_by_okta": "bool"
                    }
                  ]
                ],
                "description": "List of `okta_brand` belonging to the organization",
                "description_kind": "plain",
                "computed": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              }
            },
            "description": "Get the brands belonging to an Okta organization.",
            "description_kind": "plain"
          }
        },
        "okta_default_policy": {
          "version": 0,
          "block": {
            "attributes": {
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "type": {
                "type": "string",
                "description": "Policy type: OKTA_SIGN_ON, PASSWORD, MFA_ENROLL, or IDP_DISCOVERY",
                "description_kind": "plain",
                "required": true
              }
            },
            "description": "Get a Default policy from Okta.",
            "description_kind": "plain"
          }
        },
        "okta_domain": {
          "version": 0,
          "block": {
            "attributes": {
              "certificate_source_type": {
                "type": "string",
                "description": "Certificate source type that indicates whether the certificate is provided by the user or Okta. Values: MANUAL, OKTA_MANAGED",
                "description_kind": "plain",
                "computed": true
              },
              "dns_records": {
                "type": [
                  "list",
                  [
                    "object",
                    {
                      "expiration": "string",
                      "fqdn": "string",
                      "record_type": "string",
                      "values": [
                        "list",
                        "string"
                      ]
                    }
                  ]
                ],
                "description": "TXT and CNAME records to be registered for the Domain",
                "description_kind": "plain",
                "computed": true
              },
              "domain": {
                "type": "string",
                "description": "Domain name",
                "description_kind": "plain",
                "computed": true
              },
              "domain_id_or_name": {
                "type": "string",
                "description": "Brand ID",
                "description_kind": "plain",
                "required": true
              },
              "id": {
                "type": "string",
                "description": "The ID of the Domain",
                "description_kind": "plain",
                "computed": true
              },
              "public_certificate": {
                "type": [
                  "map",
                  "string"
                ],
                "description": "Certificate metadata for the Domain",
                "description_kind": "plain",
                "computed": true
              },
              "validation_status": {
                "type": "string",
                "description": "Status of the domain. Values: NOT_STARTED, IN_PROGRESS, VERIFIED, COMPLETED",
                "description_kind": "plain",
                "computed": true
              }
            },
            "description": "Get a domain from Okta.",
            "description_kind": "plain"
          }
        },
        "okta_email_customization": {
          "version": 0,
          "block": {
            "attributes": {
              "body": {
                "type": "string",
                "description": "The body of the customization",
                "description_kind": "plain",
                "computed": true
              },
              "brand_id": {
                "type": "string",
                "description": "Brand ID",
                "description_kind": "plain",
                "required": true
              },
              "customization_id": {
                "type": "string",
                "description": "The ID of the customization",
                "description_kind": "plain",
                "required": true
              },
              "id": {
                "type": "string",
                "description": "The ID of the customization",
                "description_kind": "plain",
                "computed": true
              },
              "is_default": {
                "type": "bool",
                "description": "Whether the customization is the default",
                "description_kind": "plain",
                "computed": true
              },
              "language": {
                "type": "string",
                "description": "The language supported by the customization",
                "description_kind": "plain",
                "computed": true
              },
              "links": {
                "type": "string",
                "description": "Link relations for this object - JSON HAL - Discoverable resources related to the email template",
                "description_kind": "plain",
                "computed": true
              },
              "subject": {
                "type": "string",
                "description": "The subject of the customization",
                "description_kind": "plain",
                "computed": true
              },
              "template_name": {
                "type": "string",
                "description": "Template Name",
                "description_kind": "plain",
                "required": true
              }
            },
            "description": "Get the email customization of an email template belonging to a brand in an Okta organization.",
            "description_kind": "plain"
          }
        },
        "okta_email_customizations": {
          "version": 0,
          "block": {
            "attributes": {
              "brand_id": {
                "type": "string",
                "description": "Brand ID",
                "description_kind": "plain",
                "required": true
              },
              "email_customizations": {
                "type": [
                  "set",
                  [
                    "object",
                    {
                      "body": "string",
                      "id": "string",
                      "is_default": "bool",
                      "language": "string",
                      "links": "string",
                      "subject": "string"
                    }
                  ]
                ],
                "description": "List of `okta_email_customization` belonging to the named email template of the brand in the organization",
                "description_kind": "plain",
                "computed": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "template_name": {
                "type": "string",
                "description": "Template Name",
                "description_kind": "plain",
                "required": true
              }
            },
            "description": "Get the email customizations of an email template belonging to a brand in an Okta organization.",
            "description_kind": "plain"
          }
        },
        "okta_email_template": {
          "version": 0,
          "block": {
            "attributes": {
              "brand_id": {
                "type": "string",
                "description": "Brand ID",
                "description_kind": "plain",
                "required": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "links": {
                "type": "string",
                "description": "Link relations for this object - JSON HAL - Discoverable resources related to the email template",
                "description_kind": "plain",
                "computed": true
              },
              "name": {
                "type": "string",
                "description": "The name of the email template",
                "description_kind": "plain",
                "required": true
              }
            },
            "description": "Get a single Email Template for a Brand belonging to an Okta organization.",
            "description_kind": "plain"
          }
        },
        "okta_email_templates": {
          "version": 0,
          "block": {
            "attributes": {
              "brand_id": {
                "type": "string",
                "description": "Brand ID",
                "description_kind": "plain",
                "required": true
              },
              "email_templates": {
                "type": [
                  "set",
                  [
                    "object",
                    {
                      "links": "string",
                      "name": "string"
                    }
                  ]
                ],
                "description": "List of `okta_email_template` belonging to a brand in the organization",
                "description_kind": "plain",
                "computed": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              }
            },
            "description": "Get the email templates belonging to a brand in an Okta organization.",
            "description_kind": "plain"
          }
        },
        "okta_everyone_group": {
          "version": 0,
          "block": {
            "attributes": {
              "description": {
                "type": "string",
                "description": "Description of group.",
                "description_kind": "plain",
                "computed": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "include_users": {
                "type": "bool",
                "description": "Fetch group users, having default off cuts down on API calls.",
                "description_kind": "plain",
                "optional": true
              }
            },
            "description": "Get the `Everyone` group from Okta.",
            "description_kind": "plain"
          }
        },
        "okta_group": {
          "version": 0,
          "block": {
            "attributes": {
              "delay_read_seconds": {
                "type": "string",
                "description": "Force delay of the group read by N seconds. Useful when eventual consistency of group information needs to be allowed for; for instance, when group rules are known to have been applied.",
                "description_kind": "plain",
                "optional": true
              },
              "description": {
                "type": "string",
                "description": "Description of group.",
                "description_kind": "plain",
                "computed": true
              },
              "id": {
                "type": "string",
                "description": "ID of group.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "include_users": {
                "type": "bool",
                "description": "Fetch group users, having default off cuts down on API calls.",
                "description_kind": "plain",
                "optional": true
              },
              "name": {
                "type": "string",
                "description": "Name of group.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "type": {
                "type": "string",
                "description": "Type of the group. When specified in the terraform resource, will act as a filter when searching for the group",
                "description_kind": "plain",
                "optional": true
              },
              "users": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "Users associated with the group. This can also be done per user.",
                "description_kind": "plain",
                "computed": true
              }
            },
            "description": "Get a group from Okta.",
            "description_kind": "plain"
          }
        },
        "okta_group_rule": {
          "version": 0,
          "block": {
            "attributes": {
              "expression_type": {
                "type": "string",
                "description": "The expression type to use to invoke the rule.",
                "description_kind": "plain",
                "computed": true
              },
              "expression_value": {
                "type": "string",
                "description": "The expression value.",
                "description_kind": "plain",
                "computed": true
              },
              "group_assignments": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "The list of group ids to assign the users to.",
                "description_kind": "plain",
                "computed": true
              },
              "id": {
                "type": "string",
                "description": "The ID of the Group Rule.",
                "description_kind": "plain",
                "optional": true
              },
              "name": {
                "type": "string",
                "description": "The name of the Group Rule.",
                "description_kind": "plain",
                "optional": true
              },
              "status": {
                "type": "string",
                "description_kind": "plain",
                "optional": true
              },
              "users_excluded": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "The list of user IDs that would be excluded when rules are processed.",
                "description_kind": "plain",
                "computed": true
              }
            },
            "description": "Get a group rule from Okta.",
            "description_kind": "plain"
          }
        },
        "okta_groups": {
          "version": 0,
          "block": {
            "attributes": {
              "groups": {
                "type": [
                  "list",
                  [
                    "object",
                    {
                      "custom_profile_attributes": "string",
                      "description": "string",
                      "id": "string",
                      "name": "string",
                      "type": "string"
                    }
                  ]
                ],
                "description_kind": "plain",
                "computed": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "q": {
                "type": "string",
                "description": "Searches the name property of groups for matching value",
                "description_kind": "plain",
                "optional": true
              },
              "search": {
                "type": "string",
                "description": "Searches for groups with a supported filtering expression for all attributes except for '_embedded', '_links', and 'objectClass'",
                "description_kind": "plain",
                "optional": true
              },
              "type": {
                "type": "string",
                "description": "Type of the group. When specified in the terraform resource, will act as a filter when searching for the groups",
                "description_kind": "plain",
                "optional": true
              }
            },
            "description": "Get a list of groups from Okta.",
            "description_kind": "plain"
          }
        },
        "okta_idp_metadata_saml": {
          "version": 0,
          "block": {
            "attributes": {
              "assertions_signed": {
                "type": "bool",
                "description": "Whether assertions are signed.",
                "description_kind": "plain",
                "computed": true
              },
              "authn_request_signed": {
                "type": "bool",
                "description": "Whether authn requests are signed.",
                "description_kind": "plain",
                "computed": true
              },
              "encryption_certificate": {
                "type": "string",
                "description": "SAML request encryption certificate.",
                "description_kind": "plain",
                "computed": true
              },
              "entity_id": {
                "type": "string",
                "description": "Entity URL for instance https://www.okta.com/saml2/service-provider/sposcfdmlybtwkdcgtuf",
                "description_kind": "plain",
                "computed": true
              },
              "http_post_binding": {
                "type": "string",
                "description": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Post location from the SAML metadata.",
                "description_kind": "plain",
                "computed": true
              },
              "http_redirect_binding": {
                "type": "string",
                "description": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect location from the SAML metadata.",
                "description_kind": "plain",
                "computed": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "idp_id": {
                "type": "string",
                "description": "The id of the IdP to retrieve metadata for.",
                "description_kind": "plain",
                "optional": true
              },
              "metadata": {
                "type": "string",
                "description": "Raw IdP metadata.",
                "description_kind": "plain",
                "computed": true
              },
              "signing_certificate": {
                "type": "string",
                "description": "SAML request signing certificate.",
                "description_kind": "plain",
                "computed": true
              }
            },
            "description": "Get SAML IdP metadata from Okta.",
            "description_kind": "plain"
          }
        },
        "okta_idp_oidc": {
          "version": 0,
          "block": {
            "attributes": {
              "authorization_binding": {
                "type": "string",
                "description": "The method of making an authorization request.",
                "description_kind": "plain",
                "computed": true
              },
              "authorization_url": {
                "type": "string",
                "description": "IdP Authorization Server (AS) endpoint to request consent from the user and obtain an authorization code grant.",
                "description_kind": "plain",
                "computed": true
              },
              "client_id": {
                "type": "string",
                "description": "Unique identifier issued by AS for the Okta IdP instance.",
                "description_kind": "plain",
                "computed": true
              },
              "client_secret": {
                "type": "string",
                "description": "Client secret issued by AS for the Okta IdP instance.",
                "description_kind": "plain",
                "computed": true,
                "sensitive": true
              },
              "id": {
                "type": "string",
                "description": "Id of idp.",
                "description_kind": "plain",
                "optional": true
              },
              "issuer_mode": {
                "type": "string",
                "description": "Indicates whether Okta uses the original Okta org domain URL, a custom domain URL, or dynamic.",
                "description_kind": "plain",
                "computed": true
              },
              "issuer_url": {
                "type": "string",
                "description": "URI that identifies the issuer.",
                "description_kind": "plain",
                "computed": true
              },
              "jwks_binding": {
                "type": "string",
                "description": " The method of making a request for the OIDC JWKS.",
                "description_kind": "plain",
                "computed": true
              },
              "jwks_url": {
                "type": "string",
                "description": "Endpoint where the keys signer publishes its keys in a JWK Set.",
                "description_kind": "plain",
                "computed": true
              },
              "max_clock_skew": {
                "type": "number",
                "description": "Maximum allowable clock-skew when processing messages from the IdP.",
                "description_kind": "plain",
                "computed": true
              },
              "name": {
                "type": "string",
                "description": "Name of the idp.",
                "description_kind": "plain",
                "optional": true
              },
              "protocol_type": {
                "type": "string",
                "description": "The type of protocol to use.",
                "description_kind": "plain",
                "computed": true
              },
              "scopes": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "The scopes of the IdP.",
                "description_kind": "plain",
                "computed": true
              },
              "token_binding": {
                "type": "string",
                "description": "The method of making a token request.",
                "description_kind": "plain",
                "computed": true
              },
              "token_url": {
                "type": "string",
                "description": "IdP Authorization Server (AS) endpoint to exchange the authorization code grant for an access token.",
                "description_kind": "plain",
                "computed": true
              },
              "type": {
                "type": "string",
                "description": "Type of idp.",
                "description_kind": "plain",
                "computed": true
              },
              "user_info_binding": {
                "type": "string",
                "description": "The method of making a user info request.",
                "description_kind": "plain",
                "computed": true
              },
              "user_info_url": {
                "type": "string",
                "description": "Protected resource endpoint that returns claims about the authenticated user.",
                "description_kind": "plain",
                "computed": true
              }
            },
            "description": "Get a OIDC IdP from Okta.",
            "description_kind": "plain"
          }
        },
        "okta_idp_saml": {
          "version": 0,
          "block": {
            "attributes": {
              "acs_binding": {
                "type": "string",
                "description": "ACS binding",
                "description_kind": "plain",
                "computed": true
              },
              "acs_type": {
                "type": "string",
                "description": "Determines whether to publish an instance-specific (trust) or organization (shared) ACS endpoint in the SAML metadata.",
                "description_kind": "plain",
                "computed": true
              },
              "audience": {
                "type": "string",
                "description": "URI that identifies the target Okta IdP instance (SP)",
                "description_kind": "plain",
                "computed": true
              },
              "id": {
                "type": "string",
                "description": "Id of idp.",
                "description_kind": "plain",
                "optional": true
              },
              "issuer": {
                "type": "string",
                "description": "URI that identifies the issuer (IdP).",
                "description_kind": "plain",
                "computed": true
              },
              "issuer_mode": {
                "type": "string",
                "description": "Indicates whether Okta uses the original Okta org domain URL, or a custom domain URL in the request to the IdP.",
                "description_kind": "plain",
                "computed": true
              },
              "kid": {
                "type": "string",
                "description": "Key ID reference to the IdP's X.509 signature certificate.",
                "description_kind": "plain",
                "computed": true
              },
              "name": {
                "type": "string",
                "description": "Name of the idp.",
                "description_kind": "plain",
                "optional": true
              },
              "sso_binding": {
                "type": "string",
                "description": "Single sign-on binding.",
                "description_kind": "plain",
                "computed": true
              },
              "sso_destination": {
                "type": "string",
                "description": "SSO request binding, HTTP-POST or HTTP-REDIRECT.",
                "description_kind": "plain",
                "computed": true
              },
              "sso_url": {
                "type": "string",
                "description": "Single sign-on url.",
                "description_kind": "plain",
                "computed": true
              },
              "subject_filter": {
                "type": "string",
                "description": "Regular expression pattern used to filter untrusted IdP usernames.",
                "description_kind": "plain",
                "computed": true
              },
              "subject_format": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "Expression to generate or transform a unique username for the IdP user.",
                "description_kind": "plain",
                "computed": true
              },
              "type": {
                "type": "string",
                "description": "Type of idp.",
                "description_kind": "plain",
                "computed": true
              }
            },
            "description": "Get a SAML IdP from Okta.",
            "description_kind": "plain"
          }
        },
        "okta_idp_social": {
          "version": 0,
          "block": {
            "attributes": {
              "account_link_action": {
                "type": "string",
                "description": "Specifies the account linking action for an IdP user.",
                "description_kind": "plain",
                "computed": true
              },
              "account_link_group_include": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "Group memberships to determine link candidates.",
                "description_kind": "plain",
                "computed": true
              },
              "authorization_binding": {
                "type": "string",
                "description": "The method of making an authorization request.",
                "description_kind": "plain",
                "computed": true
              },
              "authorization_url": {
                "type": "string",
                "description": "IdP Authorization Server (AS) endpoint to request consent from the user and obtain an authorization code grant.",
                "description_kind": "plain",
                "computed": true
              },
              "client_id": {
                "type": "string",
                "description": "Unique identifier issued by AS for the Okta IdP instance.",
                "description_kind": "plain",
                "computed": true
              },
              "client_secret": {
                "type": "string",
                "description": "Client secret issued by AS for the Okta IdP instance.",
                "description_kind": "plain",
                "computed": true,
                "sensitive": true
              },
              "deprovisioned_action": {
                "type": "string",
                "description": "Action for a previously deprovisioned IdP user during authentication.",
                "description_kind": "plain",
                "computed": true
              },
              "groups_action": {
                "type": "string",
                "description": "Provisioning action for IdP user's group memberships.",
                "description_kind": "plain",
                "computed": true
              },
              "groups_assignment": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "List of Okta Group IDs.",
                "description_kind": "plain",
                "computed": true
              },
              "groups_attribute": {
                "type": "string",
                "description": "IdP user profile attribute name for an array value that contains group memberships.",
                "description_kind": "plain",
                "computed": true
              },
              "groups_filter": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "Whitelist of Okta Group identifiers.",
                "description_kind": "plain",
                "computed": true
              },
              "id": {
                "type": "string",
                "description": "The id of the social idp to retrieve, conflicts with `name`.",
                "description_kind": "plain",
                "optional": true
              },
              "issuer_mode": {
                "type": "string",
                "description": "Indicates whether Okta uses the original Okta org domain URL, or a custom domain URL.",
                "description_kind": "plain",
                "computed": true
              },
              "max_clock_skew": {
                "type": "number",
                "description": "Maximum allowable clock-skew when processing messages from the IdP.",
                "description_kind": "plain",
                "computed": true
              },
              "name": {
                "type": "string",
                "description": "The name of the social idp to retrieve, conflicts with `id`.",
                "description_kind": "plain",
                "optional": true
              },
              "profile_master": {
                "type": "bool",
                "description": "Determines if the IdP should act as a source of truth for user profile attributes.",
                "description_kind": "plain",
                "computed": true
              },
              "protocol_type": {
                "type": "string",
                "description": "The type of protocol to use.",
                "description_kind": "plain",
                "computed": true
              },
              "provisioning_action": {
                "type": "string",
                "description": "Provisioning action for an IdP user during authentication.",
                "description_kind": "plain",
                "computed": true
              },
              "scopes": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "The scopes of the IdP.",
                "description_kind": "plain",
                "computed": true
              },
              "status": {
                "type": "string",
                "description": "Status of the IdP.",
                "description_kind": "plain",
                "computed": true
              },
              "subject_match_attribute": {
                "type": "string",
                "description": "Okta user profile attribute for matching transformed IdP username.",
                "description_kind": "plain",
                "computed": true
              },
              "subject_match_type": {
                "type": "string",
                "description": "Determines the Okta user profile attribute match conditions for account linking and authentication of the transformed IdP username.",
                "description_kind": "plain",
                "computed": true
              },
              "suspended_action": {
                "type": "string",
                "description": "Action for a previously suspended IdP user during authentication.",
                "description_kind": "plain",
                "computed": true
              },
              "token_binding": {
                "type": "string",
                "description": "The method of making a token request.",
                "description_kind": "plain",
                "computed": true
              },
              "token_url": {
                "type": "string",
                "description": "IdP Authorization Server (AS) endpoint to exchange the authorization code grant for an access token.",
                "description_kind": "plain",
                "computed": true
              },
              "type": {
                "type": "string",
                "description": "The type of Social IdP. See API docs [Identity Provider Type](https://developer.okta.com/docs/reference/api/idps/#identity-provider-type)",
                "description_kind": "plain",
                "computed": true
              },
              "username_template": {
                "type": "string",
                "description": "Okta EL Expression to generate or transform a unique username for the IdP user.",
                "description_kind": "plain",
                "computed": true
              }
            },
            "description": "Get a social IdP from Okta.",
            "description_kind": "plain"
          }
        },
        "okta_network_zone": {
          "version": 0,
          "block": {
            "attributes": {
              "asns": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "Format of each array value: a string representation of an ASN numeric value",
                "description_kind": "plain",
                "computed": true
              },
              "dynamic_locations": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "Array of locations ISO-3166-1(2). Format code: countryCode OR countryCode-regionCode",
                "description_kind": "plain",
                "computed": true
              },
              "dynamic_proxy_type": {
                "type": "string",
                "description": "Type of proxy being controlled by this network zone",
                "description_kind": "plain",
                "computed": true
              },
              "gateways": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "Array of values in CIDR/range form depending on the way it's been declared (i.e. CIDR will contain /suffix). Please check API docs for examples",
                "description_kind": "plain",
                "computed": true
              },
              "id": {
                "type": "string",
                "description": "ID of the network zone to retrieve, conflicts with `name`.",
                "description_kind": "plain",
                "optional": true
              },
              "name": {
                "type": "string",
                "description": "Name of the network zone to retrieve, conflicts with `id`.",
                "description_kind": "plain",
                "optional": true
              },
              "proxies": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "Array of values in CIDR/range form depending on the way it's been declared (i.e. CIDR will contain /suffix). Please check API docs for examples",
                "description_kind": "plain",
                "computed": true
              },
              "status": {
                "type": "string",
                "description": "Network Status - can either be ACTIVE or INACTIVE only",
                "description_kind": "plain",
                "computed": true
              },
              "type": {
                "type": "string",
                "description": "Type of the Network Zone - can either be IP or DYNAMIC only",
                "description_kind": "plain",
                "computed": true
              },
              "usage": {
                "type": "string",
                "description": "Zone's purpose: POLICY or BLOCKLIST",
                "description_kind": "plain",
                "computed": true
              }
            },
            "description": "Gets Okta Network Zone.",
            "description_kind": "plain"
          }
        },
        "okta_org_metadata": {
          "version": 0,
          "block": {
            "attributes": {
              "id": {
                "type": "string",
                "description": "The unique identifier of the Org.",
                "description_kind": "markdown",
                "computed": true
              },
              "pipeline": {
                "type": "string",
                "description": "The authentication pipeline of the org. idx means the org is using the Identity Engine, while v1 means the org is using the Classic authentication pipeline.",
                "description_kind": "markdown",
                "computed": true
              }
            },
            "block_types": {
              "domains": {
                "nesting_mode": "single",
                "block": {
                  "attributes": {
                    "alternate": {
                      "type": "string",
                      "description": "Custom Domain Org URI",
                      "description_kind": "markdown",
                      "computed": true
                    },
                    "organization": {
                      "type": "string",
                      "description": "Standard Org URI",
                      "description_kind": "markdown",
                      "computed": true
                    }
                  },
                  "description": "The URIs for the org's configured domains.",
                  "description_kind": "markdown"
                }
              },
              "settings": {
                "nesting_mode": "single",
                "block": {
                  "attributes": {
                    "analytics_collection_enabled": {
                      "type": "bool",
                      "description_kind": "plain",
                      "computed": true
                    },
                    "bug_reporting_enabled": {
                      "type": "bool",
                      "description_kind": "plain",
                      "computed": true
                    },
                    "om_enabled": {
                      "type": "bool",
                      "description": "Whether the legacy Okta Mobile application is enabled for the org",
                      "description_kind": "markdown",
                      "computed": true
                    }
                  },
                  "description": "The wellknown org settings (safe for public consumption).",
                  "description_kind": "markdown"
                }
              }
            },
            "description": "Retrieves the well-known org metadata, which includes the id, configured custom domains, authentication pipeline, and various other org settings.",
            "description_kind": "markdown"
          }
        },
        "okta_policy": {
          "version": 0,
          "block": {
            "attributes": {
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "description": "Name of the policy",
                "description_kind": "plain",
                "required": true
              },
              "status": {
                "type": "string",
                "description": "Status of the policy",
                "description_kind": "plain",
                "computed": true
              },
              "type": {
                "type": "string",
                "description": "Policy type, see https://developer.okta.com/docs/reference/api/policy/#policy-object",
                "description_kind": "plain",
                "required": true
              }
            },
            "description": "Get a policy from Okta.",
            "description_kind": "plain"
          }
        },
        "okta_role_subscription": {
          "version": 0,
          "block": {
            "attributes": {
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "notification_type": {
                "type": "string",
                "description": "Type of the notification",
                "description_kind": "plain",
                "required": true
              },
              "role_type": {
                "type": "string",
                "description": "Type of the role",
                "description_kind": "plain",
                "required": true
              },
              "status": {
                "type": "string",
                "description": "Status of subscription",
                "description_kind": "plain",
                "computed": true
              }
            },
            "description": "Get subscriptions of a Role with a specific type",
            "description_kind": "plain"
          }
        },
        "okta_theme": {
          "version": 0,
          "block": {
            "attributes": {
              "background_image_url": {
                "type": "string",
                "description": "Background image URL",
                "description_kind": "plain",
                "computed": true
              },
              "brand_id": {
                "type": "string",
                "description": "Brand ID",
                "description_kind": "plain",
                "required": true
              },
              "email_template_touch_point_variant": {
                "type": "string",
                "description": "Variant for email templates (`OKTA_DEFAULT`, `FULL_THEME`)",
                "description_kind": "plain",
                "computed": true
              },
              "end_user_dashboard_touch_point_variant": {
                "type": "string",
                "description": "Variant for the Okta End-User Dashboard (`OKTA_DEFAULT`, `WHITE_LOGO_BACKGROUND`, `FULL_THEME`, `LOGO_ON_FULL_WHITE_BACKGROUND`)",
                "description_kind": "plain",
                "computed": true
              },
              "error_page_touch_point_variant": {
                "type": "string",
                "description": "Variant for the error page (`OKTA_DEFAULT`, `BACKGROUND_SECONDARY_COLOR`, `BACKGROUND_IMAGE`)",
                "description_kind": "plain",
                "computed": true
              },
              "favicon_url": {
                "type": "string",
                "description": "Favicon URL",
                "description_kind": "plain",
                "computed": true
              },
              "id": {
                "type": "string",
                "description": "The ID of the theme",
                "description_kind": "plain",
                "computed": true
              },
              "links": {
                "type": "string",
                "description": "Link relations for this object - JSON HAL - Discoverable resources related to the email template",
                "description_kind": "plain",
                "computed": true
              },
              "logo_url": {
                "type": "string",
                "description": "Logo URL",
                "description_kind": "plain",
                "computed": true
              },
              "primary_color_contrast_hex": {
                "type": "string",
                "description": "Primary color contrast hex code",
                "description_kind": "plain",
                "computed": true
              },
              "primary_color_hex": {
                "type": "string",
                "description": "Primary color hex code",
                "description_kind": "plain",
                "computed": true
              },
              "secondary_color_contrast_hex": {
                "type": "string",
                "description": "Secondary color contrast hex code",
                "description_kind": "plain",
                "computed": true
              },
              "secondary_color_hex": {
                "type": "string",
                "description": "Secondary color hex code",
                "description_kind": "plain",
                "computed": true
              },
              "sign_in_page_touch_point_variant": {
                "type": "string",
                "description": "Variant for the Okta Sign-In Page (`OKTA_DEFAULT`, `BACKGROUND_SECONDARY_COLOR`, `BACKGROUND_IMAGE`)",
                "description_kind": "plain",
                "computed": true
              },
              "theme_id": {
                "type": "string",
                "description": "Theme ID",
                "description_kind": "plain",
                "required": true
              }
            },
            "description": "Get a single Theme of a Brand of an Okta Organization.",
            "description_kind": "plain"
          }
        },
        "okta_themes": {
          "version": 0,
          "block": {
            "attributes": {
              "brand_id": {
                "type": "string",
                "description": "Brand ID",
                "description_kind": "plain",
                "required": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "themes": {
                "type": [
                  "set",
                  [
                    "object",
                    {
                      "background_image_url": "string",
                      "email_template_touch_point_variant": "string",
                      "end_user_dashboard_touch_point_variant": "string",
                      "error_page_touch_point_variant": "string",
                      "favicon_url": "string",
                      "id": "string",
                      "links": "string",
                      "logo_url": "string",
                      "primary_color_contrast_hex": "string",
                      "primary_color_hex": "string",
                      "secondary_color_contrast_hex": "string",
                      "secondary_color_hex": "string",
                      "sign_in_page_touch_point_variant": "string"
                    }
                  ]
                ],
                "description": "List of `okta_them` belonging to the brand in the organization",
                "description_kind": "plain",
                "computed": true
              }
            },
            "description": "Get Themes of a Brand of an Okta Organization.",
            "description_kind": "plain"
          }
        },
        "okta_trusted_origins": {
          "version": 0,
          "block": {
            "attributes": {
              "filter": {
                "type": "string",
                "description": "Filter criteria. Filter value will be URL-encoded by the provider",
                "description_kind": "plain",
                "optional": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "trusted_origins": {
                "type": [
                  "list",
                  [
                    "object",
                    {
                      "active": "bool",
                      "id": "string",
                      "name": "string",
                      "origin": "string",
                      "scopes": [
                        "list",
                        "string"
                      ]
                    }
                  ]
                ],
                "description_kind": "plain",
                "computed": true
              }
            },
            "description": "Get List of Trusted Origins using filters.",
            "description_kind": "plain"
          }
        },
        "okta_user": {
          "version": 0,
          "block": {
            "attributes": {
              "admin_roles": {
                "type": [
                  "set",
                  "string"
                ],
                "description_kind": "plain",
                "computed": true
              },
              "city": {
                "type": "string",
                "description_kind": "plain",
                "computed": true
              },
              "compound_search_operator": {
                "type": "string",
                "description": "Search operator used when joining mulitple search clauses",
                "description_kind": "plain",
                "optional": true
              },
              "cost_center": {
                "type": "string",
                "description_kind": "plain",
                "computed": true
              },
              "country_code": {
                "type": "string",
                "description_kind": "plain",
                "computed": true
              },
              "custom_profile_attributes": {
                "type": "string",
                "description_kind": "plain",
                "computed": true
              },
              "delay_read_seconds": {
                "type": "string",
                "description": "Force delay of the user read by N seconds. Useful when eventual consistency of user information needs to be allowed for.",
                "description_kind": "plain",
                "optional": true
              },
              "department": {
                "type": "string",
                "description_kind": "plain",
                "computed": true
              },
              "display_name": {
                "type": "string",
                "description_kind": "plain",
                "computed": true
              },
              "division": {
                "type": "string",
                "description_kind": "plain",
                "computed": true
              },
              "email": {
                "type": "string",
                "description_kind": "plain",
                "computed": true
              },
              "employee_number": {
                "type": "string",
                "description_kind": "plain",
                "computed": true
              },
              "first_name": {
                "type": "string",
                "description_kind": "plain",
                "computed": true
              },
              "group_memberships": {
                "type": [
                  "set",
                  "string"
                ],
                "description_kind": "plain",
                "computed": true
              },
              "honorific_prefix": {
                "type": "string",
                "description_kind": "plain",
                "computed": true
              },
              "honorific_suffix": {
                "type": "string",
                "description_kind": "plain",
                "computed": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "last_name": {
                "type": "string",
                "description_kind": "plain",
                "computed": true
              },
              "locale": {
                "type": "string",
                "description_kind": "plain",
                "computed": true
              },
              "login": {
                "type": "string",
                "description_kind": "plain",
                "computed": true
              },
              "manager": {
                "type": "string",
                "description_kind": "plain",
                "computed": true
              },
              "manager_id": {
                "type": "string",
                "description_kind": "plain",
                "computed": true
              },
              "middle_name": {
                "type": "string",
                "description_kind": "plain",
                "computed": true
              },
              "mobile_phone": {
                "type": "string",
                "description_kind": "plain",
                "computed": true
              },
              "nick_name": {
                "type": "string",
                "description_kind": "plain",
                "computed": true
              },
              "organization": {
                "type": "string",
                "description_kind": "plain",
                "computed": true
              },
              "postal_address": {
                "type": "string",
                "description_kind": "plain",
                "computed": true
              },
              "preferred_language": {
                "type": "string",
                "description_kind": "plain",
                "computed": true
              },
              "primary_phone": {
                "type": "string",
                "description_kind": "plain",
                "computed": true
              },
              "profile_url": {
                "type": "string",
                "description_kind": "plain",
                "computed": true
              },
              "roles": {
                "type": [
                  "set",
                  "string"
                ],
                "description_kind": "plain",
                "computed": true
              },
              "second_email": {
                "type": "string",
                "description_kind": "plain",
                "computed": true
              },
              "skip_groups": {
                "type": "bool",
                "description": "Do not populate user groups information (prevents additional API call)",
                "description_kind": "plain",
                "optional": true
              },
              "skip_roles": {
                "type": "bool",
                "description": "Do not populate user roles information (prevents additional API call)",
                "description_kind": "plain",
                "optional": true
              },
              "state": {
                "type": "string",
                "description_kind": "plain",
                "computed": true
              },
              "status": {
                "type": "string",
                "description_kind": "plain",
                "computed": true
              },
              "street_address": {
                "type": "string",
                "description_kind": "plain",
                "computed": true
              },
              "timezone": {
                "type": "string",
                "description_kind": "plain",
                "computed": true
              },
              "title": {
                "type": "string",
                "description_kind": "plain",
                "computed": true
              },
              "user_id": {
                "type": "string",
                "description": "Retrieve a single user based on their id",
                "description_kind": "plain",
                "optional": true
              },
              "user_type": {
                "type": "string",
                "description_kind": "plain",
                "computed": true
              },
              "zip_code": {
                "type": "string",
                "description_kind": "plain",
                "computed": true
              }
            },
            "block_types": {
              "search": {
                "nesting_mode": "set",
                "block": {
                  "attributes": {
                    "comparison": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "expression": {
                      "type": "string",
                      "description": "A raw search expression string. This requires the search feature be on. Please see Okta documentation on their filter API for users. https://developer.okta.com/docs/api/resources/users#list-users-with-search",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "name": {
                      "type": "string",
                      "description": "Property name to search for. This requires the search feature be on. Please see Okta documentation on their filter API for users. https://developer.okta.com/docs/api/resources/users#list-users-with-search",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "value": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true
                    }
                  },
                  "description": "Filter to find user/users. Each filter will be concatenated with the compound search operator. Please be aware profile properties must match what is in Okta, which is likely camel case. Expression is a free form expression filter https://developer.okta.com/docs/reference/core-okta-api/#filter . The set name/value/comparison properties will be ignored if expression is present",
                  "description_kind": "plain"
                }
              }
            },
            "description": "Get a single users from Okta.",
            "description_kind": "plain"
          }
        },
        "okta_user_profile_mapping_source": {
          "version": 0,
          "block": {
            "attributes": {
              "id": {
                "type": "string",
                "description": "ID of the source",
                "description_kind": "plain",
                "computed": true
              },
              "name": {
                "type": "string",
                "description": "Name of source.",
                "description_kind": "plain",
                "computed": true
              },
              "type": {
                "type": "string",
                "description": "Type of source.",
                "description_kind": "plain",
                "computed": true
              }
            },
            "description": "Get the base user Profile Mapping source or target from Okta.",
            "description_kind": "plain"
          }
        },
        "okta_user_security_questions": {
          "version": 0,
          "block": {
            "attributes": {
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "questions": {
                "type": [
                  "list",
                  [
                    "object",
                    {
                      "key": "string",
                      "text": "string"
                    }
                  ]
                ],
                "description_kind": "plain",
                "computed": true
              },
              "user_id": {
                "type": "string",
                "description": "ID of a Okta User",
                "description_kind": "plain",
                "required": true
              }
            },
            "description_kind": "plain"
          }
        },
        "okta_user_type": {
          "version": 0,
          "block": {
            "attributes": {
              "description": {
                "type": "string",
                "description": "Description of user type.",
                "description_kind": "plain",
                "computed": true
              },
              "display_name": {
                "type": "string",
                "description": "Display name of user type.",
                "description_kind": "plain",
                "computed": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "description": "Name of user type to retrieve.",
                "description_kind": "plain",
                "required": true
              }
            },
            "description": "Get a user type from Okta.",
            "description_kind": "plain"
          }
        },
        "okta_users": {
          "version": 0,
          "block": {
            "attributes": {
              "compound_search_operator": {
                "type": "string",
                "description": "Search operator used when joining mulitple search clauses",
                "description_kind": "plain",
                "optional": true
              },
              "delay_read_seconds": {
                "type": "string",
                "description": "Force delay of the users read by N seconds. Useful when eventual consistency of users information needs to be allowed for.",
                "description_kind": "plain",
                "optional": true
              },
              "group_id": {
                "type": "string",
                "description": "Find users based on group membership using the id of the group.",
                "description_kind": "plain",
                "optional": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "include_groups": {
                "type": "bool",
                "description": "Fetch group memberships for each user",
                "description_kind": "plain",
                "optional": true
              },
              "include_roles": {
                "type": "bool",
                "description": "Fetch user roles for each user",
                "description_kind": "plain",
                "optional": true
              },
              "users": {
                "type": [
                  "list",
                  [
                    "object",
                    {
                      "admin_roles": [
                        "set",
                        "string"
                      ],
                      "city": "string",
                      "cost_center": "string",
                      "country_code": "string",
                      "custom_profile_attributes": "string",
                      "department": "string",
                      "display_name": "string",
                      "division": "string",
                      "email": "string",
                      "employee_number": "string",
                      "first_name": "string",
                      "group_memberships": [
                        "set",
                        "string"
                      ],
                      "honorific_prefix": "string",
                      "honorific_suffix": "string",
                      "id": "string",
                      "last_name": "string",
                      "locale": "string",
                      "login": "string",
                      "manager": "string",
                      "manager_id": "string",
                      "middle_name": "string",
                      "mobile_phone": "string",
                      "nick_name": "string",
                      "organization": "string",
                      "postal_address": "string",
                      "preferred_language": "string",
                      "primary_phone": "string",
                      "profile_url": "string",
                      "roles": [
                        "set",
                        "string"
                      ],
                      "second_email": "string",
                      "state": "string",
                      "status": "string",
                      "street_address": "string",
                      "timezone": "string",
                      "title": "string",
                      "user_type": "string",
                      "zip_code": "string"
                    }
                  ]
                ],
                "description": "collection of users retrieved from Okta.",
                "description_kind": "plain",
                "computed": true
              }
            },
            "block_types": {
              "search": {
                "nesting_mode": "set",
                "block": {
                  "attributes": {
                    "comparison": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "expression": {
                      "type": "string",
                      "description": "A raw search expression string. This requires the search feature be on. Please see Okta documentation on their filter API for users. https://developer.okta.com/docs/api/resources/users#list-users-with-search",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "name": {
                      "type": "string",
                      "description": "Property name to search for. This requires the search feature be on. Please see Okta documentation on their filter API for users. https://developer.okta.com/docs/api/resources/users#list-users-with-search",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "value": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true
                    }
                  },
                  "description": "Filter to find user/users. Each filter will be concatenated with the compound search operator. Please be aware profile properties must match what is in Okta, which is likely camel case. Expression is a free form expression filter https://developer.okta.com/docs/reference/core-okta-api/#filter . The set name/value/comparison properties will be ignored if expression is present",
                  "description_kind": "plain"
                }
              }
            },
            "description": "Get a list of users from Okta.",
            "description_kind": "plain"
          }
        }
      }
    }
  }
}
