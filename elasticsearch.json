{
  "format_version": "1.0",
  "provider_schemas": {
    "registry.terraform.io/phillbaker/elasticsearch": {
      "provider": {
        "version": 0,
        "block": {
          "attributes": {
            "aws_access_key": {
              "type": "string",
              "description": "The access key for use with AWS Elasticsearch Service domains",
              "description_kind": "plain",
              "optional": true
            },
            "aws_assume_role_arn": {
              "type": "string",
              "description": "Amazon Resource Name of an IAM Role to assume prior to making AWS API calls.",
              "description_kind": "plain",
              "optional": true
            },
            "aws_profile": {
              "type": "string",
              "description": "The AWS profile for use with AWS Elasticsearch Service domains",
              "description_kind": "plain",
              "optional": true
            },
            "aws_region": {
              "type": "string",
              "description": "The AWS region for use in signing of AWS elasticsearch requests. Must be specified in order to use AWS URL signing with AWS ElasticSearch endpoint exposed on a custom DNS domain.",
              "description_kind": "plain",
              "optional": true
            },
            "aws_secret_key": {
              "type": "string",
              "description": "The secret key for use with AWS Elasticsearch Service domains",
              "description_kind": "plain",
              "optional": true
            },
            "aws_signature_service": {
              "type": "string",
              "description": "AWS service name used in the credential scope of signed requests to ElasticSearch.",
              "description_kind": "plain",
              "optional": true
            },
            "aws_token": {
              "type": "string",
              "description": "The session token for use with AWS Elasticsearch Service domains",
              "description_kind": "plain",
              "optional": true
            },
            "cacert_file": {
              "type": "string",
              "description": "A Custom CA certificate",
              "description_kind": "plain",
              "optional": true
            },
            "client_cert_path": {
              "type": "string",
              "description": "A X509 certificate to connect to elasticsearch",
              "description_kind": "plain",
              "optional": true
            },
            "client_key_path": {
              "type": "string",
              "description": "A X509 key to connect to elasticsearch",
              "description_kind": "plain",
              "optional": true
            },
            "elasticsearch_version": {
              "type": "string",
              "description": "ElasticSearch Version",
              "description_kind": "plain",
              "optional": true
            },
            "healthcheck": {
              "type": "bool",
              "description": "Set the client healthcheck option for the elastic client. Healthchecking is designed for direct access to the cluster.",
              "description_kind": "plain",
              "optional": true
            },
            "host_override": {
              "type": "string",
              "description": "If provided, sets the 'Host' header of requests and the 'ServerName' for certificate validation to this value. See the documentation on connecting to Elasticsearch via an SSH tunnel.",
              "description_kind": "plain",
              "optional": true
            },
            "insecure": {
              "type": "bool",
              "description": "Disable SSL verification of API calls",
              "description_kind": "plain",
              "optional": true
            },
            "kibana_url": {
              "type": "string",
              "description": "URL to reach the Kibana API",
              "description_kind": "plain",
              "optional": true
            },
            "password": {
              "type": "string",
              "description": "Password to use to connect to elasticsearch using basic auth",
              "description_kind": "plain",
              "optional": true
            },
            "sign_aws_requests": {
              "type": "bool",
              "description": "Enable signing of AWS elasticsearch requests. The `url` must refer to AWS ES domain (`*.<region>.es.amazonaws.com`), or `aws_region` must be specified explicitly.",
              "description_kind": "plain",
              "optional": true
            },
            "sniff": {
              "type": "bool",
              "description": "Set the node sniffing option for the elastic client. Client won't work with sniffing if nodes are not routable.",
              "description_kind": "plain",
              "optional": true
            },
            "token": {
              "type": "string",
              "description": "A bearer token or ApiKey for an Authorization header, e.g. Active Directory API key.",
              "description_kind": "plain",
              "optional": true
            },
            "token_name": {
              "type": "string",
              "description": "The type of token, usually ApiKey or Bearer",
              "description_kind": "plain",
              "optional": true
            },
            "url": {
              "type": "string",
              "description": "Elasticsearch URL",
              "description_kind": "plain",
              "required": true
            },
            "username": {
              "type": "string",
              "description": "Username to use to connect to elasticsearch using basic auth",
              "description_kind": "plain",
              "optional": true
            },
            "version_ping_timeout": {
              "type": "number",
              "description": "Version ping timeout in seconds",
              "description_kind": "plain",
              "optional": true
            }
          },
          "description_kind": "plain"
        }
      },
      "resource_schemas": {
        "elasticsearch_cluster_settings": {
          "version": 0,
          "block": {
            "attributes": {
              "action_auto_create_index": {
                "type": "string",
                "description": "Whether to automatically create an index if it doesnâ€™t already exist and apply any configured index template",
                "description_kind": "plain",
                "optional": true
              },
              "action_destructive_requires_name": {
                "type": "bool",
                "description": "When set to true, you must specify the index name to delete an index and it is not possible to delete all indices with _all or use wildcards",
                "description_kind": "plain",
                "optional": true
              },
              "cluster_blocks_read_only": {
                "type": "bool",
                "description": "Make the whole cluster read only and metadata is not allowed to be modified",
                "description_kind": "plain",
                "optional": true
              },
              "cluster_blocks_read_only_allow_delete": {
                "type": "bool",
                "description": "Make the whole cluster read only, but allows to delete indices to free up resources",
                "description_kind": "plain",
                "optional": true
              },
              "cluster_indices_close_enable": {
                "type": "bool",
                "description": "If false, you cannot close open indices",
                "description_kind": "plain",
                "optional": true
              },
              "cluster_info_update_interval": {
                "type": "string",
                "description": "A time string controlling how often Elasticsearch should check on disk usage for each node in the cluster",
                "description_kind": "plain",
                "optional": true
              },
              "cluster_max_shards_per_node": {
                "type": "number",
                "description": "The total number of primary and replica shards for the cluster, this number is multiplied by the number of non-frozen data nodes; shards for closed indices do not count toward this limit",
                "description_kind": "plain",
                "optional": true
              },
              "cluster_max_shards_per_node_frozen": {
                "type": "number",
                "description": "The total number of primary and replica frozen shards, for the cluster; Ssards for closed indices do not count toward this limit, a cluster with no frozen data nodes is unlimited.",
                "description_kind": "plain",
                "optional": true
              },
              "cluster_no_master_block": {
                "type": "string",
                "description": "Specifies which operations are rejected when there is no active master in a cluster (all, write)",
                "description_kind": "plain",
                "optional": true
              },
              "cluster_persistent_tasks_allocation_enable": {
                "type": "string",
                "description": "Whether allocation for persistent tasks is active (all, none)",
                "description_kind": "plain",
                "optional": true
              },
              "cluster_persistent_tasks_allocation_recheck_interval": {
                "type": "string",
                "description": "A time string controling how often assignment checks are performed to react to whether persistent tasks can be assigned to nodes",
                "description_kind": "plain",
                "optional": true
              },
              "cluster_routing_allocation_allow_rebalance": {
                "type": "string",
                "description": "Specify when shard rebalancing is allowed (always, indices_primaries_active, indices_all_active)",
                "description_kind": "plain",
                "optional": true
              },
              "cluster_routing_allocation_awareness_attributes": {
                "type": "string",
                "description": "Use custom node attributes to take hardware configuration into account when allocating shards",
                "description_kind": "plain",
                "optional": true
              },
              "cluster_routing_allocation_balance_index": {
                "type": "number",
                "description": "Weight factor for the number of shards per index allocated on a node, increasing this raises the tendency to equalize the number of shards per index across all nodes",
                "description_kind": "plain",
                "optional": true
              },
              "cluster_routing_allocation_balance_shard": {
                "type": "number",
                "description": "Weight factor for the total number of shards allocated on a node, increasing this raises the tendency to equalize the number of shards across all nodes",
                "description_kind": "plain",
                "optional": true
              },
              "cluster_routing_allocation_balance_threshold": {
                "type": "number",
                "description": "Minimal optimization value of operations that should be performed, raising this will cause the cluster to be less aggressive about optimizing the shard balance",
                "description_kind": "plain",
                "optional": true
              },
              "cluster_routing_allocation_cluster_concurrent_rebalance": {
                "type": "number",
                "description": "How many concurrent shard rebalances are allowed cluster wide",
                "description_kind": "plain",
                "optional": true
              },
              "cluster_routing_allocation_disk_include_relocations": {
                "type": "bool",
                "description": "Whether the allocator will take into account shards that are currently being relocated to the target node when computing a nodeâ€™s disk usage",
                "description_kind": "plain",
                "optional": true
              },
              "cluster_routing_allocation_disk_threshold_enabled": {
                "type": "bool",
                "description": "Whether the disk allocation decider is active",
                "description_kind": "plain",
                "optional": true
              },
              "cluster_routing_allocation_disk_watermark_high": {
                "type": "string",
                "description": "Allocator will attempt to relocate shards away from a node whose disk usage is above this percentage disk used",
                "description_kind": "plain",
                "optional": true
              },
              "cluster_routing_allocation_disk_watermark_low": {
                "type": "string",
                "description": "Allocator will not allocate shards to nodes that have more than this percentage disk used",
                "description_kind": "plain",
                "optional": true
              },
              "cluster_routing_allocation_enable": {
                "type": "string",
                "description": "Enable or disable allocation for specific kinds of shards (all, primaries, new_primaries, none)",
                "description_kind": "plain",
                "optional": true
              },
              "cluster_routing_allocation_node_concurrent_incoming_recoveries": {
                "type": "number",
                "description": "How many incoming recoveries where the target shard (likely the replica unless a shard is relocating) are allocated on the node",
                "description_kind": "plain",
                "optional": true
              },
              "cluster_routing_allocation_node_concurrent_outgoing_recoveries": {
                "type": "number",
                "description": "How many outgoing recoveries where the source shard (likely the primary unless a shard is relocating) are allocated on the node",
                "description_kind": "plain",
                "optional": true
              },
              "cluster_routing_allocation_node_concurrent_recoveries": {
                "type": "number",
                "description": "A shortcut to set both incoming and outgoing recoveries",
                "description_kind": "plain",
                "optional": true
              },
              "cluster_routing_allocation_node_initial_primaries_recoveries": {
                "type": "number",
                "description": "Set a (usually) higher rate for primary recovery on node restart (usually from disk, so fast)",
                "description_kind": "plain",
                "optional": true
              },
              "cluster_routing_allocation_same_shard_host": {
                "type": "bool",
                "description": "Perform a check to prevent allocation of multiple instances of the same shard on a single host, if multiple nodes are started on the host",
                "description_kind": "plain",
                "optional": true
              },
              "cluster_routing_allocation_total_shards_per_node": {
                "type": "number",
                "description": "Maximum number of primary and replica shards allocated to each node",
                "description_kind": "plain",
                "optional": true
              },
              "cluster_routing_rebalance_enable": {
                "type": "string",
                "description": "Allow rebalancing for specific kinds of shards (all, primaries, replicas, none)",
                "description_kind": "plain",
                "optional": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "indices_breaker_fielddata_limit": {
                "type": "string",
                "description": "The percentage of memory above which if loading a field into the field data cache would cause the cache to exceed this limit, an error is returned",
                "description_kind": "plain",
                "optional": true
              },
              "indices_breaker_fielddata_overhead": {
                "type": "number",
                "description": "A constant that all field data estimations are multiplied by",
                "description_kind": "plain",
                "optional": true
              },
              "indices_breaker_request_limit": {
                "type": "string",
                "description": "The percentabge of memory above which per-request data structures (e.g. calculating aggregations) are prevented from exceeding",
                "description_kind": "plain",
                "optional": true
              },
              "indices_breaker_request_overhead": {
                "type": "number",
                "description": "A constant that all request estimations are multiplied by",
                "description_kind": "plain",
                "optional": true
              },
              "indices_breaker_total_limit": {
                "type": "string",
                "description": "The percentage of total amount of memory that can be used across all breakers",
                "description_kind": "plain",
                "optional": true
              },
              "indices_recovery_max_bytes_per_sec": {
                "type": "string",
                "description": "Maximum total inbound and outbound recovery traffic for each node, in mb",
                "description_kind": "plain",
                "optional": true
              },
              "network_breaker_inflight_requests_limit": {
                "type": "string",
                "description": "The percentage limit of memory usage on a node of all currently active incoming requests on transport or HTTP level",
                "description_kind": "plain",
                "optional": true
              },
              "network_breaker_inflight_requests_overhead": {
                "type": "number",
                "description": "A constant that all in flight requests estimations are multiplied by",
                "description_kind": "plain",
                "optional": true
              },
              "script_max_compilations_rate": {
                "type": "string",
                "description": "Limit for the number of unique dynamic scripts within a certain interval that are allowed to be compiled, expressed as compilations divided by a time string",
                "description_kind": "plain",
                "optional": true
              },
              "search_default_search_timeout": {
                "type": "string",
                "description": "A time string setting a cluster-wide default timeout for all search requests",
                "description_kind": "plain",
                "optional": true
              }
            },
            "description": "Manages a cluster's (persistent) settings.",
            "description_kind": "plain"
          }
        },
        "elasticsearch_component_template": {
          "version": 0,
          "block": {
            "attributes": {
              "body": {
                "type": "string",
                "description": "The JSON body of the template.",
                "description_kind": "plain",
                "required": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "description": "Name of the component template to create.",
                "description_kind": "plain",
                "required": true
              }
            },
            "description": "Component templates are building blocks for constructing index templates that specify index mappings, settings, and aliases. You cannot directly apply a component template to a data stream or index. To be applied, a component template must be included in an index templateâ€™s `composed_of` list.",
            "description_kind": "plain"
          }
        },
        "elasticsearch_composable_index_template": {
          "version": 0,
          "block": {
            "attributes": {
              "body": {
                "type": "string",
                "description_kind": "plain",
                "required": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "description_kind": "plain",
                "required": true
              }
            },
            "description_kind": "plain"
          }
        },
        "elasticsearch_data_stream": {
          "version": 0,
          "block": {
            "attributes": {
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "description": "Name of the data stream to create, must have a matching ",
                "description_kind": "plain",
                "required": true
              }
            },
            "description": "A data stream lets you store append-only time series data across multiple (hidden, auto-generated) indices while giving you a single named resource for requests. See the [guide](https://www.elastic.co/guide/en/elasticsearch/reference/7.17/data-streams.html) and [API docs](https://www.elastic.co/guide/en/elasticsearch/reference/7.17/data-stream-apis.html).",
            "description_kind": "plain"
          }
        },
        "elasticsearch_index": {
          "version": 0,
          "block": {
            "attributes": {
              "aliases": {
                "type": "string",
                "description": "A JSON string describing a set of aliases. The index aliases API allows aliasing an index with a name, with all APIs automatically converting the alias name to the actual index name. An alias can also be mapped to more than one index, and when specifying it, the alias will automatically expand to the aliased indices.",
                "description_kind": "plain",
                "optional": true
              },
              "analysis_analyzer": {
                "type": "string",
                "description": "A JSON string describing the analyzers applied to the index.",
                "description_kind": "plain",
                "optional": true
              },
              "analysis_char_filter": {
                "type": "string",
                "description": "A JSON string describing the char_filters applied to the index.",
                "description_kind": "plain",
                "optional": true
              },
              "analysis_filter": {
                "type": "string",
                "description": "A JSON string describing the filters applied to the index.",
                "description_kind": "plain",
                "optional": true
              },
              "analysis_normalizer": {
                "type": "string",
                "description": "A JSON string describing the normalizers applied to the index.",
                "description_kind": "plain",
                "optional": true
              },
              "analysis_tokenizer": {
                "type": "string",
                "description": "A JSON string describing the tokenizers applied to the index.",
                "description_kind": "plain",
                "optional": true
              },
              "analyze_max_token_count": {
                "type": "string",
                "description": "The maximum number of tokens that can be produced using _analyze API. A stringified number.",
                "description_kind": "plain",
                "optional": true
              },
              "auto_expand_replicas": {
                "type": "string",
                "description": "Set the number of replicas to the node count in the cluster. Set to a dash delimited lower and upper bound (e.g. 0-5) or use all for the upper bound (e.g. 0-all)",
                "description_kind": "plain",
                "optional": true
              },
              "blocks_metadata": {
                "type": "bool",
                "description": "Set to `true` to disable index metadata reads and writes.",
                "description_kind": "plain",
                "optional": true
              },
              "blocks_read": {
                "type": "bool",
                "description": "Set to `true` to disable read operations against the index.",
                "description_kind": "plain",
                "optional": true
              },
              "blocks_read_only": {
                "type": "bool",
                "description": "Set to `true` to make the index and index metadata read only, `false` to allow writes and metadata changes.",
                "description_kind": "plain",
                "optional": true
              },
              "blocks_read_only_allow_delete": {
                "type": "bool",
                "description": "Identical to `index.blocks.read_only` but allows deleting the index to free up resources.",
                "description_kind": "plain",
                "optional": true
              },
              "blocks_write": {
                "type": "bool",
                "description": "Set to `true` to disable data write operations against the index. This setting does not affect metadata.",
                "description_kind": "plain",
                "optional": true
              },
              "codec": {
                "type": "string",
                "description": "The `default` value compresses stored data with LZ4 compression, but this can be set to `best_compression` which uses DEFLATE for a higher compression ratio. This can be set only on creation.",
                "description_kind": "plain",
                "optional": true
              },
              "default_pipeline": {
                "type": "string",
                "description": "The default ingest node pipeline for this index. Index requests will fail if the default pipeline is set and the pipeline does not exist.",
                "description_kind": "plain",
                "optional": true
              },
              "force_destroy": {
                "type": "bool",
                "description": "A boolean that indicates that the index should be deleted even if it contains documents.",
                "description_kind": "plain",
                "optional": true
              },
              "gc_deletes": {
                "type": "string",
                "description": "The length of time that a deleted document's version number remains available for further versioned operations.",
                "description_kind": "plain",
                "optional": true
              },
              "highlight_max_analyzed_offset": {
                "type": "string",
                "description": "The maximum number of characters that will be analyzed for a highlight request. A stringified number.",
                "description_kind": "plain",
                "optional": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "include_type_name": {
                "type": "string",
                "description": "A string that indicates if and what we should pass to include_type_name parameter. Set to `\"false\"` when trying to create an index on a v6 cluster without a doc type or set to `\"true\"` when trying to create an index on a v7 cluster with a doc type. Since mapping updates are not currently supported, this applies only on index create.",
                "description_kind": "plain",
                "optional": true
              },
              "index_similarity_default": {
                "type": "string",
                "description": "A JSON string describing the default index similarity config.",
                "description_kind": "plain",
                "optional": true
              },
              "indexing_slowlog_level": {
                "type": "string",
                "description": "Set which logging level to use for the search slow log, can be: `warn`, `info`, `debug`, `trace`",
                "description_kind": "plain",
                "optional": true
              },
              "indexing_slowlog_source": {
                "type": "string",
                "description": "Set the number of characters of the `_source` to include in the slowlog lines, `false` or `0` will skip logging the source entirely and setting it to `true` will log the entire source regardless of size. The original `_source` is reformatted by default to make sure that it fits on a single log line.",
                "description_kind": "plain",
                "optional": true
              },
              "indexing_slowlog_threshold_index_debug": {
                "type": "string",
                "description": "Set the cutoff for shard level slow search logging of slow searches for indexing queries, in time units, e.g. `2s`",
                "description_kind": "plain",
                "optional": true
              },
              "indexing_slowlog_threshold_index_info": {
                "type": "string",
                "description": "Set the cutoff for shard level slow search logging of slow searches for indexing queries, in time units, e.g. `5s`",
                "description_kind": "plain",
                "optional": true
              },
              "indexing_slowlog_threshold_index_trace": {
                "type": "string",
                "description": "Set the cutoff for shard level slow search logging of slow searches for indexing queries, in time units, e.g. `500ms`",
                "description_kind": "plain",
                "optional": true
              },
              "indexing_slowlog_threshold_index_warn": {
                "type": "string",
                "description": "Set the cutoff for shard level slow search logging of slow searches for indexing queries, in time units, e.g. `10s`",
                "description_kind": "plain",
                "optional": true
              },
              "load_fixed_bitset_filters_eagerly": {
                "type": "bool",
                "description": "Indicates whether cached filters are pre-loaded for nested queries. This can be set only on creation.",
                "description_kind": "plain",
                "optional": true
              },
              "mappings": {
                "type": "string",
                "description": "A JSON string defining how documents in the index, and the fields they contain, are stored and indexed. To avoid the complexities of field mapping updates, updates of this field are not allowed via this provider. See the upstream [Elasticsearch docs](https://www.elastic.co/guide/en/elasticsearch/reference/6.8/indices-put-mapping.html#updating-field-mappings) for more details.",
                "description_kind": "plain",
                "optional": true
              },
              "max_docvalue_fields_search": {
                "type": "string",
                "description": "The maximum number of `docvalue_fields` that are allowed in a query. A stringified number.",
                "description_kind": "plain",
                "optional": true
              },
              "max_inner_result_window": {
                "type": "string",
                "description": "The maximum value of `from + size` for inner hits definition and top hits aggregations to this index. A stringified number.",
                "description_kind": "plain",
                "optional": true
              },
              "max_ngram_diff": {
                "type": "string",
                "description": "The maximum allowed difference between min_gram and max_gram for NGramTokenizer and NGramTokenFilter. A stringified number.",
                "description_kind": "plain",
                "optional": true
              },
              "max_refresh_listeners": {
                "type": "string",
                "description": "Maximum number of refresh listeners available on each shard of the index. A stringified number.",
                "description_kind": "plain",
                "optional": true
              },
              "max_regex_length": {
                "type": "string",
                "description": "The maximum length of regex that can be used in Regexp Query. A stringified number.",
                "description_kind": "plain",
                "optional": true
              },
              "max_rescore_window": {
                "type": "string",
                "description": "The maximum value of `window_size` for `rescore` requests in searches of this index. A stringified number.",
                "description_kind": "plain",
                "optional": true
              },
              "max_result_window": {
                "type": "string",
                "description": "The maximum value of `from + size` for searches to this index. A stringified number.",
                "description_kind": "plain",
                "optional": true
              },
              "max_script_fields": {
                "type": "string",
                "description": "The maximum number of `script_fields` that are allowed in a query. A stringified number.",
                "description_kind": "plain",
                "optional": true
              },
              "max_shingle_diff": {
                "type": "string",
                "description": "The maximum allowed difference between max_shingle_size and min_shingle_size for ShingleTokenFilter. A stringified number.",
                "description_kind": "plain",
                "optional": true
              },
              "max_terms_count": {
                "type": "string",
                "description": "The maximum number of terms that can be used in Terms Query. A stringified number.",
                "description_kind": "plain",
                "optional": true
              },
              "name": {
                "type": "string",
                "description": "Name of the index to create",
                "description_kind": "plain",
                "required": true
              },
              "number_of_replicas": {
                "type": "string",
                "description": "Number of shard replicas. A stringified number.",
                "description_kind": "plain",
                "optional": true
              },
              "number_of_routing_shards": {
                "type": "string",
                "description": "Value used with number_of_shards to route documents to a primary shard. A stringified number. This can be set only on creation.",
                "description_kind": "plain",
                "optional": true
              },
              "number_of_shards": {
                "type": "string",
                "description": "Number of shards for the index. This can be set only on creation.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "refresh_interval": {
                "type": "string",
                "description": "How often to perform a refresh operation, which makes recent changes to the index visible to search. Can be set to `-1` to disable refresh.",
                "description_kind": "plain",
                "optional": true
              },
              "rollover_alias": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "routing_allocation_enable": {
                "type": "string",
                "description": "Controls shard allocation for this index. It can be set to: `all` , `primaries` , `new_primaries` , `none`.",
                "description_kind": "plain",
                "optional": true
              },
              "routing_partition_size": {
                "type": "string",
                "description": "The number of shards a custom routing value can go to. A stringified number. This can be set only on creation.",
                "description_kind": "plain",
                "optional": true
              },
              "routing_rebalance_enable": {
                "type": "string",
                "description": "Enables shard rebalancing for this index. It can be set to: `all`, `primaries` , `replicas` , `none`.",
                "description_kind": "plain",
                "optional": true
              },
              "search_idle_after": {
                "type": "string",
                "description": "How long a shard can not receive a search or get request until itâ€™s considered search idle.",
                "description_kind": "plain",
                "optional": true
              },
              "search_slowlog_level": {
                "type": "string",
                "description": "Set which logging level to use for the search slow log, can be: `warn`, `info`, `debug`, `trace`",
                "description_kind": "plain",
                "optional": true
              },
              "search_slowlog_threshold_fetch_debug": {
                "type": "string",
                "description": "Set the cutoff for shard level slow search logging of slow searches in the fetch phase, in time units, e.g. `2s`",
                "description_kind": "plain",
                "optional": true
              },
              "search_slowlog_threshold_fetch_info": {
                "type": "string",
                "description": "Set the cutoff for shard level slow search logging of slow searches in the fetch phase, in time units, e.g. `5s`",
                "description_kind": "plain",
                "optional": true
              },
              "search_slowlog_threshold_fetch_trace": {
                "type": "string",
                "description": "Set the cutoff for shard level slow search logging of slow searches in the fetch phase, in time units, e.g. `500ms`",
                "description_kind": "plain",
                "optional": true
              },
              "search_slowlog_threshold_fetch_warn": {
                "type": "string",
                "description": "Set the cutoff for shard level slow search logging of slow searches in the fetch phase, in time units, e.g. `10s`",
                "description_kind": "plain",
                "optional": true
              },
              "search_slowlog_threshold_query_debug": {
                "type": "string",
                "description": "Set the cutoff for shard level slow search logging of slow searches in the query phase, in time units, e.g. `2s`",
                "description_kind": "plain",
                "optional": true
              },
              "search_slowlog_threshold_query_info": {
                "type": "string",
                "description": "Set the cutoff for shard level slow search logging of slow searches in the query phase, in time units, e.g. `5s`",
                "description_kind": "plain",
                "optional": true
              },
              "search_slowlog_threshold_query_trace": {
                "type": "string",
                "description": "Set the cutoff for shard level slow search logging of slow searches in the query phase, in time units, e.g. `500ms`",
                "description_kind": "plain",
                "optional": true
              },
              "search_slowlog_threshold_query_warn": {
                "type": "string",
                "description": "Set the cutoff for shard level slow search logging of slow searches in the query phase, in time units, e.g. `10s`",
                "description_kind": "plain",
                "optional": true
              },
              "shard_check_on_startup": {
                "type": "string",
                "description": "Whether or not shards should be checked for corruption before opening. When corruption is detected, it will prevent the shard from being opened. Accepts `false`, `true`, `checksum`.",
                "description_kind": "plain",
                "optional": true
              },
              "sort_field": {
                "type": "string",
                "description": "The field to sort shards in this index by.",
                "description_kind": "plain",
                "optional": true
              },
              "sort_order": {
                "type": "string",
                "description": "The direction to sort shards in. Accepts `asc`, `desc`.",
                "description_kind": "plain",
                "optional": true
              }
            },
            "description": "Provides an Elasticsearch index resource.",
            "description_kind": "plain"
          }
        },
        "elasticsearch_index_template": {
          "version": 0,
          "block": {
            "attributes": {
              "body": {
                "type": "string",
                "description_kind": "plain",
                "required": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "description_kind": "plain",
                "required": true
              }
            },
            "description_kind": "plain"
          }
        },
        "elasticsearch_ingest_pipeline": {
          "version": 0,
          "block": {
            "attributes": {
              "body": {
                "type": "string",
                "description_kind": "plain",
                "required": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "description_kind": "plain",
                "required": true
              }
            },
            "description_kind": "plain"
          }
        },
        "elasticsearch_kibana_alert": {
          "version": 0,
          "block": {
            "attributes": {
              "alert_type_id": {
                "type": "string",
                "description": "The ID of the alert type that you want to call when the alert is scheduled to run, defaults to `.index-threshold`.",
                "description_kind": "plain",
                "optional": true
              },
              "consumer": {
                "type": "string",
                "description": "The name of the application that owns the alert. This name has to match the Kibana Feature name, as that dictates the required RBAC privileges. Defaults to `alerts`.",
                "description_kind": "plain",
                "optional": true
              },
              "enabled": {
                "type": "bool",
                "description": "Whether the alert is scheduled for evaluation.",
                "description_kind": "plain",
                "optional": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "description": "The name of the alert, does not have to be unique, used to identify and find an alert.",
                "description_kind": "plain",
                "required": true
              },
              "notify_when": {
                "type": "string",
                "description": "The condition for throttling the notification: `onActionGroupChange`, `onActiveAlert`, or `onThrottleInterval`. Only available in Kibana >= 7.11",
                "description_kind": "plain",
                "optional": true
              },
              "params_json": {
                "type": "string",
                "description": "JSON body of alert `params`. Either `params_json` or `conditions` must be specified.",
                "description_kind": "plain",
                "optional": true
              },
              "tags": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "A list of tag names, they appear in the alert listing in the UI which is searchable by tag.",
                "description_kind": "plain",
                "optional": true
              },
              "throttle": {
                "type": "string",
                "description": "How often this alert should fire the same action, this reduces repeated notifications.",
                "description_kind": "plain",
                "optional": true
              }
            },
            "block_types": {
              "actions": {
                "nesting_mode": "set",
                "block": {
                  "attributes": {
                    "action_type_id": {
                      "type": "string",
                      "description": "The type of the action, e.g. `.index`, `.webhook`, etc.",
                      "description_kind": "plain",
                      "required": true
                    },
                    "group": {
                      "type": "string",
                      "description": "When to execute the action, e.g. `threshold met` or `recovered`.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "id": {
                      "type": "string",
                      "description": "The identifier of the saved action object, a UUID.",
                      "description_kind": "plain",
                      "required": true
                    },
                    "params": {
                      "type": [
                        "map",
                        "string"
                      ],
                      "description": "Key value pairs passed to the action executor, e.g. a Mustache formatted `message`.",
                      "description_kind": "plain",
                      "optional": true
                    }
                  },
                  "description": "Actions are invocations of Kibana services or integrations with third-party systems, that run as background tasks on the Kibana server when alert conditions are met.",
                  "description_kind": "plain"
                }
              },
              "conditions": {
                "nesting_mode": "set",
                "block": {
                  "attributes": {
                    "aggregation_field": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "aggregation_type": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "group_by": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "index": {
                      "type": [
                        "set",
                        "string"
                      ],
                      "description_kind": "plain",
                      "required": true
                    },
                    "term_field": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "term_size": {
                      "type": "number",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "threshold": {
                      "type": [
                        "set",
                        "number"
                      ],
                      "description_kind": "plain",
                      "required": true
                    },
                    "threshold_comparator": {
                      "type": "string",
                      "description_kind": "plain",
                      "required": true
                    },
                    "time_field": {
                      "type": "string",
                      "description_kind": "plain",
                      "required": true
                    },
                    "time_window_size": {
                      "type": "number",
                      "description_kind": "plain",
                      "required": true
                    },
                    "time_window_unit": {
                      "type": "string",
                      "description_kind": "plain",
                      "required": true
                    }
                  },
                  "description": "The conditions under which the alert is active, they create an expression to be evaluated by the alert type executor. These parameters are passed to the executor `params`. There may be specific attributes for different alert types. Either `params_json` or `conditions` must be specified.",
                  "description_kind": "plain"
                },
                "max_items": 1
              },
              "schedule": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "interval": {
                      "type": "string",
                      "description": "Specifies the interval in seconds, minutes, hours or days at which the alert should execute, e.g. 10s, 5m, 1h.",
                      "description_kind": "plain",
                      "required": true
                    }
                  },
                  "description": "How frequently the alert conditions are checked. Note that the timing of evaluating alerts is not guaranteed, particularly for intervals of less than 10 seconds",
                  "description_kind": "plain"
                },
                "max_items": 1
              }
            },
            "description": "Alerts allow you to define rules to detect conditions and trigger actions when those conditions are met. Alerts work by running checks on a schedule to detect conditions. When a condition is met, the alert tracks it as an alert instance and responds by triggering one or more actions. Actions typically involve interaction with Kibana services or third party integrations. For more see the [docs](https://www.elastic.co/guide/en/kibana/current/alerting-getting-started.html).",
            "description_kind": "plain"
          }
        },
        "elasticsearch_kibana_object": {
          "version": 0,
          "block": {
            "attributes": {
              "body": {
                "type": "string",
                "description_kind": "plain",
                "required": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "index": {
                "type": "string",
                "description_kind": "plain",
                "optional": true
              }
            },
            "description_kind": "plain"
          }
        },
        "elasticsearch_opendistro_destination": {
          "version": 0,
          "block": {
            "attributes": {
              "body": {
                "type": "string",
                "description": "The JSON body of the destination.",
                "description_kind": "plain",
                "required": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              }
            },
            "description": "Provides an Elasticsearch OpenDistro destination, a reusable communication channel for an action, such as email, Slack, or a webhook URL. Please refer to the OpenDistro [destination documentation](https://opendistro.github.io/for-elasticsearch-docs/docs/alerting/monitors/#create-destinations) for details.",
            "description_kind": "plain",
            "deprecated": true
          }
        },
        "elasticsearch_opendistro_ism_policy": {
          "version": 0,
          "block": {
            "attributes": {
              "body": {
                "type": "string",
                "description_kind": "plain",
                "required": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "policy_id": {
                "type": "string",
                "description_kind": "plain",
                "required": true
              },
              "primary_term": {
                "type": "number",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "seq_no": {
                "type": "number",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              }
            },
            "description_kind": "plain",
            "deprecated": true
          }
        },
        "elasticsearch_opendistro_ism_policy_mapping": {
          "version": 0,
          "block": {
            "attributes": {
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "include": {
                "type": [
                  "set",
                  [
                    "map",
                    "string"
                  ]
                ],
                "description": "When updating multiple indices, you might want to include a state filter to only affect certain managed indices. The background process only applies the change if the index is currently in the state specified.",
                "description_kind": "plain",
                "optional": true
              },
              "indexes": {
                "type": "string",
                "description": "Name of the index to apply the policy to. You can use an index pattern to update multiple indices at once.",
                "description_kind": "plain",
                "required": true
              },
              "is_safe": {
                "type": "bool",
                "description_kind": "plain",
                "optional": true
              },
              "managed_indexes": {
                "type": [
                  "set",
                  "string"
                ],
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "policy_id": {
                "type": "string",
                "description": "The name of the policy.",
                "description_kind": "plain",
                "required": true
              },
              "state": {
                "type": "string",
                "description": "After a change in policy takes place, specify the state for the index to transition to",
                "description_kind": "plain",
                "optional": true
              }
            },
            "block_types": {
              "timeouts": {
                "nesting_mode": "single",
                "block": {
                  "attributes": {
                    "create": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "update": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true
                    }
                  },
                  "description_kind": "plain"
                }
              }
            },
            "description": "Provides an Elasticsearch Open Distro Index State Management (ISM) policy. Please refer to the Open Distro [ISM documentation](https://opendistro.github.io/for-elasticsearch-docs/docs/ism/) for details.",
            "description_kind": "plain",
            "deprecated": true
          }
        },
        "elasticsearch_opendistro_kibana_tenant": {
          "version": 0,
          "block": {
            "attributes": {
              "description": {
                "type": "string",
                "description_kind": "plain",
                "optional": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "index": {
                "type": "string",
                "description_kind": "plain",
                "computed": true
              },
              "tenant_name": {
                "type": "string",
                "description_kind": "plain",
                "required": true
              }
            },
            "description_kind": "plain",
            "deprecated": true
          }
        },
        "elasticsearch_opendistro_monitor": {
          "version": 0,
          "block": {
            "attributes": {
              "body": {
                "type": "string",
                "description_kind": "plain",
                "required": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              }
            },
            "description_kind": "plain",
            "deprecated": true
          }
        },
        "elasticsearch_opendistro_role": {
          "version": 0,
          "block": {
            "attributes": {
              "cluster_permissions": {
                "type": [
                  "set",
                  "string"
                ],
                "description_kind": "plain",
                "optional": true
              },
              "description": {
                "type": "string",
                "description_kind": "plain",
                "optional": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "role_name": {
                "type": "string",
                "description_kind": "plain",
                "required": true
              }
            },
            "block_types": {
              "index_permissions": {
                "nesting_mode": "set",
                "block": {
                  "attributes": {
                    "allowed_actions": {
                      "type": [
                        "set",
                        "string"
                      ],
                      "description_kind": "plain",
                      "optional": true
                    },
                    "document_level_security": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "field_level_security": {
                      "type": [
                        "set",
                        "string"
                      ],
                      "description_kind": "plain",
                      "optional": true
                    },
                    "index_patterns": {
                      "type": [
                        "set",
                        "string"
                      ],
                      "description_kind": "plain",
                      "optional": true
                    },
                    "masked_fields": {
                      "type": [
                        "set",
                        "string"
                      ],
                      "description_kind": "plain",
                      "optional": true
                    }
                  },
                  "description_kind": "plain"
                }
              },
              "tenant_permissions": {
                "nesting_mode": "set",
                "block": {
                  "attributes": {
                    "allowed_actions": {
                      "type": [
                        "set",
                        "string"
                      ],
                      "description_kind": "plain",
                      "optional": true
                    },
                    "tenant_patterns": {
                      "type": [
                        "set",
                        "string"
                      ],
                      "description_kind": "plain",
                      "optional": true
                    }
                  },
                  "description_kind": "plain"
                }
              }
            },
            "description_kind": "plain",
            "deprecated": true
          }
        },
        "elasticsearch_opendistro_roles_mapping": {
          "version": 0,
          "block": {
            "attributes": {
              "and_backend_roles": {
                "type": [
                  "set",
                  "string"
                ],
                "description_kind": "plain",
                "optional": true
              },
              "backend_roles": {
                "type": [
                  "set",
                  "string"
                ],
                "description_kind": "plain",
                "optional": true
              },
              "description": {
                "type": "string",
                "description_kind": "plain",
                "optional": true
              },
              "hosts": {
                "type": [
                  "set",
                  "string"
                ],
                "description_kind": "plain",
                "optional": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "role_name": {
                "type": "string",
                "description_kind": "plain",
                "required": true
              },
              "users": {
                "type": [
                  "set",
                  "string"
                ],
                "description_kind": "plain",
                "optional": true
              }
            },
            "description_kind": "plain",
            "deprecated": true
          }
        },
        "elasticsearch_opendistro_user": {
          "version": 0,
          "block": {
            "attributes": {
              "attributes": {
                "type": [
                  "map",
                  "string"
                ],
                "description_kind": "plain",
                "optional": true
              },
              "backend_roles": {
                "type": [
                  "set",
                  "string"
                ],
                "description_kind": "plain",
                "optional": true
              },
              "description": {
                "type": "string",
                "description_kind": "plain",
                "optional": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "password": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "sensitive": true
              },
              "password_hash": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "sensitive": true
              },
              "username": {
                "type": "string",
                "description_kind": "plain",
                "required": true
              }
            },
            "description_kind": "plain",
            "deprecated": true
          }
        },
        "elasticsearch_opensearch_audit_config": {
          "version": 0,
          "block": {
            "attributes": {
              "enabled": {
                "type": "bool",
                "description_kind": "plain",
                "required": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              }
            },
            "block_types": {
              "audit": {
                "nesting_mode": "set",
                "block": {
                  "attributes": {
                    "disabled_rest_categories": {
                      "type": [
                        "set",
                        "string"
                      ],
                      "description_kind": "plain",
                      "optional": true
                    },
                    "disabled_transport_categories": {
                      "type": [
                        "set",
                        "string"
                      ],
                      "description_kind": "plain",
                      "optional": true
                    },
                    "enable_rest": {
                      "type": "bool",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "enable_transport": {
                      "type": "bool",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "exclude_sensitive_headers": {
                      "type": "bool",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "ignore_requests": {
                      "type": [
                        "set",
                        "string"
                      ],
                      "description_kind": "plain",
                      "optional": true
                    },
                    "ignore_users": {
                      "type": [
                        "set",
                        "string"
                      ],
                      "description_kind": "plain",
                      "optional": true
                    },
                    "log_request_body": {
                      "type": "bool",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "resolve_bulk_requests": {
                      "type": "bool",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "resolve_indices": {
                      "type": "bool",
                      "description_kind": "plain",
                      "optional": true
                    }
                  },
                  "description_kind": "plain"
                },
                "max_items": 1
              },
              "compliance": {
                "nesting_mode": "set",
                "block": {
                  "attributes": {
                    "enabled": {
                      "type": "bool",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "external_config": {
                      "type": "bool",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "internal_config": {
                      "type": "bool",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "read_ignore_users": {
                      "type": [
                        "set",
                        "string"
                      ],
                      "description_kind": "plain",
                      "optional": true
                    },
                    "read_metadata_only": {
                      "type": "bool",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "write_ignore_users": {
                      "type": [
                        "set",
                        "string"
                      ],
                      "description_kind": "plain",
                      "optional": true
                    },
                    "write_log_diffs": {
                      "type": "bool",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "write_metadata_only": {
                      "type": "bool",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "write_watched_indices": {
                      "type": [
                        "set",
                        "string"
                      ],
                      "description_kind": "plain",
                      "optional": true
                    }
                  },
                  "block_types": {
                    "read_watched_field": {
                      "nesting_mode": "set",
                      "block": {
                        "attributes": {
                          "fields": {
                            "type": [
                              "set",
                              "string"
                            ],
                            "description_kind": "plain",
                            "required": true
                          },
                          "index": {
                            "type": "string",
                            "description_kind": "plain",
                            "required": true
                          }
                        },
                        "description_kind": "plain"
                      }
                    }
                  },
                  "description_kind": "plain"
                },
                "max_items": 1
              }
            },
            "description_kind": "plain"
          }
        },
        "elasticsearch_opensearch_destination": {
          "version": 0,
          "block": {
            "attributes": {
              "body": {
                "type": "string",
                "description": "The JSON body of the destination.",
                "description_kind": "plain",
                "required": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              }
            },
            "description": "Provides an OpenSearch destination, a reusable communication channel for an action, such as email, Slack, or a webhook URL. Please refer to the OpenDistro [destination documentation](https://opendistro.github.io/for-elasticsearch-docs/docs/alerting/monitors/#create-destinations) for details.",
            "description_kind": "plain"
          }
        },
        "elasticsearch_opensearch_ism_policy": {
          "version": 0,
          "block": {
            "attributes": {
              "body": {
                "type": "string",
                "description_kind": "plain",
                "required": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "policy_id": {
                "type": "string",
                "description_kind": "plain",
                "required": true
              },
              "primary_term": {
                "type": "number",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "seq_no": {
                "type": "number",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              }
            },
            "description_kind": "plain"
          }
        },
        "elasticsearch_opensearch_ism_policy_mapping": {
          "version": 0,
          "block": {
            "attributes": {
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "include": {
                "type": [
                  "set",
                  [
                    "map",
                    "string"
                  ]
                ],
                "description": "When updating multiple indices, you might want to include a state filter to only affect certain managed indices. The background process only applies the change if the index is currently in the state specified.",
                "description_kind": "plain",
                "optional": true
              },
              "indexes": {
                "type": "string",
                "description": "Name of the index to apply the policy to. You can use an index pattern to update multiple indices at once.",
                "description_kind": "plain",
                "required": true
              },
              "is_safe": {
                "type": "bool",
                "description_kind": "plain",
                "optional": true
              },
              "managed_indexes": {
                "type": [
                  "set",
                  "string"
                ],
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "policy_id": {
                "type": "string",
                "description": "The name of the policy.",
                "description_kind": "plain",
                "required": true
              },
              "state": {
                "type": "string",
                "description": "After a change in policy takes place, specify the state for the index to transition to",
                "description_kind": "plain",
                "optional": true
              }
            },
            "block_types": {
              "timeouts": {
                "nesting_mode": "single",
                "block": {
                  "attributes": {
                    "create": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "update": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true
                    }
                  },
                  "description_kind": "plain"
                }
              }
            },
            "description": "Provides an Elasticsearch Open Distro Index State Management (ISM) policy. Please refer to the Open Distro [ISM documentation](https://opendistro.github.io/for-elasticsearch-docs/docs/ism/) for details.",
            "description_kind": "plain",
            "deprecated": true
          }
        },
        "elasticsearch_opensearch_kibana_tenant": {
          "version": 0,
          "block": {
            "attributes": {
              "description": {
                "type": "string",
                "description_kind": "plain",
                "optional": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "index": {
                "type": "string",
                "description_kind": "plain",
                "computed": true
              },
              "tenant_name": {
                "type": "string",
                "description_kind": "plain",
                "required": true
              }
            },
            "description_kind": "plain"
          }
        },
        "elasticsearch_opensearch_monitor": {
          "version": 0,
          "block": {
            "attributes": {
              "body": {
                "type": "string",
                "description_kind": "plain",
                "required": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              }
            },
            "description_kind": "plain"
          }
        },
        "elasticsearch_opensearch_role": {
          "version": 0,
          "block": {
            "attributes": {
              "cluster_permissions": {
                "type": [
                  "set",
                  "string"
                ],
                "description_kind": "plain",
                "optional": true
              },
              "description": {
                "type": "string",
                "description_kind": "plain",
                "optional": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "role_name": {
                "type": "string",
                "description_kind": "plain",
                "required": true
              }
            },
            "block_types": {
              "index_permissions": {
                "nesting_mode": "set",
                "block": {
                  "attributes": {
                    "allowed_actions": {
                      "type": [
                        "set",
                        "string"
                      ],
                      "description_kind": "plain",
                      "optional": true
                    },
                    "document_level_security": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "field_level_security": {
                      "type": [
                        "set",
                        "string"
                      ],
                      "description_kind": "plain",
                      "optional": true
                    },
                    "index_patterns": {
                      "type": [
                        "set",
                        "string"
                      ],
                      "description_kind": "plain",
                      "optional": true
                    },
                    "masked_fields": {
                      "type": [
                        "set",
                        "string"
                      ],
                      "description_kind": "plain",
                      "optional": true
                    }
                  },
                  "description_kind": "plain"
                }
              },
              "tenant_permissions": {
                "nesting_mode": "set",
                "block": {
                  "attributes": {
                    "allowed_actions": {
                      "type": [
                        "set",
                        "string"
                      ],
                      "description_kind": "plain",
                      "optional": true
                    },
                    "tenant_patterns": {
                      "type": [
                        "set",
                        "string"
                      ],
                      "description_kind": "plain",
                      "optional": true
                    }
                  },
                  "description_kind": "plain"
                }
              }
            },
            "description_kind": "plain"
          }
        },
        "elasticsearch_opensearch_roles_mapping": {
          "version": 0,
          "block": {
            "attributes": {
              "and_backend_roles": {
                "type": [
                  "set",
                  "string"
                ],
                "description_kind": "plain",
                "optional": true
              },
              "backend_roles": {
                "type": [
                  "set",
                  "string"
                ],
                "description_kind": "plain",
                "optional": true
              },
              "description": {
                "type": "string",
                "description_kind": "plain",
                "optional": true
              },
              "hosts": {
                "type": [
                  "set",
                  "string"
                ],
                "description_kind": "plain",
                "optional": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "role_name": {
                "type": "string",
                "description_kind": "plain",
                "required": true
              },
              "users": {
                "type": [
                  "set",
                  "string"
                ],
                "description_kind": "plain",
                "optional": true
              }
            },
            "description_kind": "plain"
          }
        },
        "elasticsearch_opensearch_user": {
          "version": 0,
          "block": {
            "attributes": {
              "attributes": {
                "type": [
                  "map",
                  "string"
                ],
                "description_kind": "plain",
                "optional": true
              },
              "backend_roles": {
                "type": [
                  "set",
                  "string"
                ],
                "description_kind": "plain",
                "optional": true
              },
              "description": {
                "type": "string",
                "description_kind": "plain",
                "optional": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "password": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "sensitive": true
              },
              "password_hash": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "sensitive": true
              },
              "username": {
                "type": "string",
                "description_kind": "plain",
                "required": true
              }
            },
            "description_kind": "plain"
          }
        },
        "elasticsearch_script": {
          "version": 0,
          "block": {
            "attributes": {
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "lang": {
                "type": "string",
                "description": "Specifies the language the script is written in. Defaults to painless.",
                "description_kind": "plain",
                "optional": true
              },
              "script_id": {
                "type": "string",
                "description": "Identifier for the stored script. Must be unique within the cluster.",
                "description_kind": "plain",
                "required": true
              },
              "source": {
                "type": "string",
                "description": "The source of the stored script",
                "description_kind": "plain",
                "required": true
              }
            },
            "description_kind": "plain"
          }
        },
        "elasticsearch_snapshot_repository": {
          "version": 0,
          "block": {
            "attributes": {
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "description_kind": "plain",
                "required": true
              },
              "settings": {
                "type": [
                  "map",
                  "string"
                ],
                "description_kind": "plain",
                "optional": true
              },
              "type": {
                "type": "string",
                "description_kind": "plain",
                "required": true
              }
            },
            "description_kind": "plain"
          }
        },
        "elasticsearch_xpack_index_lifecycle_policy": {
          "version": 0,
          "block": {
            "attributes": {
              "body": {
                "type": "string",
                "description_kind": "plain",
                "required": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "description_kind": "plain",
                "required": true
              }
            },
            "description_kind": "plain"
          }
        },
        "elasticsearch_xpack_license": {
          "version": 0,
          "block": {
            "attributes": {
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "license": {
                "type": "string",
                "description_kind": "plain",
                "optional": true
              },
              "license_json": {
                "type": "string",
                "description_kind": "plain",
                "computed": true
              },
              "use_basic_license": {
                "type": "bool",
                "description_kind": "plain",
                "required": true
              }
            },
            "description_kind": "plain"
          }
        },
        "elasticsearch_xpack_role": {
          "version": 0,
          "block": {
            "attributes": {
              "cluster": {
                "type": [
                  "set",
                  "string"
                ],
                "description_kind": "plain",
                "optional": true
              },
              "global": {
                "type": "string",
                "description_kind": "plain",
                "optional": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "metadata": {
                "type": "string",
                "description_kind": "plain",
                "optional": true
              },
              "role_name": {
                "type": "string",
                "description_kind": "plain",
                "required": true
              },
              "run_as": {
                "type": [
                  "set",
                  "string"
                ],
                "description_kind": "plain",
                "optional": true
              }
            },
            "block_types": {
              "applications": {
                "nesting_mode": "set",
                "block": {
                  "attributes": {
                    "application": {
                      "type": "string",
                      "description_kind": "plain",
                      "required": true
                    },
                    "privileges": {
                      "type": [
                        "set",
                        "string"
                      ],
                      "description_kind": "plain",
                      "optional": true
                    },
                    "resources": {
                      "type": [
                        "set",
                        "string"
                      ],
                      "description_kind": "plain",
                      "optional": true
                    }
                  },
                  "description_kind": "plain"
                }
              },
              "indices": {
                "nesting_mode": "set",
                "block": {
                  "attributes": {
                    "names": {
                      "type": [
                        "set",
                        "string"
                      ],
                      "description_kind": "plain",
                      "required": true
                    },
                    "privileges": {
                      "type": [
                        "set",
                        "string"
                      ],
                      "description_kind": "plain",
                      "required": true
                    },
                    "query": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true
                    }
                  },
                  "block_types": {
                    "field_security": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "except": {
                            "type": [
                              "set",
                              "string"
                            ],
                            "description_kind": "plain",
                            "optional": true
                          },
                          "grant": {
                            "type": [
                              "set",
                              "string"
                            ],
                            "description_kind": "plain",
                            "optional": true
                          }
                        },
                        "description_kind": "plain"
                      },
                      "max_items": 1
                    }
                  },
                  "description_kind": "plain"
                }
              }
            },
            "description_kind": "plain"
          }
        },
        "elasticsearch_xpack_role_mapping": {
          "version": 0,
          "block": {
            "attributes": {
              "enabled": {
                "type": "bool",
                "description": "Mappings that have `enabled` set to `false` are ignored when role mapping is performed.",
                "description_kind": "plain",
                "optional": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "metadata": {
                "type": "string",
                "description": "Additional metadata that helps define which roles are assigned to each user. Keys beginning with `_` are reserved for system usage.",
                "description_kind": "plain",
                "optional": true
              },
              "role_mapping_name": {
                "type": "string",
                "description": "The distinct name that identifies the role mapping, used solely as an identifier.",
                "description_kind": "plain",
                "required": true
              },
              "roles": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "A list of role names that are granted to the users that match the role mapping rules.",
                "description_kind": "plain",
                "required": true
              },
              "rules": {
                "type": "string",
                "description": "A list of mustache templates that will be evaluated to determine the roles names that should granted to the users that match the role mapping rules. This matches fields of users, rules can be grouped into `all` and `any` top level keys.",
                "description_kind": "plain",
                "required": true
              }
            },
            "description": "Provides an Elasticsearch XPack role mapping resource. Role mappings define which roles are assigned to each user. Each mapping has rules that identify users and a list of roles that are granted to those users. See the upstream [docs](https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api.html) for more details.",
            "description_kind": "plain"
          }
        },
        "elasticsearch_xpack_snapshot_lifecycle_policy": {
          "version": 0,
          "block": {
            "attributes": {
              "body": {
                "type": "string",
                "description": "See the policy definition defined in the [docs](https://www.elastic.co/guide/en/elasticsearch/reference/current/slm-api-put-policy.html#slm-api-put-request-body)",
                "description_kind": "plain",
                "required": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "description": "ID for the snapshot lifecycle policy",
                "description_kind": "plain",
                "required": true
              }
            },
            "description": "Provides an Elasticsearch XPack snapshot lifecycle management policy. These automatically take snapshots and control how long they are retained. See the upstream [docs](https://www.elastic.co/guide/en/elasticsearch/reference/current/snapshot-lifecycle-management-api.html) for more details.",
            "description_kind": "plain"
          }
        },
        "elasticsearch_xpack_user": {
          "version": 0,
          "block": {
            "attributes": {
              "email": {
                "type": "string",
                "description": "The email of the user",
                "description_kind": "plain",
                "optional": true
              },
              "enabled": {
                "type": "bool",
                "description": "Specifies whether the user is enabled, defaults to true.",
                "description_kind": "plain",
                "optional": true
              },
              "fullname": {
                "type": "string",
                "description": "The full name of the user",
                "description_kind": "plain",
                "optional": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "metadata": {
                "type": "string",
                "description": "Arbitrary metadata that you want to associate with the user",
                "description_kind": "plain",
                "optional": true
              },
              "password": {
                "type": "string",
                "description": "The userâ€™s password. Passwords must be at least 6 characters long. Mutually exclusive with `password_hash`, one of which must be provided at creation.",
                "description_kind": "plain",
                "optional": true,
                "sensitive": true
              },
              "password_hash": {
                "type": "string",
                "description": "A hash of the userâ€™s password. This must be produced using the same hashing algorithm as has been configured for password storage. Mutually exclusive with `password`, one of which must be provided at creation.",
                "description_kind": "plain",
                "optional": true,
                "sensitive": true
              },
              "roles": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "A set of roles the user has. The roles determine the userâ€™s access permissions",
                "description_kind": "plain",
                "required": true
              },
              "username": {
                "type": "string",
                "description": "An identifier for the user. \n\n Usernames must be at least 1 and no more than 1024 characters. They can contain alphanumeric characters (a-z, A-Z, 0-9), spaces, punctuation, and printable symbols in the Basic Latin (ASCII) block. Leading or trailing whitespace is not allowed.",
                "description_kind": "plain",
                "required": true
              }
            },
            "description": "Provides an Elasticsearch XPack user resource. See the upstream [docs](https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api.html) for more details.",
            "description_kind": "plain"
          }
        },
        "elasticsearch_xpack_watch": {
          "version": 0,
          "block": {
            "attributes": {
              "active": {
                "type": "bool",
                "description": "Boolean to activate the xpack watcher, defaults `true`",
                "description_kind": "plain",
                "optional": true
              },
              "body": {
                "type": "string",
                "description_kind": "plain",
                "required": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "watch_id": {
                "type": "string",
                "description_kind": "plain",
                "required": true
              }
            },
            "description_kind": "plain"
          }
        }
      },
      "data_source_schemas": {
        "elasticsearch_host": {
          "version": 0,
          "block": {
            "attributes": {
              "active": {
                "type": "bool",
                "description": "should be set to `true`",
                "description_kind": "plain",
                "required": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "url": {
                "type": "string",
                "description": "the url of the active elasticsearch cluster",
                "description_kind": "plain",
                "computed": true
              }
            },
            "description": "`elasticsearch_host` can be used to retrieve the host URL for the provider's current elasticsearch cluster.",
            "description_kind": "plain"
          }
        },
        "elasticsearch_opendistro_destination": {
          "version": 0,
          "block": {
            "attributes": {
              "body": {
                "type": [
                  "map",
                  "string"
                ],
                "description": "Map of the attributes of the destination",
                "description_kind": "plain",
                "computed": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "description": "Name of the destrination to retrieve",
                "description_kind": "plain",
                "required": true
              }
            },
            "description": "`elasticsearch_opendistro_destination` can be used to retrieve the destination object by name.",
            "description_kind": "plain",
            "deprecated": true
          }
        },
        "elasticsearch_opensearch_destination": {
          "version": 0,
          "block": {
            "attributes": {
              "body": {
                "type": [
                  "map",
                  "string"
                ],
                "description": "Map of the attributes of the destination",
                "description_kind": "plain",
                "computed": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "description": "Name of the destrination to retrieve",
                "description_kind": "plain",
                "required": true
              }
            },
            "description": "`elasticsearch_opensearch_destination` can be used to retrieve the destination object by name.",
            "description_kind": "plain"
          }
        }
      }
    }
  }
}
