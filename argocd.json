{
  "format_version": "1.0",
  "provider_schemas": {
    "registry.terraform.io/oboukili/argocd": {
      "provider": {
        "version": 0,
        "block": {
          "attributes": {
            "auth_token": {
              "type": "string",
              "description_kind": "plain",
              "optional": true
            },
            "cert_file": {
              "type": "string",
              "description_kind": "plain",
              "optional": true
            },
            "client_cert_file": {
              "type": "string",
              "description_kind": "plain",
              "optional": true
            },
            "client_cert_key": {
              "type": "string",
              "description_kind": "plain",
              "optional": true
            },
            "config_path": {
              "type": "string",
              "description_kind": "plain",
              "optional": true
            },
            "context": {
              "type": "string",
              "description_kind": "plain",
              "optional": true
            },
            "grpc_web": {
              "type": "bool",
              "description_kind": "plain",
              "optional": true
            },
            "grpc_web_root_path": {
              "type": "string",
              "description_kind": "plain",
              "optional": true
            },
            "headers": {
              "type": [
                "set",
                "string"
              ],
              "description_kind": "plain",
              "optional": true
            },
            "insecure": {
              "type": "bool",
              "description_kind": "plain",
              "optional": true
            },
            "password": {
              "type": "string",
              "description_kind": "plain",
              "optional": true
            },
            "plain_text": {
              "type": "bool",
              "description_kind": "plain",
              "optional": true
            },
            "port_forward": {
              "type": "bool",
              "description_kind": "plain",
              "optional": true
            },
            "port_forward_with_namespace": {
              "type": "string",
              "description_kind": "plain",
              "optional": true
            },
            "server_addr": {
              "type": "string",
              "description_kind": "plain",
              "required": true
            },
            "use_local_config": {
              "type": "bool",
              "description_kind": "plain",
              "optional": true
            },
            "user_agent": {
              "type": "string",
              "description_kind": "plain",
              "optional": true
            },
            "username": {
              "type": "string",
              "description_kind": "plain",
              "optional": true
            }
          },
          "block_types": {
            "kubernetes": {
              "nesting_mode": "list",
              "block": {
                "attributes": {
                  "client_certificate": {
                    "type": "string",
                    "description": "PEM-encoded client certificate for TLS authentication.",
                    "description_kind": "plain",
                    "optional": true
                  },
                  "client_key": {
                    "type": "string",
                    "description": "PEM-encoded client certificate key for TLS authentication.",
                    "description_kind": "plain",
                    "optional": true
                  },
                  "cluster_ca_certificate": {
                    "type": "string",
                    "description": "PEM-encoded root certificates bundle for TLS authentication.",
                    "description_kind": "plain",
                    "optional": true
                  },
                  "config_context": {
                    "type": "string",
                    "description_kind": "plain",
                    "optional": true
                  },
                  "config_context_auth_info": {
                    "type": "string",
                    "description_kind": "plain",
                    "optional": true
                  },
                  "config_context_cluster": {
                    "type": "string",
                    "description_kind": "plain",
                    "optional": true
                  },
                  "config_path": {
                    "type": "string",
                    "description": "Path to the kube config file. Can be set with KUBE_CONFIG_PATH.",
                    "description_kind": "plain",
                    "optional": true
                  },
                  "config_paths": {
                    "type": [
                      "list",
                      "string"
                    ],
                    "description": "A list of paths to kube config files. Can be set with KUBE_CONFIG_PATHS environment variable.",
                    "description_kind": "plain",
                    "optional": true
                  },
                  "host": {
                    "type": "string",
                    "description": "The hostname (in form of URI) of Kubernetes master.",
                    "description_kind": "plain",
                    "optional": true
                  },
                  "insecure": {
                    "type": "bool",
                    "description": "Whether server should be accessed without verifying the TLS certificate.",
                    "description_kind": "plain",
                    "optional": true
                  },
                  "password": {
                    "type": "string",
                    "description": "The password to use for HTTP basic authentication when accessing the Kubernetes master endpoint.",
                    "description_kind": "plain",
                    "optional": true
                  },
                  "token": {
                    "type": "string",
                    "description": "Token to authenticate an service account",
                    "description_kind": "plain",
                    "optional": true
                  },
                  "username": {
                    "type": "string",
                    "description": "The username to use for HTTP basic authentication when accessing the Kubernetes master endpoint.",
                    "description_kind": "plain",
                    "optional": true
                  }
                },
                "block_types": {
                  "exec": {
                    "nesting_mode": "list",
                    "block": {
                      "attributes": {
                        "api_version": {
                          "type": "string",
                          "description_kind": "plain",
                          "required": true
                        },
                        "args": {
                          "type": [
                            "list",
                            "string"
                          ],
                          "description_kind": "plain",
                          "optional": true
                        },
                        "command": {
                          "type": "string",
                          "description_kind": "plain",
                          "required": true
                        },
                        "env": {
                          "type": [
                            "map",
                            "string"
                          ],
                          "description_kind": "plain",
                          "optional": true
                        }
                      },
                      "description_kind": "plain"
                    },
                    "max_items": 1
                  }
                },
                "description": "Kubernetes configuration.",
                "description_kind": "plain"
              },
              "max_items": 1
            }
          },
          "description_kind": "plain"
        }
      },
      "resource_schemas": {
        "argocd_application": {
          "version": 4,
          "block": {
            "attributes": {
              "cascade": {
                "type": "bool",
                "description": "Whether to applying cascading deletion when application is removed.",
                "description_kind": "plain",
                "optional": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "wait": {
                "type": "bool",
                "description": "Upon application creation or update, wait for application health/sync status to be healthy/Synced, upon application deletion, wait for application to be removed, when set to true.",
                "description_kind": "plain",
                "optional": true
              }
            },
            "block_types": {
              "metadata": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "annotations": {
                      "type": [
                        "map",
                        "string"
                      ],
                      "description": "An unstructured key value map stored with the applications.argoproj.io that may be used to store arbitrary metadata. More info: http://kubernetes.io/docs/user-guide/annotations",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "generation": {
                      "type": "number",
                      "description": "A sequence number representing a specific generation of the desired state.",
                      "description_kind": "plain",
                      "computed": true
                    },
                    "labels": {
                      "type": [
                        "map",
                        "string"
                      ],
                      "description": "Map of string keys and values that can be used to organize and categorize (scope and select) the applications.argoproj.io. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "name": {
                      "type": "string",
                      "description": "Name of the applications.argoproj.io, must be unique. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "namespace": {
                      "type": "string",
                      "description": "Namespace of the applications.argoproj.io, must be unique. Cannot be updated. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "resource_version": {
                      "type": "string",
                      "description": "An opaque value that represents the internal version of this applications.argoproj.io that can be used by clients to determine when applications.argoproj.io has changed. Read more: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency",
                      "description_kind": "plain",
                      "computed": true
                    },
                    "uid": {
                      "type": "string",
                      "description": "The unique in time and space value for this applications.argoproj.io. More info: http://kubernetes.io/docs/user-guide/identifiers#uids",
                      "description_kind": "plain",
                      "computed": true
                    }
                  },
                  "description": "Standard applications.argoproj.io's metadata. More info: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#metadata",
                  "description_kind": "plain"
                },
                "min_items": 1,
                "max_items": 1
              },
              "spec": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "project": {
                      "type": "string",
                      "description": "The project the application belongs to. Defaults to `default`.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "revision_history_limit": {
                      "type": "number",
                      "description": "Limits the number of items kept in the application's revision history, which is used for informational purposes as well as for rollbacks to previous versions. This should only be changed in exceptional circumstances. Setting to zero will store no history. This will reduce storage used. Increasing will increase the space used to store the history, so we do not recommend increasing it. Default is 10.",
                      "description_kind": "plain",
                      "optional": true
                    }
                  },
                  "block_types": {
                    "destination": {
                      "nesting_mode": "set",
                      "block": {
                        "attributes": {
                          "name": {
                            "type": "string",
                            "description": "Name of the target cluster. Can be used instead of `server`.",
                            "description_kind": "plain",
                            "optional": true
                          },
                          "namespace": {
                            "type": "string",
                            "description": "Target namespace for the application's resources. The namespace will only be set for namespace-scoped resources that have not set a value for .metadata.namespace.",
                            "description_kind": "plain",
                            "required": true
                          },
                          "server": {
                            "type": "string",
                            "description": "URL of the target cluster and must be set to the Kubernetes control plane API.",
                            "description_kind": "plain",
                            "optional": true
                          }
                        },
                        "description": "Reference to the Kubernetes server and namespace in which the application will be deployed.",
                        "description_kind": "plain"
                      },
                      "min_items": 1,
                      "max_items": 1
                    },
                    "ignore_difference": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "group": {
                            "type": "string",
                            "description": "The Kubernetes resource Group to match for.",
                            "description_kind": "plain",
                            "optional": true
                          },
                          "jq_path_expressions": {
                            "type": [
                              "set",
                              "string"
                            ],
                            "description": "List of JQ path expression strings targeting the field(s) to ignore.",
                            "description_kind": "plain",
                            "optional": true
                          },
                          "json_pointers": {
                            "type": [
                              "set",
                              "string"
                            ],
                            "description": "List of JSONPaths strings targeting the field(s) to ignore.",
                            "description_kind": "plain",
                            "optional": true
                          },
                          "kind": {
                            "type": "string",
                            "description": "The Kubernetes resource Kind to match for.",
                            "description_kind": "plain",
                            "optional": true
                          },
                          "name": {
                            "type": "string",
                            "description": "The Kubernetes resource Name to match for.",
                            "description_kind": "plain",
                            "optional": true
                          },
                          "namespace": {
                            "type": "string",
                            "description": "The Kubernetes resource Namespace to match for.",
                            "description_kind": "plain",
                            "optional": true
                          }
                        },
                        "description": "Resources and their fields which should be ignored during comparison. More info: https://argo-cd.readthedocs.io/en/stable/user-guide/diffing/#application-level-configuration.",
                        "description_kind": "plain"
                      }
                    },
                    "info": {
                      "nesting_mode": "set",
                      "block": {
                        "attributes": {
                          "name": {
                            "type": "string",
                            "description": "Name of the information.",
                            "description_kind": "plain",
                            "optional": true
                          },
                          "value": {
                            "type": "string",
                            "description": "Value of the information.",
                            "description_kind": "plain",
                            "optional": true
                          }
                        },
                        "description": "List of information (URLs, email addresses, and plain text) that relates to the application.",
                        "description_kind": "plain"
                      }
                    },
                    "source": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "chart": {
                            "type": "string",
                            "description": "Helm chart name. Must be specified for applications sourced from a Helm repo.",
                            "description_kind": "plain",
                            "optional": true
                          },
                          "path": {
                            "type": "string",
                            "description": "Directory path within the repository. Only valid for applications sourced from Git.",
                            "description_kind": "plain",
                            "optional": true
                          },
                          "repo_url": {
                            "type": "string",
                            "description": "URL to the repository (Git or Helm) that contains the application manifests.",
                            "description_kind": "plain",
                            "required": true
                          },
                          "target_revision": {
                            "type": "string",
                            "description": "Revision of the source to sync the application to. In case of Git, this can be commit, tag, or branch. If omitted, will equal to HEAD. In case of Helm, this is a semver tag for the Chart's version.",
                            "description_kind": "plain",
                            "optional": true
                          }
                        },
                        "block_types": {
                          "directory": {
                            "nesting_mode": "list",
                            "block": {
                              "attributes": {
                                "recurse": {
                                  "type": "bool",
                                  "description": "Whether to scan a directory recursively for manifests.",
                                  "description_kind": "plain",
                                  "optional": true
                                }
                              },
                              "block_types": {
                                "jsonnet": {
                                  "nesting_mode": "list",
                                  "block": {
                                    "block_types": {
                                      "ext_var": {
                                        "nesting_mode": "list",
                                        "block": {
                                          "attributes": {
                                            "code": {
                                              "type": "bool",
                                              "description": "Determines whether the variable should be evaluated as jsonnet code or treated as string.",
                                              "description_kind": "plain",
                                              "optional": true
                                            },
                                            "name": {
                                              "type": "string",
                                              "description": "Name of Jsonnet variable.",
                                              "description_kind": "plain",
                                              "optional": true
                                            },
                                            "value": {
                                              "type": "string",
                                              "description": "Value of Jsonnet variable.",
                                              "description_kind": "plain",
                                              "optional": true
                                            }
                                          },
                                          "description": "List of Jsonnet External Variables.",
                                          "description_kind": "plain"
                                        }
                                      },
                                      "tla": {
                                        "nesting_mode": "set",
                                        "block": {
                                          "attributes": {
                                            "code": {
                                              "type": "bool",
                                              "description": "Determines whether the variable should be evaluated as jsonnet code or treated as string.",
                                              "description_kind": "plain",
                                              "optional": true
                                            },
                                            "name": {
                                              "type": "string",
                                              "description": "Name of Jsonnet variable.",
                                              "description_kind": "plain",
                                              "optional": true
                                            },
                                            "value": {
                                              "type": "string",
                                              "description": "Value of Jsonnet variable.",
                                              "description_kind": "plain",
                                              "optional": true
                                            }
                                          },
                                          "description": "List of Jsonnet Top-level Arguments",
                                          "description_kind": "plain"
                                        }
                                      }
                                    },
                                    "description": "Jsonnet specific options.",
                                    "description_kind": "plain"
                                  },
                                  "max_items": 1
                                }
                              },
                              "description": "Path/directory specific options.",
                              "description_kind": "plain"
                            },
                            "max_items": 1
                          },
                          "helm": {
                            "nesting_mode": "list",
                            "block": {
                              "attributes": {
                                "release_name": {
                                  "type": "string",
                                  "description": "Helm release name. If omitted it will use the application name.",
                                  "description_kind": "plain",
                                  "optional": true
                                },
                                "skip_crds": {
                                  "type": "bool",
                                  "description": "Whether to skip custom resource definition installation step (Helm's [--skip-crds](https://helm.sh/docs/chart_best_practices/custom_resource_definitions/)).",
                                  "description_kind": "plain",
                                  "optional": true
                                },
                                "value_files": {
                                  "type": [
                                    "list",
                                    "string"
                                  ],
                                  "description": "List of Helm value files to use when generating a template.",
                                  "description_kind": "plain",
                                  "optional": true
                                },
                                "values": {
                                  "type": "string",
                                  "description": "Helm values to be passed to helm template, typically defined as a block.",
                                  "description_kind": "plain",
                                  "optional": true
                                }
                              },
                              "block_types": {
                                "parameter": {
                                  "nesting_mode": "set",
                                  "block": {
                                    "attributes": {
                                      "force_string": {
                                        "type": "bool",
                                        "description": "Determines whether to tell Helm to interpret booleans and numbers as strings.",
                                        "description_kind": "plain",
                                        "optional": true
                                      },
                                      "name": {
                                        "type": "string",
                                        "description": "Name of the Helm parameter.",
                                        "description_kind": "plain",
                                        "optional": true
                                      },
                                      "value": {
                                        "type": "string",
                                        "description": "Value of the Helm parameter.",
                                        "description_kind": "plain",
                                        "optional": true
                                      }
                                    },
                                    "description": "Helm parameters which are passed to the helm template command upon manifest generation.",
                                    "description_kind": "plain"
                                  }
                                }
                              },
                              "description": "Helm specific options.",
                              "description_kind": "plain"
                            },
                            "max_items": 1
                          },
                          "kustomize": {
                            "nesting_mode": "list",
                            "block": {
                              "attributes": {
                                "common_annotations": {
                                  "type": [
                                    "map",
                                    "string"
                                  ],
                                  "description": "List of additional annotations to add to rendered manifests.",
                                  "description_kind": "plain",
                                  "optional": true
                                },
                                "common_labels": {
                                  "type": [
                                    "map",
                                    "string"
                                  ],
                                  "description": "List of additional labels to add to rendered manifests.",
                                  "description_kind": "plain",
                                  "optional": true
                                },
                                "images": {
                                  "type": [
                                    "set",
                                    "string"
                                  ],
                                  "description": "List of Kustomize image override specifications.",
                                  "description_kind": "plain",
                                  "optional": true
                                },
                                "name_prefix": {
                                  "type": "string",
                                  "description": "Prefix appended to resources for Kustomize apps.",
                                  "description_kind": "plain",
                                  "optional": true
                                },
                                "name_suffix": {
                                  "type": "string",
                                  "description": "Suffix appended to resources for Kustomize apps.",
                                  "description_kind": "plain",
                                  "optional": true
                                },
                                "version": {
                                  "type": "string",
                                  "description": "Version of Kustomize to use for rendering manifests.",
                                  "description_kind": "plain",
                                  "optional": true
                                }
                              },
                              "description": "Kustomize specific options.",
                              "description_kind": "plain"
                            },
                            "max_items": 1
                          },
                          "plugin": {
                            "nesting_mode": "list",
                            "block": {
                              "attributes": {
                                "name": {
                                  "type": "string",
                                  "description": "Name of the plugin. Only set the plugin name if the plugin is defined in `argocd-cm`. If the plugin is defined as a sidecar, omit the name. The plugin will be automatically matched with the Application according to the plugin's discovery rules.",
                                  "description_kind": "plain",
                                  "optional": true
                                }
                              },
                              "block_types": {
                                "env": {
                                  "nesting_mode": "set",
                                  "block": {
                                    "attributes": {
                                      "name": {
                                        "type": "string",
                                        "description": "Name of the environment variable.",
                                        "description_kind": "plain",
                                        "optional": true
                                      },
                                      "value": {
                                        "type": "string",
                                        "description": "Value of the environment variable.",
                                        "description_kind": "plain",
                                        "optional": true
                                      }
                                    },
                                    "description": "Environment variables passed to the plugin.",
                                    "description_kind": "plain"
                                  }
                                }
                              },
                              "description": "Config management plugin specific options.",
                              "description_kind": "plain"
                            },
                            "max_items": 1
                          }
                        },
                        "description": "Location of the application's manifests or chart.",
                        "description_kind": "plain"
                      },
                      "min_items": 1,
                      "max_items": 1
                    },
                    "sync_policy": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "sync_options": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description": "List of sync options. More info: https://argo-cd.readthedocs.io/en/stable/user-guide/sync-options/.",
                            "description_kind": "plain",
                            "optional": true
                          }
                        },
                        "block_types": {
                          "automated": {
                            "nesting_mode": "set",
                            "block": {
                              "attributes": {
                                "allow_empty": {
                                  "type": "bool",
                                  "description": "Allows apps have zero live resources.",
                                  "description_kind": "plain",
                                  "optional": true
                                },
                                "prune": {
                                  "type": "bool",
                                  "description": "Whether to delete resources from the cluster that are not found in the sources anymore as part of automated sync.",
                                  "description_kind": "plain",
                                  "optional": true
                                },
                                "self_heal": {
                                  "type": "bool",
                                  "description": "Whether to revert resources back to their desired state upon modification in the cluster.",
                                  "description_kind": "plain",
                                  "optional": true
                                }
                              },
                              "description": "Whether to automatically keep an application synced to the target revision.",
                              "description_kind": "plain"
                            },
                            "max_items": 1
                          },
                          "retry": {
                            "nesting_mode": "list",
                            "block": {
                              "attributes": {
                                "limit": {
                                  "type": "string",
                                  "description": "Maximum number of attempts for retrying a failed sync. If set to 0, no retries will be performed.",
                                  "description_kind": "plain",
                                  "optional": true
                                }
                              },
                              "block_types": {
                                "backoff": {
                                  "nesting_mode": "set",
                                  "block": {
                                    "attributes": {
                                      "duration": {
                                        "type": "string",
                                        "description": "Duration is the amount to back off. Default unit is seconds, but could also be a duration (e.g. `2m`, `1h`), as a string.",
                                        "description_kind": "plain",
                                        "optional": true
                                      },
                                      "factor": {
                                        "type": "string",
                                        "description": "Factor to multiply the base duration after each failed retry.",
                                        "description_kind": "plain",
                                        "optional": true
                                      },
                                      "max_duration": {
                                        "type": "string",
                                        "description": "Maximum amount of time allowed for the backoff strategy. Default unit is seconds, but could also be a duration (e.g. `2m`, `1h`), as a string.",
                                        "description_kind": "plain",
                                        "optional": true
                                      }
                                    },
                                    "description": "Controls how to backoff on subsequent retries of failed syncs.",
                                    "description_kind": "plain"
                                  },
                                  "max_items": 1
                                }
                              },
                              "description": "Controls failed sync retry behavior.",
                              "description_kind": "plain"
                            },
                            "max_items": 1
                          }
                        },
                        "description": "Controls when and how a sync will be performed.",
                        "description_kind": "plain"
                      },
                      "max_items": 1
                    }
                  },
                  "description": "The application specification.",
                  "description_kind": "plain"
                },
                "min_items": 1,
                "max_items": 1
              },
              "timeouts": {
                "nesting_mode": "single",
                "block": {
                  "attributes": {
                    "create": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "delete": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "update": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true
                    }
                  },
                  "description_kind": "plain"
                }
              }
            },
            "description_kind": "plain"
          }
        },
        "argocd_cluster": {
          "version": 0,
          "block": {
            "attributes": {
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "info": {
                "type": [
                  "list",
                  [
                    "object",
                    {
                      "applications_count": "string",
                      "connection_state": [
                        "list",
                        [
                          "object",
                          {
                            "message": "string",
                            "status": "string"
                          }
                        ]
                      ],
                      "server_version": "string"
                    }
                  ]
                ],
                "description_kind": "plain",
                "computed": true
              },
              "name": {
                "type": "string",
                "description": "Name of the cluster. If omitted, will use the server address",
                "description_kind": "plain",
                "optional": true
              },
              "namespaces": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "Holds list of namespaces which are accessible in that cluster. Cluster level resources would be ignored if namespace list is not empty.",
                "description_kind": "plain",
                "optional": true
              },
              "project": {
                "type": "string",
                "description": "Add cluster scoped to project",
                "description_kind": "plain",
                "optional": true
              },
              "server": {
                "type": "string",
                "description": "Server is the API server URL of the Kubernetes cluster",
                "description_kind": "plain",
                "optional": true
              },
              "shard": {
                "type": "string",
                "description": "Shard contains optional shard number. Calculated on the fly by the application controller if not specified.",
                "description_kind": "plain",
                "optional": true
              }
            },
            "block_types": {
              "config": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "bearer_token": {
                      "type": "string",
                      "description": "Server requires Bearer authentication. This client will not attempt to use refresh tokens for an OAuth2 flow.",
                      "description_kind": "plain",
                      "optional": true,
                      "sensitive": true
                    },
                    "password": {
                      "type": "string",
                      "description": "Server requires Basic authentication",
                      "description_kind": "plain",
                      "optional": true,
                      "sensitive": true
                    },
                    "username": {
                      "type": "string",
                      "description": "Server requires Basic authentication",
                      "description_kind": "plain",
                      "optional": true
                    }
                  },
                  "block_types": {
                    "aws_auth_config": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "cluster_name": {
                            "type": "string",
                            "description_kind": "plain",
                            "optional": true
                          },
                          "role_arn": {
                            "type": "string",
                            "description": "RoleARN contains optional role ARN. If set then AWS IAM Authenticator assume a role to perform cluster operations instead of the default AWS credential provider chain",
                            "description_kind": "plain",
                            "optional": true
                          }
                        },
                        "description_kind": "plain"
                      }
                    },
                    "exec_provider_config": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "api_version": {
                            "type": "string",
                            "description": "Preferred input version of the ExecInfo",
                            "description_kind": "plain",
                            "optional": true
                          },
                          "args": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description": "Arguments to pass to the command when executing it",
                            "description_kind": "plain",
                            "optional": true
                          },
                          "command": {
                            "type": "string",
                            "description": "Command to execute",
                            "description_kind": "plain",
                            "optional": true
                          },
                          "env": {
                            "type": [
                              "map",
                              "string"
                            ],
                            "description": "Env defines additional environment variables to expose to the process. Passed as a map of strings",
                            "description_kind": "plain",
                            "optional": true
                          },
                          "install_hint": {
                            "type": "string",
                            "description": "This text is shown to the user when the executable doesn't seem to be present",
                            "description_kind": "plain",
                            "optional": true
                          }
                        },
                        "description": "exec_provider_config is config used to call an external command to perform cluster authentication See: https://godoc.org/k8s.io/client-go/tools/clientcmd/api#ExecConfig",
                        "description_kind": "plain"
                      },
                      "max_items": 1
                    },
                    "tls_client_config": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "ca_data": {
                            "type": "string",
                            "description": "ca_data holds PEM-encoded bytes (typically read from a root certificates bundle)",
                            "description_kind": "plain",
                            "optional": true
                          },
                          "cert_data": {
                            "type": "string",
                            "description": "cert_data holds PEM-encoded bytes (typically read from a client certificate file).",
                            "description_kind": "plain",
                            "optional": true
                          },
                          "insecure": {
                            "type": "bool",
                            "description": "Server should be accessed without verifying the TLS certificate.",
                            "description_kind": "plain",
                            "optional": true
                          },
                          "key_data": {
                            "type": "string",
                            "description": "key_data holds PEM-encoded bytes (typically read from a client certificate key file).",
                            "description_kind": "plain",
                            "optional": true,
                            "sensitive": true
                          },
                          "server_name": {
                            "type": "string",
                            "description": "ServerName is passed to the server for SNI and is used in the client to check server certificates against. If ServerName is empty, the hostname used to contact the server is used.",
                            "description_kind": "plain",
                            "optional": true
                          }
                        },
                        "description_kind": "plain"
                      },
                      "max_items": 1
                    }
                  },
                  "description_kind": "plain"
                },
                "min_items": 1,
                "max_items": 1
              },
              "metadata": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "annotations": {
                      "type": [
                        "map",
                        "string"
                      ],
                      "description": "An unstructured key value map stored with the cluster secret that may be used to store arbitrary metadata. More info: http://kubernetes.io/docs/user-guide/annotations",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "labels": {
                      "type": [
                        "map",
                        "string"
                      ],
                      "description": "Map of string keys and values that can be used to organize and categorize (scope and select) the cluster secret. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels",
                      "description_kind": "plain",
                      "optional": true
                    }
                  },
                  "description": "Standard cluster secret's metadata. More info: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#metadata",
                  "description_kind": "plain"
                },
                "max_items": 2
              }
            },
            "description_kind": "plain"
          }
        },
        "argocd_project": {
          "version": 2,
          "block": {
            "attributes": {
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              }
            },
            "block_types": {
              "metadata": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "annotations": {
                      "type": [
                        "map",
                        "string"
                      ],
                      "description": "An unstructured key value map stored with the appprojects.argoproj.io that may be used to store arbitrary metadata. More info: http://kubernetes.io/docs/user-guide/annotations",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "generation": {
                      "type": "number",
                      "description": "A sequence number representing a specific generation of the desired state.",
                      "description_kind": "plain",
                      "computed": true
                    },
                    "labels": {
                      "type": [
                        "map",
                        "string"
                      ],
                      "description": "Map of string keys and values that can be used to organize and categorize (scope and select) the appprojects.argoproj.io. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "name": {
                      "type": "string",
                      "description": "Name of the appprojects.argoproj.io, must be unique. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "namespace": {
                      "type": "string",
                      "description": "Namespace of the appprojects.argoproj.io, must be unique. Cannot be updated. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "resource_version": {
                      "type": "string",
                      "description": "An opaque value that represents the internal version of this appprojects.argoproj.io that can be used by clients to determine when appprojects.argoproj.io has changed. Read more: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency",
                      "description_kind": "plain",
                      "computed": true
                    },
                    "uid": {
                      "type": "string",
                      "description": "The unique in time and space value for this appprojects.argoproj.io. More info: http://kubernetes.io/docs/user-guide/identifiers#uids",
                      "description_kind": "plain",
                      "computed": true
                    }
                  },
                  "description": "Standard appprojects.argoproj.io's metadata. More info: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#metadata",
                  "description_kind": "plain"
                },
                "min_items": 1,
                "max_items": 1
              },
              "spec": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "description": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "signature_keys": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "description_kind": "plain",
                      "optional": true
                    },
                    "source_namespaces": {
                      "type": [
                        "set",
                        "string"
                      ],
                      "description_kind": "plain",
                      "optional": true
                    },
                    "source_repos": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "description_kind": "plain",
                      "required": true
                    }
                  },
                  "block_types": {
                    "cluster_resource_blacklist": {
                      "nesting_mode": "set",
                      "block": {
                        "attributes": {
                          "group": {
                            "type": "string",
                            "description_kind": "plain",
                            "optional": true
                          },
                          "kind": {
                            "type": "string",
                            "description_kind": "plain",
                            "optional": true
                          }
                        },
                        "description_kind": "plain"
                      }
                    },
                    "cluster_resource_whitelist": {
                      "nesting_mode": "set",
                      "block": {
                        "attributes": {
                          "group": {
                            "type": "string",
                            "description_kind": "plain",
                            "optional": true
                          },
                          "kind": {
                            "type": "string",
                            "description_kind": "plain",
                            "optional": true
                          }
                        },
                        "description_kind": "plain"
                      }
                    },
                    "destination": {
                      "nesting_mode": "set",
                      "block": {
                        "attributes": {
                          "name": {
                            "type": "string",
                            "description": "Name of the destination cluster which can be used instead of server.",
                            "description_kind": "plain",
                            "optional": true
                          },
                          "namespace": {
                            "type": "string",
                            "description_kind": "plain",
                            "required": true
                          },
                          "server": {
                            "type": "string",
                            "description_kind": "plain",
                            "optional": true
                          }
                        },
                        "description_kind": "plain"
                      },
                      "min_items": 1
                    },
                    "namespace_resource_blacklist": {
                      "nesting_mode": "set",
                      "block": {
                        "attributes": {
                          "group": {
                            "type": "string",
                            "description_kind": "plain",
                            "optional": true
                          },
                          "kind": {
                            "type": "string",
                            "description_kind": "plain",
                            "optional": true
                          }
                        },
                        "description_kind": "plain"
                      }
                    },
                    "namespace_resource_whitelist": {
                      "nesting_mode": "set",
                      "block": {
                        "attributes": {
                          "group": {
                            "type": "string",
                            "description_kind": "plain",
                            "optional": true
                          },
                          "kind": {
                            "type": "string",
                            "description_kind": "plain",
                            "optional": true
                          }
                        },
                        "description_kind": "plain"
                      }
                    },
                    "orphaned_resources": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "warn": {
                            "type": "bool",
                            "description_kind": "plain",
                            "optional": true
                          }
                        },
                        "block_types": {
                          "ignore": {
                            "nesting_mode": "set",
                            "block": {
                              "attributes": {
                                "group": {
                                  "type": "string",
                                  "description_kind": "plain",
                                  "optional": true
                                },
                                "kind": {
                                  "type": "string",
                                  "description_kind": "plain",
                                  "optional": true
                                },
                                "name": {
                                  "type": "string",
                                  "description_kind": "plain",
                                  "optional": true
                                }
                              },
                              "description_kind": "plain"
                            }
                          }
                        },
                        "description_kind": "plain"
                      },
                      "max_items": 1
                    },
                    "role": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "description": {
                            "type": "string",
                            "description_kind": "plain",
                            "optional": true
                          },
                          "groups": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description_kind": "plain",
                            "optional": true
                          },
                          "name": {
                            "type": "string",
                            "description_kind": "plain",
                            "required": true
                          },
                          "policies": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description_kind": "plain",
                            "required": true
                          }
                        },
                        "description_kind": "plain"
                      }
                    },
                    "sync_window": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "applications": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description_kind": "plain",
                            "optional": true
                          },
                          "clusters": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description_kind": "plain",
                            "optional": true
                          },
                          "duration": {
                            "type": "string",
                            "description_kind": "plain",
                            "optional": true
                          },
                          "kind": {
                            "type": "string",
                            "description_kind": "plain",
                            "optional": true
                          },
                          "manual_sync": {
                            "type": "bool",
                            "description_kind": "plain",
                            "optional": true
                          },
                          "namespaces": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description_kind": "plain",
                            "optional": true
                          },
                          "schedule": {
                            "type": "string",
                            "description_kind": "plain",
                            "optional": true
                          }
                        },
                        "description_kind": "plain"
                      }
                    }
                  },
                  "description": "ArgoCD App project resource specs. Required attributes: destination, source_repos.",
                  "description_kind": "plain"
                },
                "min_items": 1,
                "max_items": 1
              }
            },
            "description_kind": "plain"
          }
        },
        "argocd_project_token": {
          "version": 0,
          "block": {
            "attributes": {
              "description": {
                "type": "string",
                "description_kind": "plain",
                "optional": true
              },
              "expires_at": {
                "type": "string",
                "description_kind": "plain",
                "computed": true
              },
              "expires_in": {
                "type": "string",
                "description_kind": "plain",
                "optional": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "issued_at": {
                "type": "string",
                "description_kind": "plain",
                "computed": true
              },
              "jwt": {
                "type": "string",
                "description_kind": "plain",
                "computed": true,
                "sensitive": true
              },
              "project": {
                "type": "string",
                "description_kind": "plain",
                "required": true
              },
              "renew_before": {
                "type": "string",
                "description_kind": "plain",
                "optional": true
              },
              "role": {
                "type": "string",
                "description_kind": "plain",
                "required": true
              }
            },
            "description_kind": "plain"
          }
        },
        "argocd_repository": {
          "version": 0,
          "block": {
            "attributes": {
              "connection_state_status": {
                "type": "string",
                "description_kind": "plain",
                "computed": true
              },
              "enable_lfs": {
                "type": "bool",
                "description": "Whether git-lfs support should be enabled for this repo",
                "description_kind": "plain",
                "optional": true
              },
              "enable_oci": {
                "type": "bool",
                "description": "Specify whether the repo server should be viewed as OCI compliant",
                "description_kind": "plain",
                "optional": true
              },
              "githubapp_enterprise_base_url": {
                "type": "string",
                "description": "If using GitHub App for a GitHub Enterprise repository the host url is required",
                "description_kind": "plain",
                "optional": true
              },
              "githubapp_id": {
                "type": "string",
                "description": "GitHub App id for authenticating at the repo server only for GitHub repos",
                "description_kind": "plain",
                "optional": true
              },
              "githubapp_installation_id": {
                "type": "string",
                "description": "GitHub App installation id for authenticating at the repo server only for GitHub repos",
                "description_kind": "plain",
                "optional": true
              },
              "githubapp_private_key": {
                "type": "string",
                "description": "Private key data (pem) of GitHub App for authenticating at the repo server only for GitHub repos",
                "description_kind": "plain",
                "optional": true,
                "sensitive": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "inherited_creds": {
                "type": "bool",
                "description": "Whether credentials were inherited from a credential set",
                "description_kind": "plain",
                "computed": true
              },
              "insecure": {
                "type": "bool",
                "description": "Whether the repo is insecure",
                "description_kind": "plain",
                "optional": true
              },
              "name": {
                "type": "string",
                "description": "only for Helm repos",
                "description_kind": "plain",
                "optional": true
              },
              "password": {
                "type": "string",
                "description": "Password for authenticating at the repo server",
                "description_kind": "plain",
                "optional": true,
                "sensitive": true
              },
              "project": {
                "type": "string",
                "description": "The project name, in case the repository is project scoped",
                "description_kind": "plain",
                "optional": true
              },
              "repo": {
                "type": "string",
                "description": "URL of the repo",
                "description_kind": "plain",
                "required": true
              },
              "ssh_private_key": {
                "type": "string",
                "description": "SSH private key data for authenticating at the repo server only for Git repos",
                "description_kind": "plain",
                "optional": true,
                "sensitive": true
              },
              "tls_client_cert_data": {
                "type": "string",
                "description": "TLS client cert data for authenticating at the repo server",
                "description_kind": "plain",
                "optional": true
              },
              "tls_client_cert_key": {
                "type": "string",
                "description": "TLS client cert key for authenticating at the repo server ",
                "description_kind": "plain",
                "optional": true,
                "sensitive": true
              },
              "type": {
                "type": "string",
                "description": "type of the repo, may be 'git' or 'helm', defaults to 'git'",
                "description_kind": "plain",
                "optional": true
              },
              "username": {
                "type": "string",
                "description": "Username for authenticating at the repo server",
                "description_kind": "plain",
                "optional": true
              }
            },
            "description_kind": "plain"
          }
        },
        "argocd_repository_certificate": {
          "version": 0,
          "block": {
            "attributes": {
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              }
            },
            "block_types": {
              "https": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "cert_data": {
                      "type": "string",
                      "description": "CertData contains the actual certificate data, dependent on the certificate type",
                      "description_kind": "plain",
                      "required": true
                    },
                    "cert_info": {
                      "type": "string",
                      "description": "CertInfo will hold additional certificate info, dependent on the certificate type (e.g. SSH fingerprint, X509 CommonName)",
                      "description_kind": "plain",
                      "computed": true
                    },
                    "cert_subtype": {
                      "type": "string",
                      "description": "SubType specifies the sub type of the cert, i.e. `ssh-rsa`",
                      "description_kind": "plain",
                      "computed": true
                    },
                    "server_name": {
                      "type": "string",
                      "description": "ServerName specifies the DNS name of the server this certificate is intended for",
                      "description_kind": "plain",
                      "required": true
                    }
                  },
                  "description": "Defines a https certificate.",
                  "description_kind": "plain"
                },
                "max_items": 1
              },
              "ssh": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "cert_data": {
                      "type": "string",
                      "description": "CertData contains the actual certificate data, dependent on the certificate type",
                      "description_kind": "plain",
                      "required": true
                    },
                    "cert_info": {
                      "type": "string",
                      "description": "CertInfo will hold additional certificate info, dependent on the certificate type (e.g. SSH fingerprint, X509 CommonName)",
                      "description_kind": "plain",
                      "computed": true
                    },
                    "cert_subtype": {
                      "type": "string",
                      "description": "SubType specifies the sub type of the cert, i.e. `ssh-rsa`",
                      "description_kind": "plain",
                      "required": true
                    },
                    "server_name": {
                      "type": "string",
                      "description": "ServerName specifies the DNS name of the server this certificate is intended for",
                      "description_kind": "plain",
                      "required": true
                    }
                  },
                  "description": "Defines a ssh certificate.",
                  "description_kind": "plain"
                },
                "max_items": 1
              }
            },
            "description_kind": "plain"
          }
        },
        "argocd_repository_credentials": {
          "version": 0,
          "block": {
            "attributes": {
              "enable_oci": {
                "type": "bool",
                "description": "Specify whether the repo server should be viewed as OCI compliant",
                "description_kind": "plain",
                "optional": true
              },
              "githubapp_enterprise_base_url": {
                "type": "string",
                "description": "If using GitHub App for a GitHub Enterprise repository the host url is required",
                "description_kind": "plain",
                "optional": true
              },
              "githubapp_id": {
                "type": "string",
                "description": "GitHub App id for authenticating at the repo server only for GitHub repos",
                "description_kind": "plain",
                "optional": true
              },
              "githubapp_installation_id": {
                "type": "string",
                "description": "GitHub App installation id for authenticating at the repo server only for GitHub repos",
                "description_kind": "plain",
                "optional": true
              },
              "githubapp_private_key": {
                "type": "string",
                "description": "Private key data (pem) of GitHub App for authenticating at the repo server only for GitHub repos",
                "description_kind": "plain",
                "optional": true,
                "sensitive": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "password": {
                "type": "string",
                "description": "Password for authenticating at the repo server",
                "description_kind": "plain",
                "optional": true,
                "sensitive": true
              },
              "ssh_private_key": {
                "type": "string",
                "description": "SSH private key data for authenticating at the repo server only for Git repos",
                "description_kind": "plain",
                "optional": true,
                "sensitive": true
              },
              "tls_client_cert_data": {
                "type": "string",
                "description": "TLS client cert data for authenticating at the repo server",
                "description_kind": "plain",
                "optional": true
              },
              "tls_client_cert_key": {
                "type": "string",
                "description": "TLS client cert key for authenticating at the repo server ",
                "description_kind": "plain",
                "optional": true,
                "sensitive": true
              },
              "url": {
                "type": "string",
                "description": "URL is the URL that these credentials matches to",
                "description_kind": "plain",
                "required": true
              },
              "username": {
                "type": "string",
                "description": "Username for authenticating at the repo server",
                "description_kind": "plain",
                "optional": true
              }
            },
            "description_kind": "plain"
          }
        }
      }
    }
  }
}
