{
  "format_version": "1.0",
  "provider_schemas": {
    "registry.terraform.io/aviatrixsystems/aviatrix": {
      "provider": {
        "version": 0,
        "block": {
          "attributes": {
            "controller_ip": {
              "type": "string",
              "description_kind": "plain",
              "required": true
            },
            "password": {
              "type": "string",
              "description_kind": "plain",
              "required": true
            },
            "path_to_ca_certificate": {
              "type": "string",
              "description_kind": "plain",
              "optional": true
            },
            "skip_version_validation": {
              "type": "bool",
              "description_kind": "plain",
              "optional": true
            },
            "username": {
              "type": "string",
              "description_kind": "plain",
              "required": true
            },
            "verify_ssl_certificate": {
              "type": "bool",
              "description_kind": "plain",
              "optional": true
            }
          },
          "block_types": {
            "ignore_tags": {
              "nesting_mode": "list",
              "block": {
                "attributes": {
                  "key_prefixes": {
                    "type": [
                      "set",
                      "string"
                    ],
                    "description": "Tag key prefixes to ignore across all resources.",
                    "description_kind": "plain",
                    "optional": true
                  },
                  "keys": {
                    "type": [
                      "set",
                      "string"
                    ],
                    "description": "Tag keys to ignore across all resources.",
                    "description_kind": "plain",
                    "optional": true
                  }
                },
                "description": "Configuration block with settings to ignore tags across all resources.",
                "description_kind": "plain"
              },
              "max_items": 1
            }
          },
          "description_kind": "plain"
        }
      },
      "resource_schemas": {
        "aviatrix_account": {
          "version": 0,
          "block": {
            "attributes": {
              "account_name": {
                "type": "string",
                "description": "Account name. This can be used for logging in to CloudN console or UserConnect controller.",
                "description_kind": "plain",
                "required": true
              },
              "alicloud_access_key": {
                "type": "string",
                "description": "Alibaba Cloud Access Key.",
                "description_kind": "plain",
                "optional": true,
                "sensitive": true
              },
              "alicloud_account_id": {
                "type": "string",
                "description": "Alibaba Cloud Account ID to associate with Aviatrix account.",
                "description_kind": "plain",
                "optional": true
              },
              "alicloud_secret_key": {
                "type": "string",
                "description": "Alibaba Cloud Secret Key.",
                "description_kind": "plain",
                "optional": true,
                "sensitive": true
              },
              "arm_application_id": {
                "type": "string",
                "description": "Azure Application ID.",
                "description_kind": "plain",
                "optional": true,
                "sensitive": true
              },
              "arm_application_key": {
                "type": "string",
                "description": "Azure Application Key.",
                "description_kind": "plain",
                "optional": true,
                "sensitive": true
              },
              "arm_directory_id": {
                "type": "string",
                "description": "Azure Directory ID.",
                "description_kind": "plain",
                "optional": true,
                "sensitive": true
              },
              "arm_subscription_id": {
                "type": "string",
                "description": "Azure Subscription ID.",
                "description_kind": "plain",
                "optional": true
              },
              "audit_account": {
                "type": "bool",
                "description": "Enable account audit.",
                "description_kind": "plain",
                "optional": true
              },
              "aws_access_key": {
                "type": "string",
                "description": "AWS Access Key.",
                "description_kind": "plain",
                "optional": true,
                "sensitive": true
              },
              "aws_account_number": {
                "type": "string",
                "description": "AWS Account number to associate with Aviatrix account. Should be 12 digits.",
                "description_kind": "plain",
                "optional": true
              },
              "aws_ca_cert_path": {
                "type": "string",
                "description": "AWS Top Secret Region or Secret Region Custom Certificate Authority file path on the controller.",
                "description_kind": "plain",
                "computed": true
              },
              "aws_gateway_role_app": {
                "type": "string",
                "description": "AWS App role ARN for gateways.",
                "description_kind": "plain",
                "optional": true
              },
              "aws_gateway_role_ec2": {
                "type": "string",
                "description": "AWS EC2 role ARN for gateways.",
                "description_kind": "plain",
                "optional": true
              },
              "aws_iam": {
                "type": "bool",
                "description": "AWS IAM-role based flag.",
                "description_kind": "plain",
                "optional": true
              },
              "aws_role_app": {
                "type": "string",
                "description": "AWS App role ARN.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "aws_role_ec2": {
                "type": "string",
                "description": "AWS EC2 role ARN.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "aws_secret_key": {
                "type": "string",
                "description": "AWS Secret Key.",
                "description_kind": "plain",
                "optional": true,
                "sensitive": true
              },
              "awschina_access_key": {
                "type": "string",
                "description": "AWS China Access Key.",
                "description_kind": "plain",
                "optional": true,
                "sensitive": true
              },
              "awschina_account_number": {
                "type": "string",
                "description": "AWS China Account Number.",
                "description_kind": "plain",
                "optional": true
              },
              "awschina_iam": {
                "type": "bool",
                "description": "AWS China IAM-role based flag.",
                "description_kind": "plain",
                "optional": true
              },
              "awschina_role_app": {
                "type": "string",
                "description": "AWS China App Role ARN.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "awschina_role_ec2": {
                "type": "string",
                "description": "AWS China EC2 Role ARN.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "awschina_secret_key": {
                "type": "string",
                "description": "AWS China Secret Key.",
                "description_kind": "plain",
                "optional": true,
                "sensitive": true
              },
              "awsgov_access_key": {
                "type": "string",
                "description": "AWS Gov Access Key.",
                "description_kind": "plain",
                "optional": true,
                "sensitive": true
              },
              "awsgov_account_number": {
                "type": "string",
                "description": "AWS Gov Account number to associate with Aviatrix account.",
                "description_kind": "plain",
                "optional": true
              },
              "awsgov_iam": {
                "type": "bool",
                "description": "AWSGov IAM-role based flag",
                "description_kind": "plain",
                "optional": true
              },
              "awsgov_role_app": {
                "type": "string",
                "description": "AWSGov App role ARN",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "awsgov_role_ec2": {
                "type": "string",
                "description": "AWSGov EC2 role ARN",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "awsgov_secret_key": {
                "type": "string",
                "description": "AWS Gov Secret Key.",
                "description_kind": "plain",
                "optional": true,
                "sensitive": true
              },
              "awss_account_number": {
                "type": "string",
                "description": "AWS Secret Region Account Number.",
                "description_kind": "plain",
                "optional": true
              },
              "awss_ca_chain_cert": {
                "type": "string",
                "description": "AWS Secret Region Custom Certificate Authority file path.",
                "description_kind": "plain",
                "optional": true,
                "sensitive": true
              },
              "awss_cap_account_name": {
                "type": "string",
                "description": "AWS Secret Region CAP Account Name.",
                "description_kind": "plain",
                "optional": true
              },
              "awss_cap_agency": {
                "type": "string",
                "description": "AWS Secret Region CAP Agency.",
                "description_kind": "plain",
                "optional": true
              },
              "awss_cap_cert": {
                "type": "string",
                "description": "AWS Secret Region CAP Certificate file path.",
                "description_kind": "plain",
                "optional": true,
                "sensitive": true
              },
              "awss_cap_cert_key": {
                "type": "string",
                "description": "AWS Secret Region CAP Certificate Key file path.",
                "description_kind": "plain",
                "optional": true,
                "sensitive": true
              },
              "awss_cap_cert_key_path": {
                "type": "string",
                "description": "AWS Secret Region CAP Certificate Key file path on the controller.",
                "description_kind": "plain",
                "computed": true
              },
              "awss_cap_cert_path": {
                "type": "string",
                "description": "AWS Secret Region CAP Certificate file path on the controller.",
                "description_kind": "plain",
                "computed": true
              },
              "awss_cap_role_name": {
                "type": "string",
                "description": "AWS Secret Region CAP Role Name.",
                "description_kind": "plain",
                "optional": true
              },
              "awss_cap_url": {
                "type": "string",
                "description": "AWS Secret Region CAP Endpoint URL.",
                "description_kind": "plain",
                "optional": true
              },
              "awsts_account_number": {
                "type": "string",
                "description": "AWS Top Secret Region Account Number.",
                "description_kind": "plain",
                "optional": true
              },
              "awsts_ca_chain_cert": {
                "type": "string",
                "description": "AWS Top Secret Region Custom Certificate Authority file path.",
                "description_kind": "plain",
                "optional": true,
                "sensitive": true
              },
              "awsts_cap_agency": {
                "type": "string",
                "description": "AWS Top Secret Region CAP Agency.",
                "description_kind": "plain",
                "optional": true
              },
              "awsts_cap_cert": {
                "type": "string",
                "description": "AWS Top Secret Region CAP Certificate file path.",
                "description_kind": "plain",
                "optional": true,
                "sensitive": true
              },
              "awsts_cap_cert_key": {
                "type": "string",
                "description": "AWS Top Secret Region CAP Certificate Key file path.",
                "description_kind": "plain",
                "optional": true,
                "sensitive": true
              },
              "awsts_cap_cert_key_path": {
                "type": "string",
                "description": "AWS Top Secret Region CAP Certificate Key file path on the controller.",
                "description_kind": "plain",
                "computed": true
              },
              "awsts_cap_cert_path": {
                "type": "string",
                "description": "AWS Top Secret Region CAP Certificate file path on the controller.",
                "description_kind": "plain",
                "computed": true
              },
              "awsts_cap_mission": {
                "type": "string",
                "description": "AWS Top Secret Region CAP Mission.",
                "description_kind": "plain",
                "optional": true
              },
              "awsts_cap_role_name": {
                "type": "string",
                "description": "AWS Top Secret Region CAP Role Name.",
                "description_kind": "plain",
                "optional": true
              },
              "awsts_cap_url": {
                "type": "string",
                "description": "AWS Top Secret Region CAP Endpoint URL.",
                "description_kind": "plain",
                "optional": true
              },
              "azurechina_application_id": {
                "type": "string",
                "description": "Azure China Application ID.",
                "description_kind": "plain",
                "optional": true,
                "sensitive": true
              },
              "azurechina_application_key": {
                "type": "string",
                "description": "Azure China Application Key.",
                "description_kind": "plain",
                "optional": true,
                "sensitive": true
              },
              "azurechina_directory_id": {
                "type": "string",
                "description": "Azure China Directory ID.",
                "description_kind": "plain",
                "optional": true,
                "sensitive": true
              },
              "azurechina_subscription_id": {
                "type": "string",
                "description": "Azure China Subscription ID.",
                "description_kind": "plain",
                "optional": true
              },
              "azuregov_application_id": {
                "type": "string",
                "description": "Azure Gov Application ID.",
                "description_kind": "plain",
                "optional": true,
                "sensitive": true
              },
              "azuregov_application_key": {
                "type": "string",
                "description": "Azure Gov Application Key.",
                "description_kind": "plain",
                "optional": true,
                "sensitive": true
              },
              "azuregov_directory_id": {
                "type": "string",
                "description": "Azure Gov Directory ID.",
                "description_kind": "plain",
                "optional": true,
                "sensitive": true
              },
              "azuregov_subscription_id": {
                "type": "string",
                "description": "Azure Gov Subscription ID.",
                "description_kind": "plain",
                "optional": true
              },
              "cloud_type": {
                "type": "number",
                "description": "Type of cloud service provider.",
                "description_kind": "plain",
                "required": true
              },
              "edge_csp_password": {
                "type": "string",
                "description": "Edge CSP password.",
                "description_kind": "plain",
                "optional": true,
                "sensitive": true
              },
              "edge_csp_username": {
                "type": "string",
                "description": "Edge CSP username.",
                "description_kind": "plain",
                "optional": true
              },
              "gcloud_project_credentials_filepath": {
                "type": "string",
                "description": "GCloud Project credentials local file path.",
                "description_kind": "plain",
                "optional": true
              },
              "gcloud_project_id": {
                "type": "string",
                "description": "GCloud Project ID.",
                "description_kind": "plain",
                "optional": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "oci_api_private_key_filepath": {
                "type": "string",
                "description": "OCI API Private Key local file path.",
                "description_kind": "plain",
                "optional": true,
                "sensitive": true
              },
              "oci_compartment_id": {
                "type": "string",
                "description": "OCI Compartment OCID.",
                "description_kind": "plain",
                "optional": true,
                "sensitive": true
              },
              "oci_tenancy_id": {
                "type": "string",
                "description": "OCI Tenancy OCID.",
                "description_kind": "plain",
                "optional": true,
                "sensitive": true
              },
              "oci_user_id": {
                "type": "string",
                "description": "OCI User OCID.",
                "description_kind": "plain",
                "optional": true,
                "sensitive": true
              },
              "rbac_groups": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "List of RBAC permission group names.",
                "description_kind": "plain",
                "optional": true
              }
            },
            "description_kind": "plain"
          }
        },
        "aviatrix_account_user": {
          "version": 0,
          "block": {
            "attributes": {
              "email": {
                "type": "string",
                "description": "Email of address of account user to be created.",
                "description_kind": "plain",
                "required": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "password": {
                "type": "string",
                "description": "Login password for the account user to be created.",
                "description_kind": "plain",
                "required": true,
                "sensitive": true
              },
              "username": {
                "type": "string",
                "description": "Name of account user to be created. It can only include alphanumeric characters(lower case only), hyphens, dots or underscores. 1 to 80 in length. No spaces are allowed.",
                "description_kind": "plain",
                "required": true
              }
            },
            "description_kind": "plain"
          }
        },
        "aviatrix_aws_guard_duty": {
          "version": 0,
          "block": {
            "attributes": {
              "account_name": {
                "type": "string",
                "description": "Account name",
                "description_kind": "plain",
                "required": true
              },
              "excluded_ips": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "Excluded IPs.",
                "description_kind": "plain",
                "optional": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "region": {
                "type": "string",
                "description": "Region.",
                "description_kind": "plain",
                "required": true
              }
            },
            "description_kind": "plain"
          }
        },
        "aviatrix_aws_peer": {
          "version": 0,
          "block": {
            "attributes": {
              "account_name1": {
                "type": "string",
                "description": "This parameter represents the name of an AWS Cloud-Account in Aviatrix controller.",
                "description_kind": "plain",
                "required": true
              },
              "account_name2": {
                "type": "string",
                "description": "This parameter represents the name of an AWS Cloud-Account in Aviatrix controller.",
                "description_kind": "plain",
                "required": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "rtb_list1": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "List of Route table IDs of VPC1.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "rtb_list2": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "List of Route table IDs of VPC2.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "vpc_id1": {
                "type": "string",
                "description": "VPC-ID of AWS cloud.",
                "description_kind": "plain",
                "required": true
              },
              "vpc_id2": {
                "type": "string",
                "description": "VPC-ID of AWS cloud.",
                "description_kind": "plain",
                "required": true
              },
              "vpc_reg1": {
                "type": "string",
                "description": "Region of AWS cloud.",
                "description_kind": "plain",
                "required": true
              },
              "vpc_reg2": {
                "type": "string",
                "description": "Region of AWS cloud.",
                "description_kind": "plain",
                "required": true
              }
            },
            "description_kind": "plain"
          }
        },
        "aviatrix_aws_tgw": {
          "version": 3,
          "block": {
            "attributes": {
              "account_name": {
                "type": "string",
                "description": "This parameter represents the name of a Cloud-Account in Aviatrix controller.",
                "description_kind": "plain",
                "required": true
              },
              "aws_side_as_number": {
                "type": "string",
                "description": "BGP Local ASN (Autonomous System Number), Integer between 1-4294967294.",
                "description_kind": "plain",
                "required": true
              },
              "cidrs": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "TGW CIDRs.",
                "description_kind": "plain",
                "optional": true
              },
              "cloud_type": {
                "type": "number",
                "description": "Type of cloud service provider, requires an integer value. Supported for AWS (1) and AWS GOV (256). Default value: 1.",
                "description_kind": "plain",
                "optional": true
              },
              "enable_multicast": {
                "type": "bool",
                "description": "Enable Multicast.",
                "description_kind": "plain",
                "optional": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "inspection_mode": {
                "type": "string",
                "description": "Inspection mode. Valid values: 'Domain-based' and 'Connection-based'.",
                "description_kind": "plain",
                "optional": true
              },
              "region": {
                "type": "string",
                "description": "Region of cloud provider.",
                "description_kind": "plain",
                "required": true
              },
              "tgw_id": {
                "type": "string",
                "description": "TGW ID.",
                "description_kind": "plain",
                "computed": true
              },
              "tgw_name": {
                "type": "string",
                "description": "Name of the AWS TGW which is going to be created.",
                "description_kind": "plain",
                "required": true
              }
            },
            "description_kind": "plain"
          }
        },
        "aviatrix_aws_tgw_connect": {
          "version": 0,
          "block": {
            "attributes": {
              "connect_attachment_id": {
                "type": "string",
                "description": "Connect Attachment ID.",
                "description_kind": "plain",
                "computed": true
              },
              "connection_name": {
                "type": "string",
                "description": "Connection Name.",
                "description_kind": "plain",
                "required": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "network_domain_name": {
                "type": "string",
                "description": "Network Domain Name.",
                "description_kind": "plain",
                "required": true
              },
              "tgw_name": {
                "type": "string",
                "description": "AWS TGW Name.",
                "description_kind": "plain",
                "required": true
              },
              "transport_attachment_id": {
                "type": "string",
                "description": "Transport Attachment ID.",
                "description_kind": "plain",
                "computed": true
              },
              "transport_vpc_id": {
                "type": "string",
                "description": "Transport Attachment VPC ID.",
                "description_kind": "plain",
                "required": true
              }
            },
            "description_kind": "plain"
          }
        },
        "aviatrix_aws_tgw_connect_peer": {
          "version": 0,
          "block": {
            "attributes": {
              "bgp_inside_cidrs": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "Set of BGP Inside CIDR Blocks.",
                "description_kind": "plain",
                "required": true
              },
              "connect_attachment_id": {
                "type": "string",
                "description": "Connect Attachment ID.",
                "description_kind": "plain",
                "required": true
              },
              "connect_peer_id": {
                "type": "string",
                "description": "Connect Peer ID.",
                "description_kind": "plain",
                "computed": true
              },
              "connect_peer_name": {
                "type": "string",
                "description": "Connect Peer Name.",
                "description_kind": "plain",
                "required": true
              },
              "connection_name": {
                "type": "string",
                "description": "AWS TGW Connect connection name.",
                "description_kind": "plain",
                "required": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "peer_as_number": {
                "type": "string",
                "description": "Peer AS Number.",
                "description_kind": "plain",
                "required": true
              },
              "peer_gre_address": {
                "type": "string",
                "description": "Peer GRE IP Address.",
                "description_kind": "plain",
                "required": true
              },
              "tgw_gre_address": {
                "type": "string",
                "description": "AWS TGW GRE IP Address.",
                "description_kind": "plain",
                "optional": true
              },
              "tgw_name": {
                "type": "string",
                "description": "AWS TGW Name.",
                "description_kind": "plain",
                "required": true
              }
            },
            "description_kind": "plain"
          }
        },
        "aviatrix_aws_tgw_directconnect": {
          "version": 0,
          "block": {
            "attributes": {
              "allowed_prefix": {
                "type": "string",
                "description": "Public IP address. Example: '40.0.0.0'.",
                "description_kind": "plain",
                "required": true
              },
              "directconnect_account_name": {
                "type": "string",
                "description": "This parameter represents the name of an Account in Aviatrix controller.",
                "description_kind": "plain",
                "required": true
              },
              "dx_gateway_id": {
                "type": "string",
                "description": "This parameter represents the name of a Direct Connect Gateway ID.",
                "description_kind": "plain",
                "required": true
              },
              "enable_learned_cidrs_approval": {
                "type": "bool",
                "description": "Switch to enable/disable encrypted transit approval for direct connection. Valid values: true, false.",
                "description_kind": "plain",
                "optional": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "network_domain_name": {
                "type": "string",
                "description": "The name of an Aviatrix network domain, to which the direct connect gateway will be attached.",
                "description_kind": "plain",
                "required": true
              },
              "tgw_name": {
                "type": "string",
                "description": "This parameter represents the name of an AWS TGW.",
                "description_kind": "plain",
                "required": true
              }
            },
            "description_kind": "plain"
          }
        },
        "aviatrix_aws_tgw_intra_domain_inspection": {
          "version": 0,
          "block": {
            "attributes": {
              "firewall_domain_name": {
                "type": "string",
                "description": "Firewall domain name.",
                "description_kind": "plain",
                "required": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "route_domain_name": {
                "type": "string",
                "description": "Route domain name.",
                "description_kind": "plain",
                "required": true
              },
              "tgw_name": {
                "type": "string",
                "description": "AWS TGW name.",
                "description_kind": "plain",
                "required": true
              }
            },
            "description_kind": "plain"
          }
        },
        "aviatrix_aws_tgw_network_domain": {
          "version": 0,
          "block": {
            "attributes": {
              "aviatrix_firewall": {
                "type": "bool",
                "description": "Set to true if the network domain is an aviatrix firewall domain.",
                "description_kind": "plain",
                "optional": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "description": "Network domain name.",
                "description_kind": "plain",
                "required": true
              },
              "native_egress": {
                "type": "bool",
                "description": "Set to true if the network domain is a native egress domain.",
                "description_kind": "plain",
                "optional": true
              },
              "native_firewall": {
                "type": "bool",
                "description": "Set to true if the network domain is a native firewall domain.",
                "description_kind": "plain",
                "optional": true
              },
              "tgw_name": {
                "type": "string",
                "description": "AWS TGW name.",
                "description_kind": "plain",
                "required": true
              }
            },
            "description_kind": "plain"
          }
        },
        "aviatrix_aws_tgw_peering": {
          "version": 0,
          "block": {
            "attributes": {
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "tgw_name1": {
                "type": "string",
                "description": "Name of the first AWS tgw to make a peer pair.",
                "description_kind": "plain",
                "required": true
              },
              "tgw_name2": {
                "type": "string",
                "description": "Name of the second AWS tgw to make a peer pair.",
                "description_kind": "plain",
                "required": true
              }
            },
            "description_kind": "plain"
          }
        },
        "aviatrix_aws_tgw_peering_domain_conn": {
          "version": 0,
          "block": {
            "attributes": {
              "domain_name1": {
                "type": "string",
                "description": "The name of the source domain to make a connection.",
                "description_kind": "plain",
                "required": true
              },
              "domain_name2": {
                "type": "string",
                "description": "The name of the destination domain to make a connection.",
                "description_kind": "plain",
                "required": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "tgw_name1": {
                "type": "string",
                "description": "The AWS tgw name of the source domain to make a connection.",
                "description_kind": "plain",
                "required": true
              },
              "tgw_name2": {
                "type": "string",
                "description": "The AWS tgw name of the destination domain to make a connection.",
                "description_kind": "plain",
                "required": true
              }
            },
            "description_kind": "plain"
          }
        },
        "aviatrix_aws_tgw_transit_gateway_attachment": {
          "version": 0,
          "block": {
            "attributes": {
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "region": {
                "type": "string",
                "description": "Region of cloud provider.",
                "description_kind": "plain",
                "required": true
              },
              "tgw_name": {
                "type": "string",
                "description": "Name of the AWS TGW.",
                "description_kind": "plain",
                "required": true
              },
              "transit_gateway_name": {
                "type": "string",
                "description": "Name of the transit gateway to be attached to tgw.",
                "description_kind": "plain",
                "required": true
              },
              "vpc_account_name": {
                "type": "string",
                "description": "This parameter represents the name of a Cloud-Account in Aviatrix controller.",
                "description_kind": "plain",
                "required": true
              },
              "vpc_id": {
                "type": "string",
                "description": "This parameter represents the ID of the VPC.",
                "description_kind": "plain",
                "required": true
              }
            },
            "description_kind": "plain"
          }
        },
        "aviatrix_aws_tgw_vpc_attachment": {
          "version": 0,
          "block": {
            "attributes": {
              "customized_route_advertisement": {
                "type": "string",
                "description": "Advanced option. Customized route(s) to be advertised to other VPCs that are connected to the same TGW.",
                "description_kind": "plain",
                "optional": true
              },
              "customized_routes": {
                "type": "string",
                "description": "Advanced option. Customized Spoke VPC Routes. It allows the admin to enter non-RFC1918 routes in the VPC route table targeting the TGW.",
                "description_kind": "plain",
                "optional": true
              },
              "disable_local_route_propagation": {
                "type": "bool",
                "description": "Advanced option. If set to true, it disables automatic route propagation of this VPC to other VPCs within the same network domain.",
                "description_kind": "plain",
                "optional": true
              },
              "edge_attachment": {
                "type": "string",
                "description": "Edge attachment ID. To allow access to the private IP of the MGMT interface of the Firewalls, set this attribute to enable Management Access From Onprem. This feature advertises the Firewalls private MGMT subnet to your Edge domain.",
                "description_kind": "plain",
                "optional": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "network_domain_name": {
                "type": "string",
                "description": "The name of the network domain.",
                "description_kind": "plain",
                "required": true
              },
              "region": {
                "type": "string",
                "description": "Region of cloud provider.",
                "description_kind": "plain",
                "required": true
              },
              "route_tables": {
                "type": "string",
                "description": "Advanced option. Route tables separated by ',' to participate in TGW Orchestrator, i.e., learned routes will be propagated to these route tables.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "subnets": {
                "type": "string",
                "description": "Advanced option. VPC subnets separated by ',' to attach to the VPC. If left blank, Aviatrix Controller automatically selects a subnet representing each AZ for the VPC attachment.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "tgw_name": {
                "type": "string",
                "description": "Name of the AWS TGW.",
                "description_kind": "plain",
                "required": true
              },
              "vpc_account_name": {
                "type": "string",
                "description": "This parameter represents the name of a Cloud-Account in Aviatrix controller.",
                "description_kind": "plain",
                "required": true
              },
              "vpc_id": {
                "type": "string",
                "description": "This parameter represents the ID of the VPC.",
                "description_kind": "plain",
                "required": true
              }
            },
            "description_kind": "plain"
          }
        },
        "aviatrix_aws_tgw_vpn_conn": {
          "version": 0,
          "block": {
            "attributes": {
              "connection_name": {
                "type": "string",
                "description": "Unique name of the connection.",
                "description_kind": "plain",
                "required": true
              },
              "connection_type": {
                "type": "string",
                "description": "Connection type. Valid values: 'dynamic', 'static'. 'dynamic' stands for a BGP VPN connection; 'static' stands for a static VPN connection. Default value: 'dynamic'.",
                "description_kind": "plain",
                "optional": true
              },
              "enable_global_acceleration": {
                "type": "bool",
                "description": "Enable Global Acceleration.",
                "description_kind": "plain",
                "optional": true
              },
              "enable_learned_cidrs_approval": {
                "type": "bool",
                "description": "Switch to enable/disable encrypted transit approval for vpn connection. Valid values: true, false.",
                "description_kind": "plain",
                "optional": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "inside_ip_cidr_tun_1": {
                "type": "string",
                "description": "Inside IP CIDR for Tunnel 1. A /30 CIDR in 169.254.0.0/16.",
                "description_kind": "plain",
                "optional": true
              },
              "inside_ip_cidr_tun_2": {
                "type": "string",
                "description": "Inside IP CIDR for Tunnel 2. A /30 CIDR in 169.254.0.0/16.",
                "description_kind": "plain",
                "optional": true
              },
              "pre_shared_key_tun_1": {
                "type": "string",
                "description": "Pre-Shared Key for Tunnel 1. A 8-64 character string with alphanumeric, underscore(_) and dot(.). It cannot start with 0",
                "description_kind": "plain",
                "optional": true,
                "sensitive": true
              },
              "pre_shared_key_tun_2": {
                "type": "string",
                "description": "Pre-Shared Key for Tunnel 2. A 8-64 character string with alphanumeric, underscore(_) and dot(.). It cannot start with 0",
                "description_kind": "plain",
                "optional": true,
                "sensitive": true
              },
              "public_ip": {
                "type": "string",
                "description": "Public IP address. Example: '40.0.0.0'.",
                "description_kind": "plain",
                "required": true
              },
              "remote_as_number": {
                "type": "string",
                "description": "AWS side as a number. Integer between 1-4294967294. Example: '12'. Required for a dynamic VPN connection.",
                "description_kind": "plain",
                "optional": true
              },
              "remote_cidr": {
                "type": "string",
                "description": "Remote CIDRs joined as a string with ','. Required for a static VPN connection.",
                "description_kind": "plain",
                "optional": true
              },
              "route_domain_name": {
                "type": "string",
                "description": "The name of a route domain, to which the vpn will be attached.",
                "description_kind": "plain",
                "required": true
              },
              "tgw_name": {
                "type": "string",
                "description": "This parameter represents the name of an AWS TGW.",
                "description_kind": "plain",
                "required": true
              },
              "vpn_id": {
                "type": "string",
                "description": "ID of the vpn connection.",
                "description_kind": "plain",
                "computed": true
              },
              "vpn_tunnel_data": {
                "type": [
                  "list",
                  [
                    "object",
                    {
                      "last_status_change_time": "string",
                      "route_count": "number",
                      "status": "string",
                      "status_message": "string",
                      "tgw_asn": "string",
                      "tunnel_name": "string",
                      "vpn_inside_address": "string",
                      "vpn_outside_address": "string"
                    }
                  ]
                ],
                "description": "VPN tunnel data.",
                "description_kind": "plain",
                "computed": true
              }
            },
            "description_kind": "plain"
          }
        },
        "aviatrix_azure_peer": {
          "version": 0,
          "block": {
            "attributes": {
              "account_name1": {
                "type": "string",
                "description": "This parameter represents the name of an Azure Cloud-Account in Aviatrix controller.",
                "description_kind": "plain",
                "required": true
              },
              "account_name2": {
                "type": "string",
                "description": "This parameter represents the name of an Azure Cloud-Account in Aviatrix controller.",
                "description_kind": "plain",
                "required": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "vnet_cidr1": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "List of VNet CIDR of vnet_name_resource_group1.",
                "description_kind": "plain",
                "computed": true
              },
              "vnet_cidr2": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "List of VNet CIDR of vnet_name_resource_group2.",
                "description_kind": "plain",
                "computed": true
              },
              "vnet_name_resource_group1": {
                "type": "string",
                "description": "VNet-Name of Azure cloud.",
                "description_kind": "plain",
                "required": true
              },
              "vnet_name_resource_group2": {
                "type": "string",
                "description": "VNet-Name of Azure cloud.",
                "description_kind": "plain",
                "required": true
              },
              "vnet_reg1": {
                "type": "string",
                "description": "Region of Azure cloud.",
                "description_kind": "plain",
                "required": true
              },
              "vnet_reg2": {
                "type": "string",
                "description": "Region of Azure cloud.",
                "description_kind": "plain",
                "required": true
              }
            },
            "description_kind": "plain"
          }
        },
        "aviatrix_azure_spoke_native_peering": {
          "version": 0,
          "block": {
            "attributes": {
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "spoke_account_name": {
                "type": "string",
                "description": "An Aviatrix account that corresponds to a subscription in Azure.",
                "description_kind": "plain",
                "required": true
              },
              "spoke_region": {
                "type": "string",
                "description": "Spoke VNet region.",
                "description_kind": "plain",
                "required": true
              },
              "spoke_vpc_id": {
                "type": "string",
                "description": "Combination of the Spoke VNet name and resource group.",
                "description_kind": "plain",
                "required": true
              },
              "transit_gateway_name": {
                "type": "string",
                "description": "Name of an azure transit gateway with transit firenet enabled.",
                "description_kind": "plain",
                "required": true
              }
            },
            "description_kind": "plain"
          }
        },
        "aviatrix_azure_vng_conn": {
          "version": 0,
          "block": {
            "attributes": {
              "attached": {
                "type": "bool",
                "description": "VNG attached or not",
                "description_kind": "plain",
                "computed": true
              },
              "connection_name": {
                "type": "string",
                "description": "Connection name",
                "description_kind": "plain",
                "required": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "primary_gateway_name": {
                "type": "string",
                "description": "Primary gateway name",
                "description_kind": "plain",
                "required": true
              },
              "vng_name": {
                "type": "string",
                "description": "VNG name",
                "description_kind": "plain",
                "computed": true
              },
              "vpc_id": {
                "type": "string",
                "description": "VPC ID",
                "description_kind": "plain",
                "computed": true
              }
            },
            "description_kind": "plain"
          }
        },
        "aviatrix_centralized_transit_firenet": {
          "version": 0,
          "block": {
            "attributes": {
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "primary_firenet_gw_name": {
                "type": "string",
                "description": "Primary firenet gateway name.",
                "description_kind": "plain",
                "required": true
              },
              "secondary_firenet_gw_name": {
                "type": "string",
                "description": "Secondary firenet gateway name.",
                "description_kind": "plain",
                "required": true
              }
            },
            "description_kind": "plain"
          }
        },
        "aviatrix_cloudn_registration": {
          "version": 0,
          "block": {
            "attributes": {
              "address": {
                "type": "string",
                "description": "CloudN IP Address or FQDN.",
                "description_kind": "plain",
                "required": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "local_as_number": {
                "type": "string",
                "description": "Changes the Aviatrix CloudN ASN number before you setup Aviatrix Transit Gateway connection configurations.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "description": "CloudN name to register on controller.",
                "description_kind": "plain",
                "required": true
              },
              "password": {
                "type": "string",
                "description": "CloudN password.",
                "description_kind": "plain",
                "required": true,
                "sensitive": true
              },
              "prepend_as_path": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "AS path prepend.",
                "description_kind": "plain",
                "optional": true
              },
              "username": {
                "type": "string",
                "description": "CloudN username.",
                "description_kind": "plain",
                "required": true
              }
            },
            "description_kind": "plain"
          }
        },
        "aviatrix_cloudn_transit_gateway_attachment": {
          "version": 0,
          "block": {
            "attributes": {
              "cloudn_bgp_asn": {
                "type": "string",
                "description": "CloudN BGP AS Number.",
                "description_kind": "plain",
                "required": true
              },
              "cloudn_lan_interface_neighbor_bgp_asn": {
                "type": "string",
                "description": "CloudN LAN Interface Neighbor's BGP AS Number.",
                "description_kind": "plain",
                "required": true
              },
              "cloudn_lan_interface_neighbor_ip": {
                "type": "string",
                "description": "CloudN LAN Interface Neighbor's IP.",
                "description_kind": "plain",
                "required": true
              },
              "connection_name": {
                "type": "string",
                "description": "Connection name.",
                "description_kind": "plain",
                "required": true
              },
              "device_name": {
                "type": "string",
                "description": "Device name.",
                "description_kind": "plain",
                "required": true
              },
              "enable_jumbo_frame": {
                "type": "bool",
                "description": "Enable jumbo frame.",
                "description_kind": "plain",
                "optional": true
              },
              "enable_over_private_network": {
                "type": "bool",
                "description": "Enable over private network.",
                "description_kind": "plain",
                "optional": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "prepend_as_path": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "AS path prepend.",
                "description_kind": "plain",
                "optional": true
              },
              "transit_gateway_bgp_asn": {
                "type": "string",
                "description": "Transit Gateway BGP AS Number.",
                "description_kind": "plain",
                "required": true
              },
              "transit_gateway_name": {
                "type": "string",
                "description": "Transit Gateway name.",
                "description_kind": "plain",
                "required": true
              }
            },
            "description_kind": "plain"
          }
        },
        "aviatrix_cloudwatch_agent": {
          "version": 0,
          "block": {
            "attributes": {
              "cloudwatch_role_arn": {
                "type": "string",
                "description": "CloudWatch role ARN.",
                "description_kind": "plain",
                "required": true
              },
              "excluded_gateways": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "List of excluded gateways.",
                "description_kind": "plain",
                "optional": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "log_group_name": {
                "type": "string",
                "description": "Log group name.",
                "description_kind": "plain",
                "optional": true
              },
              "region": {
                "type": "string",
                "description": "Name of AWS region.",
                "description_kind": "plain",
                "required": true
              },
              "status": {
                "type": "string",
                "description": "Enabled or not.",
                "description_kind": "plain",
                "computed": true
              }
            },
            "description_kind": "plain"
          }
        },
        "aviatrix_controller_bgp_max_as_limit_config": {
          "version": 0,
          "block": {
            "attributes": {
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "max_as_limit": {
                "type": "number",
                "description": "The maximum AS path limit allowed by transit gateways when handling BGP/Peering route propagation.",
                "description_kind": "plain",
                "required": true
              }
            },
            "description_kind": "plain"
          }
        },
        "aviatrix_controller_cert_domain_config": {
          "version": 0,
          "block": {
            "attributes": {
              "cert_domain": {
                "type": "string",
                "description": "Domain name that is used in FQDN for generating cert.",
                "description_kind": "plain",
                "optional": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              }
            },
            "description_kind": "plain"
          }
        },
        "aviatrix_controller_config": {
          "version": 0,
          "block": {
            "attributes": {
              "aws_guard_duty_scanning_interval": {
                "type": "number",
                "description": "Scanning Interval for AWS Guard Duty.",
                "description_kind": "plain",
                "optional": true
              },
              "backup_account_name": {
                "type": "string",
                "description": "This parameter represents the name of a Cloud-Account in Aviatrix controller.",
                "description_kind": "plain",
                "optional": true
              },
              "backup_bucket_name": {
                "type": "string",
                "description": "Bucket name. Required for AWS, AWSGov, GCP and OCI.",
                "description_kind": "plain",
                "optional": true
              },
              "backup_cloud_type": {
                "type": "number",
                "description": "Type of cloud service provider, requires an integer value. Use 1 for AWS.",
                "description_kind": "plain",
                "optional": true
              },
              "backup_configuration": {
                "type": "bool",
                "description": "Switch to enable/disable controller cloudn backup config.",
                "description_kind": "plain",
                "optional": true
              },
              "backup_container_name": {
                "type": "string",
                "description": "Container name. Required for Azure.",
                "description_kind": "plain",
                "optional": true
              },
              "backup_region": {
                "type": "string",
                "description": "Name of region. Required for Azure and OCI.",
                "description_kind": "plain",
                "optional": true
              },
              "backup_storage_name": {
                "type": "string",
                "description": "Storage name. Required for Azure.",
                "description_kind": "plain",
                "optional": true
              },
              "ca_certificate_file": {
                "type": "string",
                "description": "CA certificate file.",
                "description_kind": "plain",
                "optional": true,
                "sensitive": true
              },
              "ca_certificate_file_path": {
                "type": "string",
                "description": "File path to the CA certificate.",
                "description_kind": "plain",
                "optional": true
              },
              "current_version": {
                "type": "string",
                "description": "Current version of the controller.",
                "description_kind": "plain",
                "computed": true
              },
              "enable_vpc_dns_server": {
                "type": "bool",
                "description": "Enable VPC/VNET DNS Server.",
                "description_kind": "plain",
                "optional": true
              },
              "fqdn_exception_rule": {
                "type": "bool",
                "description": "A system-wide mode. Default: true.",
                "description_kind": "plain",
                "optional": true
              },
              "http_access": {
                "type": "bool",
                "description": "Switch for http access. Default: false.",
                "description_kind": "plain",
                "optional": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "manage_gateway_upgrades": {
                "type": "bool",
                "description": "If true, aviatrix_controller_config will upgrade all gateways when target_version is set. If false, only the controller will be upgraded when target_version is set. In that case gateway upgrades should be handled in each gateway resource individually using the software_version and image_version attributes.",
                "description_kind": "plain",
                "optional": true
              },
              "multiple_backups": {
                "type": "bool",
                "description": "Switch to enable the controller to backup up to a maximum of 3 rotating backups.",
                "description_kind": "plain",
                "optional": true
              },
              "previous_version": {
                "type": "string",
                "description": "Previous version of the controller.",
                "description_kind": "plain",
                "computed": true
              },
              "server_private_key_file": {
                "type": "string",
                "description": "Server private key file.",
                "description_kind": "plain",
                "optional": true,
                "sensitive": true
              },
              "server_private_key_file_path": {
                "type": "string",
                "description": "File path to the server private key.",
                "description_kind": "plain",
                "optional": true
              },
              "server_public_certificate_file": {
                "type": "string",
                "description": "Server public certificate file.",
                "description_kind": "plain",
                "optional": true,
                "sensitive": true
              },
              "server_public_certificate_file_path": {
                "type": "string",
                "description": "File path to the server public certificate.",
                "description_kind": "plain",
                "optional": true
              },
              "target_version": {
                "type": "string",
                "description": "The release version number to which the controller will be upgraded to.",
                "description_kind": "plain",
                "optional": true
              },
              "version": {
                "type": "string",
                "description": "Current version of the controller without the build number.",
                "description_kind": "plain",
                "computed": true
              }
            },
            "description_kind": "plain"
          }
        },
        "aviatrix_controller_email_config": {
          "version": 0,
          "block": {
            "attributes": {
              "admin_alert_email": {
                "type": "string",
                "description": "Email to receive important account and certification information.",
                "description_kind": "plain",
                "required": true
              },
              "admin_alert_email_verified": {
                "type": "bool",
                "description": "Whether admin alert notification email is verified.",
                "description_kind": "plain",
                "computed": true
              },
              "critical_alert_email": {
                "type": "string",
                "description": "Email to receive field notices and critical notices.",
                "description_kind": "plain",
                "required": true
              },
              "critical_alert_email_verified": {
                "type": "bool",
                "description": "Whether critical alert notification email is verified.",
                "description_kind": "plain",
                "computed": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "security_event_email": {
                "type": "string",
                "description": "Email to receive security and CVE (Common Vulnerabilities and Exposures) notification emails.",
                "description_kind": "plain",
                "required": true
              },
              "security_event_email_verified": {
                "type": "bool",
                "description": "Whether security event notification email is verified.",
                "description_kind": "plain",
                "computed": true
              },
              "status_change_email": {
                "type": "string",
                "description": "Email to receive system/tunnel status notification emails.",
                "description_kind": "plain",
                "required": true
              },
              "status_change_email_verified": {
                "type": "bool",
                "description": "Whether status change notification email is verified.",
                "description_kind": "plain",
                "computed": true
              },
              "status_change_notification_interval": {
                "type": "number",
                "description": "Status change notification interval in seconds.",
                "description_kind": "plain",
                "optional": true
              }
            },
            "description_kind": "plain"
          }
        },
        "aviatrix_controller_email_exception_notification_config": {
          "version": 0,
          "block": {
            "attributes": {
              "enable_email_exception_notification": {
                "type": "bool",
                "description": "Enable email exception notification.",
                "description_kind": "plain",
                "optional": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              }
            },
            "description_kind": "plain"
          }
        },
        "aviatrix_controller_gateway_keepalive_config": {
          "version": 0,
          "block": {
            "attributes": {
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "keepalive_speed": {
                "type": "string",
                "description": "Gateway keepalive speed.",
                "description_kind": "plain",
                "required": true
              }
            },
            "description_kind": "plain"
          }
        },
        "aviatrix_controller_private_mode_config": {
          "version": 0,
          "block": {
            "attributes": {
              "copilot_instance_id": {
                "type": "string",
                "description": "Copilot instance ID to associate with the Controller for Private Mode.",
                "description_kind": "plain",
                "optional": true
              },
              "enable_private_mode": {
                "type": "bool",
                "description": "Whether to enable Private Mode on the Controller.",
                "description_kind": "plain",
                "required": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "proxies": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "Set of proxies.",
                "description_kind": "plain",
                "optional": true
              }
            },
            "description_kind": "plain"
          }
        },
        "aviatrix_controller_private_oob": {
          "version": 0,
          "block": {
            "attributes": {
              "enable_private_oob": {
                "type": "bool",
                "description": "Switch to enable/disable Aviatrix controller private OOB.",
                "description_kind": "plain",
                "optional": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              }
            },
            "description_kind": "plain"
          }
        },
        "aviatrix_controller_security_group_management_config": {
          "version": 0,
          "block": {
            "attributes": {
              "account_name": {
                "type": "string",
                "description": "Cloud account name of user.",
                "description_kind": "plain",
                "optional": true
              },
              "enable_security_group_management": {
                "type": "bool",
                "description": "Used to manage the Controller instance’s inbound rules from gateways.",
                "description_kind": "plain",
                "required": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              }
            },
            "description_kind": "plain"
          }
        },
        "aviatrix_copilot_association": {
          "version": 0,
          "block": {
            "attributes": {
              "copilot_address": {
                "type": "string",
                "description": "CoPilot IP Address or Hostname.",
                "description_kind": "plain",
                "required": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              }
            },
            "description_kind": "plain"
          }
        },
        "aviatrix_copilot_security_group_management_config": {
          "version": 0,
          "block": {
            "attributes": {
              "account_name": {
                "type": "string",
                "description": "Access account name.",
                "description_kind": "plain",
                "optional": true
              },
              "cloud_type": {
                "type": "number",
                "description": "Cloud type.",
                "description_kind": "plain",
                "optional": true
              },
              "enable_copilot_security_group_management": {
                "type": "bool",
                "description": "Switch to enable copilot security group management.",
                "description_kind": "plain",
                "required": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "instance_id": {
                "type": "string",
                "description": "Copilot instance ID.",
                "description_kind": "plain",
                "optional": true
              },
              "region": {
                "type": "string",
                "description": "Copilot region. Valid for AWS and Azure.",
                "description_kind": "plain",
                "optional": true
              },
              "vpc_id": {
                "type": "string",
                "description": "VPC ID.",
                "description_kind": "plain",
                "optional": true
              },
              "zone": {
                "type": "string",
                "description": "Copilot zone. Valid for GCP.",
                "description_kind": "plain",
                "optional": true
              }
            },
            "description_kind": "plain"
          }
        },
        "aviatrix_datadog_agent": {
          "version": 0,
          "block": {
            "attributes": {
              "api_key": {
                "type": "string",
                "description": "API key.",
                "description_kind": "plain",
                "required": true,
                "sensitive": true
              },
              "excluded_gateways": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "List of excluded gateways.",
                "description_kind": "plain",
                "optional": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "metrics_only": {
                "type": "bool",
                "description": "Only export metrics without exporting logs.",
                "description_kind": "plain",
                "optional": true
              },
              "site": {
                "type": "string",
                "description": "Site preference.",
                "description_kind": "plain",
                "optional": true
              },
              "status": {
                "type": "string",
                "description": "Enabled or not.",
                "description_kind": "plain",
                "computed": true
              }
            },
            "description_kind": "plain"
          }
        },
        "aviatrix_device_interface_config": {
          "version": 0,
          "block": {
            "attributes": {
              "device_name": {
                "type": "string",
                "description": "Name of device.",
                "description_kind": "plain",
                "required": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "wan_primary_interface": {
                "type": "string",
                "description": "WAN primary interface of the device.",
                "description_kind": "plain",
                "required": true
              },
              "wan_primary_interface_public_ip": {
                "type": "string",
                "description": "WAN primary interface public IP address.",
                "description_kind": "plain",
                "required": true
              }
            },
            "description_kind": "plain"
          }
        },
        "aviatrix_distributed_firewalling_config": {
          "version": 0,
          "block": {
            "attributes": {
              "enable_distributed_firewalling": {
                "type": "bool",
                "description": "Whether to enable Distributed-firewalling.",
                "description_kind": "plain",
                "optional": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              }
            },
            "description_kind": "plain"
          }
        },
        "aviatrix_distributed_firewalling_intra_vpc": {
          "version": 0,
          "block": {
            "attributes": {
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              }
            },
            "block_types": {
              "vpcs": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "account_name": {
                      "type": "string",
                      "description": "Account Name of the VPC.",
                      "description_kind": "plain",
                      "required": true
                    },
                    "region": {
                      "type": "string",
                      "description": "Region of the VPC.",
                      "description_kind": "plain",
                      "required": true
                    },
                    "vpc_id": {
                      "type": "string",
                      "description": "vpc_id of the VPC.",
                      "description_kind": "plain",
                      "required": true
                    }
                  },
                  "description": "Set of distributed-firewalling VPCs.",
                  "description_kind": "plain"
                },
                "min_items": 1
              }
            },
            "description_kind": "plain"
          }
        },
        "aviatrix_distributed_firewalling_policy_list": {
          "version": 0,
          "block": {
            "attributes": {
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              }
            },
            "block_types": {
              "policies": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "action": {
                      "type": "string",
                      "description": "Action for the specified source and destination Smart Groups.Must be one of PERMIT or DENY.",
                      "description_kind": "plain",
                      "required": true
                    },
                    "dst_smart_groups": {
                      "type": [
                        "set",
                        "string"
                      ],
                      "description": "Set of destination Smart Group UUIDs for the policy.",
                      "description_kind": "plain",
                      "required": true
                    },
                    "logging": {
                      "type": "bool",
                      "description": "Whether to enable logging for the policy.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "name": {
                      "type": "string",
                      "description": "Name of the policy.",
                      "description_kind": "plain",
                      "required": true
                    },
                    "priority": {
                      "type": "number",
                      "description": "Priority level of the policy",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "protocol": {
                      "type": "string",
                      "description": "Protocol for the policy to filter.",
                      "description_kind": "plain",
                      "required": true
                    },
                    "src_smart_groups": {
                      "type": [
                        "set",
                        "string"
                      ],
                      "description": "Set of source Smart Group UUIDs for the policy.",
                      "description_kind": "plain",
                      "required": true
                    },
                    "uuid": {
                      "type": "string",
                      "description": "UUID of the policy.",
                      "description_kind": "plain",
                      "computed": true
                    },
                    "watch": {
                      "type": "bool",
                      "description": "Whether to enable watch mode for the policy.",
                      "description_kind": "plain",
                      "optional": true
                    }
                  },
                  "block_types": {
                    "port_ranges": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "hi": {
                            "type": "number",
                            "description": "Upper bound of port range.",
                            "description_kind": "plain",
                            "optional": true
                          },
                          "lo": {
                            "type": "number",
                            "description": "Lower bound of port range.",
                            "description_kind": "plain",
                            "required": true
                          }
                        },
                        "description": "List of port ranges for the policy.",
                        "description_kind": "plain"
                      },
                      "max_items": 64
                    }
                  },
                  "description": "List of distributed-firewalling policies.",
                  "description_kind": "plain"
                },
                "min_items": 1
              }
            },
            "description_kind": "plain"
          }
        },
        "aviatrix_edge_csp": {
          "version": 0,
          "block": {
            "attributes": {
              "account_name": {
                "type": "string",
                "description": "Edge CSP account name.",
                "description_kind": "plain",
                "required": true
              },
              "approved_learned_cidrs": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "Approved learned CIDRs for BGP Spoke Gateway.",
                "description_kind": "plain",
                "optional": true
              },
              "bgp_hold_time": {
                "type": "number",
                "description": "BGP Hold Time for BGP Spoke Gateway. Unit is in seconds. Valid values are between 12 and 360.",
                "description_kind": "plain",
                "optional": true
              },
              "bgp_polling_time": {
                "type": "number",
                "description": "BGP route polling time for BGP Spoke Gateway. Unit is in seconds. Valid values are between 10 and 50.",
                "description_kind": "plain",
                "optional": true
              },
              "compute_node_uuid": {
                "type": "string",
                "description": "Edge CSP compute node UUID.",
                "description_kind": "plain",
                "required": true
              },
              "dns_server_ip": {
                "type": "string",
                "description": "DNS server IP.",
                "description_kind": "plain",
                "optional": true
              },
              "enable_edge_active_standby": {
                "type": "bool",
                "description": "Enables Edge Active-Standby Mode.",
                "description_kind": "plain",
                "optional": true
              },
              "enable_edge_active_standby_preemptive": {
                "type": "bool",
                "description": "Enables Preemptive Mode for Edge Active-Standby, available only with Active-Standby enabled.",
                "description_kind": "plain",
                "optional": true
              },
              "enable_edge_transitive_routing": {
                "type": "bool",
                "description": "Enable Edge transitive routing.",
                "description_kind": "plain",
                "optional": true
              },
              "enable_jumbo_frame": {
                "type": "bool",
                "description": "Enable jumbo frame.",
                "description_kind": "plain",
                "optional": true
              },
              "enable_learned_cidrs_approval": {
                "type": "bool",
                "description": "Switch to enable/disable learned CIDR approval for BGP Spoke Gateway. Valid values: true, false.",
                "description_kind": "plain",
                "optional": true
              },
              "enable_management_over_private_network": {
                "type": "bool",
                "description": "Enable management over private network.",
                "description_kind": "plain",
                "optional": true
              },
              "enable_preserve_as_path": {
                "type": "bool",
                "description": "Enable preserve as path when advertising manual summary CIDRs on BGP spoke gateway.",
                "description_kind": "plain",
                "optional": true
              },
              "gw_name": {
                "type": "string",
                "description": "Edge CSP name.",
                "description_kind": "plain",
                "required": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "lan_interface_ip_prefix": {
                "type": "string",
                "description": "LAN interface IP/prefix.",
                "description_kind": "plain",
                "required": true
              },
              "lan_interface_name": {
                "type": "string",
                "description": "LAN interface name.",
                "description_kind": "plain",
                "optional": true
              },
              "latitude": {
                "type": "string",
                "description": "The latitude of the Edge as a Spoke.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "local_as_number": {
                "type": "string",
                "description": "Local AS number.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "longitude": {
                "type": "string",
                "description": "The longitude of the Edge as a Spoke.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "management_default_gateway_ip": {
                "type": "string",
                "description": "Management default gateway IP.",
                "description_kind": "plain",
                "optional": true
              },
              "management_egress_ip_prefix": {
                "type": "string",
                "description": "Management egress gateway IP/prefix.",
                "description_kind": "plain",
                "optional": true
              },
              "management_interface_config": {
                "type": "string",
                "description": "Management interface configuration. Valid values: 'DHCP' and 'Static'.",
                "description_kind": "plain",
                "required": true
              },
              "management_interface_ip_prefix": {
                "type": "string",
                "description": "Management interface IP/prefix.",
                "description_kind": "plain",
                "optional": true
              },
              "management_interface_name": {
                "type": "string",
                "description": "Management interface name.",
                "description_kind": "plain",
                "optional": true
              },
              "prepend_as_path": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "List of AS numbers to prepend gateway BGP AS_Path field.",
                "description_kind": "plain",
                "optional": true
              },
              "project_uuid": {
                "type": "string",
                "description": "Edge CSP project UUID.",
                "description_kind": "plain",
                "required": true
              },
              "rx_queue_size": {
                "type": "string",
                "description": "Ethernet interface RX queue size.",
                "description_kind": "plain",
                "optional": true
              },
              "secondary_dns_server_ip": {
                "type": "string",
                "description": "Secondary DNS server IP.",
                "description_kind": "plain",
                "optional": true
              },
              "site_id": {
                "type": "string",
                "description": "Site ID.",
                "description_kind": "plain",
                "required": true
              },
              "spoke_bgp_manual_advertise_cidrs": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "Intended CIDR list to be advertised to external BGP router.",
                "description_kind": "plain",
                "optional": true
              },
              "state": {
                "type": "string",
                "description": "State of Edge as a Spoke.",
                "description_kind": "plain",
                "computed": true
              },
              "template_uuid": {
                "type": "string",
                "description": "Edge CSP template UUID.",
                "description_kind": "plain",
                "required": true
              },
              "wan_default_gateway_ip": {
                "type": "string",
                "description": "WAN default gateway IP.",
                "description_kind": "plain",
                "required": true
              },
              "wan_interface_ip_prefix": {
                "type": "string",
                "description": "WAN interface IP/prefix.",
                "description_kind": "plain",
                "required": true
              },
              "wan_interface_name": {
                "type": "string",
                "description": "WAN interface name.",
                "description_kind": "plain",
                "optional": true
              },
              "wan_public_ip": {
                "type": "string",
                "description": "WAN interface public IP.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              }
            },
            "description_kind": "plain"
          }
        },
        "aviatrix_edge_spoke": {
          "version": 0,
          "block": {
            "attributes": {
              "approved_learned_cidrs": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "Approved learned CIDRs for BGP Spoke Gateway.",
                "description_kind": "plain",
                "optional": true
              },
              "bgp_hold_time": {
                "type": "number",
                "description": "BGP Hold Time for BGP Spoke Gateway. Unit is in seconds. Valid values are between 12 and 360.",
                "description_kind": "plain",
                "optional": true
              },
              "bgp_polling_time": {
                "type": "number",
                "description": "BGP route polling time for BGP Spoke Gateway. Unit is in seconds. Valid values are between 10 and 50.",
                "description_kind": "plain",
                "optional": true
              },
              "dns_server_ip": {
                "type": "string",
                "description": "DNS server IP.",
                "description_kind": "plain",
                "optional": true
              },
              "enable_edge_active_standby": {
                "type": "bool",
                "description": "Enables Edge Active-Standby Mode.",
                "description_kind": "plain",
                "optional": true
              },
              "enable_edge_active_standby_preemptive": {
                "type": "bool",
                "description": "Enables Preemptive Mode for Edge Active-Standby, available only with Active-Standby enabled.",
                "description_kind": "plain",
                "optional": true
              },
              "enable_edge_transitive_routing": {
                "type": "bool",
                "description": "Enable Edge transitive routing.",
                "description_kind": "plain",
                "optional": true
              },
              "enable_jumbo_frame": {
                "type": "bool",
                "description": "Enable jumbo frame.",
                "description_kind": "plain",
                "optional": true
              },
              "enable_learned_cidrs_approval": {
                "type": "bool",
                "description": "Switch to enable/disable learned CIDR approval for BGP Spoke Gateway. Valid values: true, false.",
                "description_kind": "plain",
                "optional": true
              },
              "enable_management_over_private_network": {
                "type": "bool",
                "description": "Enable management over private network.",
                "description_kind": "plain",
                "optional": true
              },
              "enable_preserve_as_path": {
                "type": "bool",
                "description": "Enable preserve as path when advertising manual summary CIDRs on BGP spoke gateway.",
                "description_kind": "plain",
                "optional": true
              },
              "gw_name": {
                "type": "string",
                "description": "Edge as a Spoke name.",
                "description_kind": "plain",
                "required": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "lan_interface_ip_prefix": {
                "type": "string",
                "description": "LAN interface IP/prefix.",
                "description_kind": "plain",
                "required": true
              },
              "latitude": {
                "type": "string",
                "description": "The latitude of the Edge as a Spoke.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "local_as_number": {
                "type": "string",
                "description": "Local AS number.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "longitude": {
                "type": "string",
                "description": "The longitude of the Edge as a Spoke.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "management_default_gateway_ip": {
                "type": "string",
                "description": "Management default gateway IP.",
                "description_kind": "plain",
                "optional": true
              },
              "management_egress_ip_prefix": {
                "type": "string",
                "description": "Management egress gateway IP/prefix.",
                "description_kind": "plain",
                "optional": true
              },
              "management_interface_config": {
                "type": "string",
                "description": "Management interface configuration. Valid values: 'DHCP' and 'Static'.",
                "description_kind": "plain",
                "required": true
              },
              "management_interface_ip_prefix": {
                "type": "string",
                "description": "Management interface IP/prefix.",
                "description_kind": "plain",
                "optional": true
              },
              "prepend_as_path": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "List of AS numbers to prepend gateway BGP AS_Path field.",
                "description_kind": "plain",
                "optional": true
              },
              "rx_queue_size": {
                "type": "string",
                "description": "Ethernet interface RX queue size.",
                "description_kind": "plain",
                "optional": true
              },
              "secondary_dns_server_ip": {
                "type": "string",
                "description": "Secondary DNS server IP.",
                "description_kind": "plain",
                "optional": true
              },
              "site_id": {
                "type": "string",
                "description": "Site ID.",
                "description_kind": "plain",
                "required": true
              },
              "spoke_bgp_manual_advertise_cidrs": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "Intended CIDR list to be advertised to external BGP router.",
                "description_kind": "plain",
                "optional": true
              },
              "state": {
                "type": "string",
                "description": "State of Edge as a Spoke.",
                "description_kind": "plain",
                "computed": true
              },
              "wan_default_gateway_ip": {
                "type": "string",
                "description": "WAN default gateway IP.",
                "description_kind": "plain",
                "required": true
              },
              "wan_interface_ip_prefix": {
                "type": "string",
                "description": "WAN interface IP/prefix.",
                "description_kind": "plain",
                "required": true
              },
              "wan_public_ip": {
                "type": "string",
                "description": "WAN interface public IP.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "ztp_file_download_path": {
                "type": "string",
                "description": "The location where the Edge as a CaaG ZTP file will be stored.",
                "description_kind": "plain",
                "required": true
              },
              "ztp_file_type": {
                "type": "string",
                "description": "ZTP file type.",
                "description_kind": "plain",
                "required": true
              }
            },
            "description_kind": "plain"
          }
        },
        "aviatrix_edge_spoke_external_device_conn": {
          "version": 0,
          "block": {
            "attributes": {
              "bgp_local_as_num": {
                "type": "string",
                "description": "BGP local AS number.",
                "description_kind": "plain",
                "required": true
              },
              "bgp_remote_as_num": {
                "type": "string",
                "description": "BGP remote AS number.",
                "description_kind": "plain",
                "required": true
              },
              "connection_name": {
                "type": "string",
                "description": "The name of the spoke external device connection which is going to be created.",
                "description_kind": "plain",
                "required": true
              },
              "connection_type": {
                "type": "string",
                "description": "Connection type. Valid values: 'bgp'. Default value: 'bgp'.",
                "description_kind": "plain",
                "optional": true
              },
              "gw_name": {
                "type": "string",
                "description": "Name of the BGP Spoke Gateway.",
                "description_kind": "plain",
                "required": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "local_lan_ip": {
                "type": "string",
                "description": "Local LAN IP.",
                "description_kind": "plain",
                "required": true
              },
              "number_of_retries": {
                "type": "number",
                "description": "Number of retries.",
                "description_kind": "plain",
                "optional": true
              },
              "remote_lan_ip": {
                "type": "string",
                "description": "Remote LAN IP.",
                "description_kind": "plain",
                "required": true
              },
              "retry_interval": {
                "type": "number",
                "description": "Retry interval in seconds.",
                "description_kind": "plain",
                "optional": true
              },
              "site_id": {
                "type": "string",
                "description": "ID of the VPC where the BGP Spoke Gateway is located.",
                "description_kind": "plain",
                "required": true
              },
              "tunnel_protocol": {
                "type": "string",
                "description": "Tunnel Protocol. Valid value: 'LAN'. Default value: 'LAN'. Case insensitive.",
                "description_kind": "plain",
                "optional": true
              }
            },
            "description_kind": "plain"
          }
        },
        "aviatrix_edge_spoke_transit_attachment": {
          "version": 0,
          "block": {
            "attributes": {
              "enable_insane_mode": {
                "type": "bool",
                "description": "Enable jumbo frame.",
                "description_kind": "plain",
                "optional": true
              },
              "enable_jumbo_frame": {
                "type": "bool",
                "description": "Enable jumbo frame.",
                "description_kind": "plain",
                "optional": true
              },
              "enable_over_private_network": {
                "type": "bool",
                "description": "Enable over private network.",
                "description_kind": "plain",
                "optional": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "insane_mode_tunnel_number": {
                "type": "number",
                "description": "Insane mode tunnel number.",
                "description_kind": "plain",
                "optional": true
              },
              "number_of_retries": {
                "type": "number",
                "description": "Number of retries.",
                "description_kind": "plain",
                "optional": true
              },
              "retry_interval": {
                "type": "number",
                "description": "Retry interval in seconds.",
                "description_kind": "plain",
                "optional": true
              },
              "spoke_gw_name": {
                "type": "string",
                "description": "Name of the Edge as a Spoke to attach to the transit network.",
                "description_kind": "plain",
                "required": true
              },
              "spoke_prepend_as_path": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "AS Path Prepend customized by specifying AS PATH for a BGP connection. Applies on Edge as a Spoke.",
                "description_kind": "plain",
                "optional": true
              },
              "transit_gw_name": {
                "type": "string",
                "description": "Name of the transit gateway to attach the Edge as a Spoke to.",
                "description_kind": "plain",
                "required": true
              },
              "transit_prepend_as_path": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "AS Path Prepend customized by specifying AS PATH for a BGP connection. Applies on transit gateway.",
                "description_kind": "plain",
                "optional": true
              }
            },
            "description_kind": "plain"
          }
        },
        "aviatrix_filebeat_forwarder": {
          "version": 0,
          "block": {
            "attributes": {
              "config_file": {
                "type": "string",
                "description": "Configuration file.",
                "description_kind": "plain",
                "optional": true
              },
              "excluded_gateways": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "List of excluded gateways.",
                "description_kind": "plain",
                "optional": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "port": {
                "type": "number",
                "description": "Port number.",
                "description_kind": "plain",
                "required": true
              },
              "server": {
                "type": "string",
                "description": "Server IP.",
                "description_kind": "plain",
                "required": true
              },
              "status": {
                "type": "string",
                "description": "Enabled or not.",
                "description_kind": "plain",
                "computed": true
              },
              "trusted_ca_file": {
                "type": "string",
                "description": "Trusted CA file.",
                "description_kind": "plain",
                "optional": true
              }
            },
            "description_kind": "plain"
          }
        },
        "aviatrix_firenet": {
          "version": 1,
          "block": {
            "attributes": {
              "east_west_inspection_excluded_cidrs": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "Network List Excluded From East-West Inspection. CIDRs to be excluded from inspection. Type: Set(String). Available as of provider version R2.19.2+.",
                "description_kind": "plain",
                "optional": true
              },
              "egress_enabled": {
                "type": "bool",
                "description": "Enable/Disable egress through firewall.",
                "description_kind": "plain",
                "optional": true
              },
              "egress_static_cidrs": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "List of egress static cidrs.",
                "description_kind": "plain",
                "optional": true
              },
              "hashing_algorithm": {
                "type": "string",
                "description": "Hashing algorithm to load balance traffic across the firewall.",
                "description_kind": "plain",
                "optional": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "inspection_enabled": {
                "type": "bool",
                "description": "Enable/Disable traffic inspection.",
                "description_kind": "plain",
                "optional": true
              },
              "keep_alive_via_lan_interface_enabled": {
                "type": "bool",
                "description": "Enable Keep Alive via Firewall LAN Interface.",
                "description_kind": "plain",
                "optional": true
              },
              "tgw_segmentation_for_egress_enabled": {
                "type": "bool",
                "description": "Enable TGW segmentation for egress.",
                "description_kind": "plain",
                "optional": true
              },
              "vpc_id": {
                "type": "string",
                "description": "VPC ID.",
                "description_kind": "plain",
                "required": true
              }
            },
            "description_kind": "plain"
          }
        },
        "aviatrix_firewall": {
          "version": 1,
          "block": {
            "attributes": {
              "base_log_enabled": {
                "type": "bool",
                "description": "Indicates whether enable logging or not. Valid values: true, false. Default value: false.",
                "description_kind": "plain",
                "optional": true
              },
              "base_policy": {
                "type": "string",
                "description": "New base policy.",
                "description_kind": "plain",
                "optional": true
              },
              "gw_name": {
                "type": "string",
                "description": "The name of gateway.",
                "description_kind": "plain",
                "required": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "manage_firewall_policies": {
                "type": "bool",
                "description": "Enable to manage firewall policies via in-line rules. If false, policies must be managed using `aviatrix_firewall_policy` resources.",
                "description_kind": "plain",
                "optional": true
              }
            },
            "block_types": {
              "policy": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "action": {
                      "type": "string",
                      "description": "Valid values: 'allow', 'deny' or 'force-drop'(in stateful firewall rule to allow immediate packet dropping on established sessions).",
                      "description_kind": "plain",
                      "required": true
                    },
                    "description": {
                      "type": "string",
                      "description": "Description of this firewall policy.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "dst_ip": {
                      "type": "string",
                      "description": "Destination address, a valid IPv4 address or tag name.",
                      "description_kind": "plain",
                      "required": true
                    },
                    "log_enabled": {
                      "type": "bool",
                      "description": "Valid values: true, false. Default value: false.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "port": {
                      "type": "string",
                      "description": "A single port or a range of port numbers.",
                      "description_kind": "plain",
                      "required": true
                    },
                    "protocol": {
                      "type": "string",
                      "description": "Valid values: 'all', 'tcp', 'udp', 'icmp', 'sctp', 'rdp', 'dccp'.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "src_ip": {
                      "type": "string",
                      "description": "Source address, a valid IPv4 address or tag name.",
                      "description_kind": "plain",
                      "required": true
                    }
                  },
                  "description": "New access policy for the gateway.",
                  "description_kind": "plain"
                }
              }
            },
            "description_kind": "plain"
          }
        },
        "aviatrix_firewall_instance": {
          "version": 0,
          "block": {
            "attributes": {
              "availability_domain": {
                "type": "string",
                "description": "Availability domain for OCI.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "bootstrap_bucket_name": {
                "type": "string",
                "description": "Advanced option. Bootstrap bucket name. Only available for AWS and GCP.",
                "description_kind": "plain",
                "optional": true
              },
              "bootstrap_storage_name": {
                "type": "string",
                "description": "Advanced option. Bootstrap storage name. Applicable to Azure and Palo Alto Networks VM-Series/Fortinet Series deployment only.",
                "description_kind": "plain",
                "optional": true
              },
              "cloud_type": {
                "type": "number",
                "description": "Cloud Type",
                "description_kind": "plain",
                "computed": true
              },
              "container_folder": {
                "type": "string",
                "description": "Advanced option. Bootstrap storage name. Applicable to Azure and Fortinet Series deployment only.",
                "description_kind": "plain",
                "optional": true
              },
              "egress_interface": {
                "type": "string",
                "description": "ID of Egress Interface created.",
                "description_kind": "plain",
                "computed": true
              },
              "egress_subnet": {
                "type": "string",
                "description": "Egress Interface Subnet.",
                "description_kind": "plain",
                "required": true
              },
              "egress_vpc_id": {
                "type": "string",
                "description": "Egress VPC ID. Required for GCP.",
                "description_kind": "plain",
                "optional": true
              },
              "fault_domain": {
                "type": "string",
                "description": "Fault domain for OCI.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "file_share_folder": {
                "type": "string",
                "description": "Advanced option. File share folder. Applicable to Azure and Palo Alto Networks VM-Series deployment only.",
                "description_kind": "plain",
                "optional": true
              },
              "firenet_gw_name": {
                "type": "string",
                "description": "Name of the primary FireNet gateway.",
                "description_kind": "plain",
                "optional": true
              },
              "firewall_image": {
                "type": "string",
                "description": "One of the AWS AMIs from Palo Alto Networks.",
                "description_kind": "plain",
                "required": true
              },
              "firewall_image_id": {
                "type": "string",
                "description": "Firewall image ID.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "firewall_image_version": {
                "type": "string",
                "description": "Version of firewall image.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "firewall_name": {
                "type": "string",
                "description": "Name of the firewall instance to be created.",
                "description_kind": "plain",
                "required": true
              },
              "firewall_size": {
                "type": "string",
                "description": "Instance size of the firewall.",
                "description_kind": "plain",
                "required": true
              },
              "gcp_vpc_id": {
                "type": "string",
                "description": "GCP VPC ID",
                "description_kind": "plain",
                "computed": true
              },
              "iam_role": {
                "type": "string",
                "description": "Advanced option. IAM role. Only available for AWS.",
                "description_kind": "plain",
                "optional": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "instance_id": {
                "type": "string",
                "description": "ID of the firewall instance created.",
                "description_kind": "plain",
                "computed": true
              },
              "key_name": {
                "type": "string",
                "description": "Applicable to AWS deployment only. AWS Key Pair name. If not provided, a Key Pair will be generated.",
                "description_kind": "plain",
                "optional": true,
                "sensitive": true
              },
              "lan_interface": {
                "type": "string",
                "description": "ID of Lan Interface created.",
                "description_kind": "plain",
                "computed": true
              },
              "management_interface": {
                "type": "string",
                "description": "ID of Management Interface created.",
                "description_kind": "plain",
                "computed": true
              },
              "management_subnet": {
                "type": "string",
                "description": "Management Interface Subnet. Required for Palo Alto Networks VM-Series, and required to be empty for Check Point or Fortinet series.",
                "description_kind": "plain",
                "optional": true
              },
              "management_vpc_id": {
                "type": "string",
                "description": "Management VPC ID. Required for GCP Palo Alto Networks VM-Series. Required to be empty for GCP Check Point or Fortinet series.",
                "description_kind": "plain",
                "optional": true
              },
              "password": {
                "type": "string",
                "description": "Authentication method. Applicable to Azure deployment only.",
                "description_kind": "plain",
                "optional": true,
                "sensitive": true
              },
              "public_ip": {
                "type": "string",
                "description": "Management Public IP.",
                "description_kind": "plain",
                "computed": true
              },
              "sas_url_config": {
                "type": "string",
                "description": "Advanced option. Bootstrap storage name. Applicable to Azure and Fortinet Series deployment only.",
                "description_kind": "plain",
                "optional": true
              },
              "sas_url_license": {
                "type": "string",
                "description": "Advanced option. Bootstrap storage name. Applicable to Azure and Fortinet Series deployment only.",
                "description_kind": "plain",
                "optional": true
              },
              "share_directory": {
                "type": "string",
                "description": "Advanced option. Share directory. Applicable to Azure and Palo Alto Networks VM-Series deployment only.",
                "description_kind": "plain",
                "optional": true
              },
              "sic_key": {
                "type": "string",
                "description": "Advanced option. Bic key. Applicable to Azure and Check Point Series deployment only.",
                "description_kind": "plain",
                "optional": true,
                "sensitive": true
              },
              "ssh_public_key": {
                "type": "string",
                "description": "Authentication method. Applicable to Azure deployment only.",
                "description_kind": "plain",
                "optional": true,
                "sensitive": true
              },
              "storage_access_key": {
                "type": "string",
                "description": "Advanced option. Storage access key. Applicable to Azure and Palo Alto Networks VM-Series deployment only.",
                "description_kind": "plain",
                "optional": true,
                "sensitive": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "description": "A map of tags to assign to the firewall instance.",
                "description_kind": "plain",
                "optional": true
              },
              "user_data": {
                "type": "string",
                "description": "Advanced option. Bootstrap storage name. Applicable to Check Point Series and Fortinet Series deployment only.",
                "description_kind": "plain",
                "optional": true
              },
              "username": {
                "type": "string",
                "description": "Applicable to Azure deployment only. 'admin' as a username is not accepted.",
                "description_kind": "plain",
                "optional": true
              },
              "vpc_id": {
                "type": "string",
                "description": "ID of the Security VPC.",
                "description_kind": "plain",
                "required": true
              },
              "zone": {
                "type": "string",
                "description": "Availability Zone. Only available for AWS, GCP and Azure.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              }
            },
            "description_kind": "plain"
          }
        },
        "aviatrix_firewall_instance_association": {
          "version": 0,
          "block": {
            "attributes": {
              "attached": {
                "type": "bool",
                "description": "Switch to attach/detach firewall instance to/from fireNet.",
                "description_kind": "plain",
                "optional": true
              },
              "egress_interface": {
                "type": "string",
                "description": "Egress interface ID, required if it is a firewall instance.",
                "description_kind": "plain",
                "optional": true
              },
              "firenet_gw_name": {
                "type": "string",
                "description": "Name of the gateway to launch the firewall instance.",
                "description_kind": "plain",
                "optional": true
              },
              "firewall_name": {
                "type": "string",
                "description": "Firewall instance name, or FQDN Gateway's gw_name, required if it is a AWS or Azure firewall instance. Not allowed for GCP",
                "description_kind": "plain",
                "optional": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "instance_id": {
                "type": "string",
                "description": "ID of Firewall instance, or FQDN Gateway's gw_name.",
                "description_kind": "plain",
                "required": true
              },
              "lan_interface": {
                "type": "string",
                "description": "Lan interface ID, required if it is a firewall instance.",
                "description_kind": "plain",
                "optional": true
              },
              "management_interface": {
                "type": "string",
                "description": "Management interface ID, required if it is a firewall instance.",
                "description_kind": "plain",
                "optional": true
              },
              "vendor_type": {
                "type": "string",
                "description": "Indication it is a firewall instance or FQDN gateway to be associated to fireNet. Valid values: 'Generic', 'fqdn_gateway'. Value 'fqdn_gateway' is required for FQDN gateway.",
                "description_kind": "plain",
                "optional": true
              },
              "vpc_id": {
                "type": "string",
                "description": "VPC ID.",
                "description_kind": "plain",
                "required": true
              }
            },
            "description_kind": "plain"
          }
        },
        "aviatrix_firewall_management_access": {
          "version": 0,
          "block": {
            "attributes": {
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "management_access_resource_name": {
                "type": "string",
                "description": "Name of the resource to be enabled firewall management access.",
                "description_kind": "plain",
                "required": true
              },
              "transit_firenet_gateway_name": {
                "type": "string",
                "description": "Name of the transit firenet gateway.",
                "description_kind": "plain",
                "required": true
              }
            },
            "description_kind": "plain"
          }
        },
        "aviatrix_firewall_policy": {
          "version": 0,
          "block": {
            "attributes": {
              "action": {
                "type": "string",
                "description": "Valid values: 'allow', 'deny' or 'force-drop'(in stateful firewall rule to allow immediate packet dropping on established sessions).",
                "description_kind": "plain",
                "required": true
              },
              "description": {
                "type": "string",
                "description": "Description of this firewall policy.",
                "description_kind": "plain",
                "optional": true
              },
              "dst_ip": {
                "type": "string",
                "description": "CIDRs separated by comma or tag names such 'HR' or 'marketing' etc.",
                "description_kind": "plain",
                "required": true
              },
              "gw_name": {
                "type": "string",
                "description": "The name of gateway.",
                "description_kind": "plain",
                "required": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "log_enabled": {
                "type": "bool",
                "description": "Valid values: true or false.",
                "description_kind": "plain",
                "optional": true
              },
              "port": {
                "type": "string",
                "description": "A single port or a range of port numbers.",
                "description_kind": "plain",
                "required": true
              },
              "position": {
                "type": "number",
                "description": "Position in the policy list, where the firewall policy will be inserted to.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "protocol": {
                "type": "string",
                "description": "'all', 'tcp', 'udp', 'icmp', 'sctp', 'rdp', 'dccp'.",
                "description_kind": "plain",
                "optional": true
              },
              "src_ip": {
                "type": "string",
                "description": "CIDRs separated by comma or tag names such 'HR' or 'marketing' etc.",
                "description_kind": "plain",
                "required": true
              }
            },
            "description_kind": "plain"
          }
        },
        "aviatrix_firewall_tag": {
          "version": 0,
          "block": {
            "attributes": {
              "firewall_tag": {
                "type": "string",
                "description": "This parameter represents the name of a Cloud-Account in Aviatrix controller.",
                "description_kind": "plain",
                "required": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              }
            },
            "block_types": {
              "cidr_list": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "cidr": {
                      "type": "string",
                      "description": "The CIDR attribute of a policy.",
                      "description_kind": "plain",
                      "required": true
                    },
                    "cidr_tag_name": {
                      "type": "string",
                      "description": "The name attribute of a policy.",
                      "description_kind": "plain",
                      "required": true
                    }
                  },
                  "description": "A JSON file with information of 'cidr_tag_name' and 'cidr'.",
                  "description_kind": "plain"
                }
              }
            },
            "description_kind": "plain"
          }
        },
        "aviatrix_fqdn": {
          "version": 2,
          "block": {
            "attributes": {
              "fqdn_enabled": {
                "type": "bool",
                "description": "FQDN Filter Tag Status. Valid values: true or false.",
                "description_kind": "plain",
                "optional": true
              },
              "fqdn_mode": {
                "type": "string",
                "description": "Specify the tag color to be a white-list tag or black-list tag. 'white' or 'black'",
                "description_kind": "plain",
                "optional": true
              },
              "fqdn_tag": {
                "type": "string",
                "description": "FQDN Filter Tag Name.",
                "description_kind": "plain",
                "required": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "manage_domain_names": {
                "type": "bool",
                "description": "Enable to manage domain name rules in-line. If false, domain name rules must be managed using `aviatrix_fqdn_tag_rule` resources.",
                "description_kind": "plain",
                "optional": true
              }
            },
            "block_types": {
              "domain_names": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "action": {
                      "type": "string",
                      "description": "What action should happen to matching requests. Possible values are: 'Base Policy', 'Allow' or 'Deny'. Defaults to 'Base Policy' if no value is provided.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "fqdn": {
                      "type": "string",
                      "description": "FQDN.",
                      "description_kind": "plain",
                      "required": true
                    },
                    "port": {
                      "type": "string",
                      "description": "Port.",
                      "description_kind": "plain",
                      "required": true
                    },
                    "proto": {
                      "type": "string",
                      "description": "Protocol.",
                      "description_kind": "plain",
                      "required": true
                    }
                  },
                  "description": "A list of one or more domain names/tag rules.",
                  "description_kind": "plain"
                }
              },
              "gw_filter_tag_list": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "gw_name": {
                      "type": "string",
                      "description": "Name of the gateway to attach to the specific tag.",
                      "description_kind": "plain",
                      "required": true
                    },
                    "source_ip_list": {
                      "type": [
                        "set",
                        "string"
                      ],
                      "description": "List of source IPs in the VPC qualified for a specific tag.",
                      "description_kind": "plain",
                      "optional": true
                    }
                  },
                  "description": "A list of gateways to attach to the specific tag.",
                  "description_kind": "plain"
                }
              }
            },
            "description_kind": "plain"
          }
        },
        "aviatrix_fqdn_global_config": {
          "version": 0,
          "block": {
            "attributes": {
              "configured_ips": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "Customized packet destination address ranges not to be filtered by FQDN. Can be selected from pre-defined RFC 1918 range, or own network range.",
                "description_kind": "plain",
                "optional": true
              },
              "enable_caching": {
                "type": "bool",
                "description": "If enabled, it caches the resolved IP address from FQDN filter.",
                "description_kind": "plain",
                "optional": true
              },
              "enable_custom_network_filtering": {
                "type": "bool",
                "description": "If enabled, it customizes packet destination address ranges not to be filtered by FQDN.",
                "description_kind": "plain",
                "optional": true
              },
              "enable_exact_match": {
                "type": "bool",
                "description": "If enabled, the resolved IP address from FQDN filter is cached so that if subsequent TCP session matches the cached IP address list, FQDN domain name is not checked and the session is allowed to pass.",
                "description_kind": "plain",
                "optional": true
              },
              "enable_exception_rule": {
                "type": "bool",
                "description": "If enabled, it allows packets passing through the gateway without an SNI field. Only applies to whitelist.",
                "description_kind": "plain",
                "optional": true
              },
              "enable_private_network_filtering": {
                "type": "bool",
                "description": "If enabled, destination FQDN names that translate to private IP address range (RFC 1918) are subject to FQDN whitelist filtering function.",
                "description_kind": "plain",
                "optional": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              }
            },
            "description_kind": "plain"
          }
        },
        "aviatrix_fqdn_pass_through": {
          "version": 0,
          "block": {
            "attributes": {
              "gw_name": {
                "type": "string",
                "description": "Gateway to apply FQDN pass-through rules to.",
                "description_kind": "plain",
                "required": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "pass_through_cidrs": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "CIDRs to allow originating requests to ignore FQDN filtering rules.",
                "description_kind": "plain",
                "required": true
              }
            },
            "description_kind": "plain"
          }
        },
        "aviatrix_fqdn_tag_rule": {
          "version": 0,
          "block": {
            "attributes": {
              "action": {
                "type": "string",
                "description": "What action should happen to matching requests. Possible values are: 'Base Policy', 'Allow' or 'Deny'. Defaults to 'Base Policy' if no value is provided.",
                "description_kind": "plain",
                "optional": true
              },
              "fqdn": {
                "type": "string",
                "description": "FQDN.",
                "description_kind": "plain",
                "required": true
              },
              "fqdn_tag_name": {
                "type": "string",
                "description": "FQDN Filter Tag Name to attach this domain.",
                "description_kind": "plain",
                "required": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "port": {
                "type": "string",
                "description": "Port.",
                "description_kind": "plain",
                "required": true
              },
              "protocol": {
                "type": "string",
                "description": "Protocol.",
                "description_kind": "plain",
                "required": true
              }
            },
            "description_kind": "plain"
          }
        },
        "aviatrix_gateway": {
          "version": 1,
          "block": {
            "attributes": {
              "account_name": {
                "type": "string",
                "description": "Account name. This account will be used to launch Aviatrix gateway.",
                "description_kind": "plain",
                "required": true
              },
              "additional_cidrs": {
                "type": "string",
                "description": "A list of destination CIDR ranges that will also go through the VPN tunnel when Split Tunnel Mode is enabled.",
                "description_kind": "plain",
                "optional": true
              },
              "additional_cidrs_designated_gateway": {
                "type": "string",
                "description": "A list of CIDR ranges separated by comma to configure when 'designated_gateway' feature is enabled.",
                "description_kind": "plain",
                "optional": true
              },
              "allocate_new_eip": {
                "type": "bool",
                "description": "When value is false, reuse an idle address in Elastic IP pool for this gateway. Otherwise, allocate a new Elastic IP and use it for this gateway.",
                "description_kind": "plain",
                "optional": true
              },
              "availability_domain": {
                "type": "string",
                "description": "Availability domain for OCI.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "azure_eip_name_resource_group": {
                "type": "string",
                "description": "The name of the public IP address and its resource group in Azure to assign to this Gateway.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "cloud_instance_id": {
                "type": "string",
                "description": "Instance ID of the gateway.",
                "description_kind": "plain",
                "computed": true
              },
              "cloud_type": {
                "type": "number",
                "description": "Type of cloud service provider.",
                "description_kind": "plain",
                "required": true
              },
              "customer_managed_keys": {
                "type": "string",
                "description": "Customer managed key ID.",
                "description_kind": "plain",
                "optional": true,
                "sensitive": true
              },
              "duo_api_hostname": {
                "type": "string",
                "description": "API hostname for DUO auth mode.",
                "description_kind": "plain",
                "optional": true
              },
              "duo_integration_key": {
                "type": "string",
                "description": "Integration key for DUO auth mode.",
                "description_kind": "plain",
                "optional": true
              },
              "duo_push_mode": {
                "type": "string",
                "description": "Push mode for DUO auth.",
                "description_kind": "plain",
                "optional": true
              },
              "duo_secret_key": {
                "type": "string",
                "description": "Secret key for DUO auth mode.",
                "description_kind": "plain",
                "optional": true,
                "sensitive": true
              },
              "eip": {
                "type": "string",
                "description": "Required when allocate_new_eip is false. It uses specified EIP for this gateway.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "elb_dns_name": {
                "type": "string",
                "description": "ELB DNS Name.",
                "description_kind": "plain",
                "computed": true
              },
              "elb_name": {
                "type": "string",
                "description": "A name for the ELB that is created.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "enable_designated_gateway": {
                "type": "bool",
                "description": "Enable 'designated_gateway' feature for Gateway. Valid values: true, false.",
                "description_kind": "plain",
                "optional": true
              },
              "enable_elb": {
                "type": "bool",
                "description": "Specify whether to enable ELB or not.",
                "description_kind": "plain",
                "optional": true
              },
              "enable_encrypt_volume": {
                "type": "bool",
                "description": "Enable encrypt gateway EBS volume. Only supported for AWS provider. Valid values: true, false. Default value: false.",
                "description_kind": "plain",
                "optional": true
              },
              "enable_jumbo_frame": {
                "type": "bool",
                "description": "Enable jumbo frame support for Gateway. Valid values: true or false. Default value: true.",
                "description_kind": "plain",
                "optional": true
              },
              "enable_ldap": {
                "type": "bool",
                "description": "Specify whether to enable LDAP or not. Supported values: 'yes' and 'no'.",
                "description_kind": "plain",
                "optional": true
              },
              "enable_monitor_gateway_subnets": {
                "type": "bool",
                "description": "Enable monitor gateway subnets. Valid values: true, false. Default value: false.",
                "description_kind": "plain",
                "optional": true
              },
              "enable_public_subnet_filtering": {
                "type": "bool",
                "description": "Create a [Public Subnet Filtering gateway](https://docs.aviatrix.com/HowTos/public_subnet_filtering_faq.html).",
                "description_kind": "plain",
                "optional": true
              },
              "enable_spot_instance": {
                "type": "bool",
                "description": "Enable spot instance. NOT supported for production deployment.",
                "description_kind": "plain",
                "optional": true
              },
              "enable_vpc_dns_server": {
                "type": "bool",
                "description": "Enable vpc_dns_server for Gateway. Valid values: true, false.",
                "description_kind": "plain",
                "optional": true
              },
              "enable_vpn_nat": {
                "type": "bool",
                "description": "This field indicates whether to enable VPN NAT or not. Only supported for VPN gateway. Valid values: true, false. Default value: true.",
                "description_kind": "plain",
                "optional": true
              },
              "fault_domain": {
                "type": "string",
                "description": "Fault domain for OCI.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "fqdn_lan_cidr": {
                "type": "string",
                "description": "FQDN gateway lan interface cidr.",
                "description_kind": "plain",
                "optional": true
              },
              "fqdn_lan_interface": {
                "type": "string",
                "description": "FQDN gateway lan interface id.",
                "description_kind": "plain",
                "computed": true
              },
              "fqdn_lan_vpc_id": {
                "type": "string",
                "description": "LAN VPC ID. Only used for GCP FQDN Gateway.",
                "description_kind": "plain",
                "optional": true
              },
              "gw_name": {
                "type": "string",
                "description": "Aviatrix gateway unique name.",
                "description_kind": "plain",
                "required": true
              },
              "gw_size": {
                "type": "string",
                "description": "Size of Gateway Instance.",
                "description_kind": "plain",
                "required": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "idle_timeout": {
                "type": "number",
                "description": "Typed value when modifying idle_timeout. If it's -1, this feature is disabled.",
                "description_kind": "plain",
                "optional": true
              },
              "image_version": {
                "type": "string",
                "description": "image_version can be used to set the desired image version of the gateway. If set, we will attempt to update the gateway to the specified version.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "insane_mode": {
                "type": "bool",
                "description": "Enable Insane Mode for Gateway. Valid values: true, false.",
                "description_kind": "plain",
                "optional": true
              },
              "insane_mode_az": {
                "type": "string",
                "description": "AZ of subnet being created for Insane Mode Gateway. Required if insane_mode is set.",
                "description_kind": "plain",
                "optional": true
              },
              "ldap_base_dn": {
                "type": "string",
                "description": "LDAP base DN. Required: Yes if enable_ldap is 'yes'.",
                "description_kind": "plain",
                "optional": true
              },
              "ldap_bind_dn": {
                "type": "string",
                "description": "LDAP bind DN. Required: Yes if enable_ldap is 'yes'.",
                "description_kind": "plain",
                "optional": true
              },
              "ldap_password": {
                "type": "string",
                "description": "LDAP password. Required: Yes if enable_ldap is 'yes'.",
                "description_kind": "plain",
                "optional": true,
                "sensitive": true
              },
              "ldap_server": {
                "type": "string",
                "description": "LDAP server address. Required: Yes if enable_ldap is 'yes'.",
                "description_kind": "plain",
                "optional": true
              },
              "ldap_username_attribute": {
                "type": "string",
                "description": "LDAP user attribute. Required: Yes if enable_ldap is 'yes'.",
                "description_kind": "plain",
                "optional": true
              },
              "max_vpn_conn": {
                "type": "string",
                "description": "Maximum connection of VPN access. Valid for VPN gateway only. If not set, '100' will be default value.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "monitor_exclude_list": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "A set of monitored instance ids. Only valid when 'enable_monitor_gateway_subnets' = true.",
                "description_kind": "plain",
                "optional": true
              },
              "name_servers": {
                "type": "string",
                "description": "A list of DNS servers used to resolve domain names by a connected VPN user when Split Tunnel Mode is enabled.",
                "description_kind": "plain",
                "optional": true
              },
              "okta_token": {
                "type": "string",
                "description": "Token for Okta auth mode.",
                "description_kind": "plain",
                "optional": true,
                "sensitive": true
              },
              "okta_url": {
                "type": "string",
                "description": "URL for Okta auth mode.",
                "description_kind": "plain",
                "optional": true
              },
              "okta_username_suffix": {
                "type": "string",
                "description": "Username suffix for Okta auth mode.",
                "description_kind": "plain",
                "optional": true
              },
              "otp_mode": {
                "type": "string",
                "description": "Two step authentication mode.",
                "description_kind": "plain",
                "optional": true
              },
              "peering_ha_availability_domain": {
                "type": "string",
                "description": "Peering HA availability domain for OCI.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "peering_ha_azure_eip_name_resource_group": {
                "type": "string",
                "description": "The name of the public IP address and its resource group in Azure to assign to the Peering HA Gateway.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "peering_ha_cloud_instance_id": {
                "type": "string",
                "description": "Instance ID of the peering HA gateway.",
                "description_kind": "plain",
                "computed": true
              },
              "peering_ha_eip": {
                "type": "string",
                "description": "Public IP address that you want assigned to the HA peering instance.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "peering_ha_fault_domain": {
                "type": "string",
                "description": "Peering HA fault domain for OCI.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "peering_ha_gw_name": {
                "type": "string",
                "description": "Aviatrix gateway unique name of HA gateway.",
                "description_kind": "plain",
                "computed": true
              },
              "peering_ha_gw_size": {
                "type": "string",
                "description": "Peering HA Gateway Size.",
                "description_kind": "plain",
                "optional": true
              },
              "peering_ha_image_version": {
                "type": "string",
                "description": "peering_ha_image_version can be used to set the desired image version of the HA gateway. If set, we will attempt to update the gateway to the specified version.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "peering_ha_insane_mode_az": {
                "type": "string",
                "description": "AZ of subnet being created for Insane Mode Peering HA Gateway. Required if insane_mode is set.",
                "description_kind": "plain",
                "optional": true
              },
              "peering_ha_private_ip": {
                "type": "string",
                "description": "Private IP address of HA gateway.",
                "description_kind": "plain",
                "computed": true
              },
              "peering_ha_security_group_id": {
                "type": "string",
                "description": "Peering HA security group used for the gateway.",
                "description_kind": "plain",
                "computed": true
              },
              "peering_ha_software_version": {
                "type": "string",
                "description": "peering_ha_software_version can be used to set the desired software version of the HA gateway. If set, we will attempt to update the gateway to the specified version. If left blank, the gateway software version will continue to be managed through the aviatrix_controller_config resource.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "peering_ha_subnet": {
                "type": "string",
                "description": "Public Subnet Information while creating Peering HA Gateway, only subnet is accepted. Required to create peering ha gateway if cloud_type = 1 or 8 (AWS or Azure). Optional if cloud_type = 4 (GCP)",
                "description_kind": "plain",
                "optional": true
              },
              "peering_ha_zone": {
                "type": "string",
                "description": "Zone information for creating Peering HA Gateway. Required to create peering ha gateway if cloud_type = 4 (GCP). Optional for cloud_type = 8 (Azure).",
                "description_kind": "plain",
                "optional": true
              },
              "private_ip": {
                "type": "string",
                "description": "Private IP address of the Gateway created.",
                "description_kind": "plain",
                "computed": true
              },
              "public_dns_server": {
                "type": "string",
                "description": "NS server used by the gateway.",
                "description_kind": "plain",
                "computed": true
              },
              "public_subnet_filtering_guard_duty_enforced": {
                "type": "bool",
                "description": "Whether to enforce Guard Duty IP blocking. Required when `enable_public_subnet_filtering` attribute is true. Valid values: true or false. Default value: true.",
                "description_kind": "plain",
                "optional": true
              },
              "public_subnet_filtering_ha_route_tables": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "Route tables whose associated public subnets are protected for the HA PSF gateway. Required when enable_public_subnet_filtering and peering_ha_subnet are set.",
                "description_kind": "plain",
                "optional": true
              },
              "public_subnet_filtering_route_tables": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "Route tables whose associated public subnets are protected. Required when `enable_public_subnet_filtering` attribute is true.",
                "description_kind": "plain",
                "optional": true
              },
              "renegotiation_interval": {
                "type": "number",
                "description": "Typed value when modifying renegotiation_interval. If it's -1, this feature is disabled.",
                "description_kind": "plain",
                "optional": true
              },
              "rx_queue_size": {
                "type": "string",
                "description": "Gateway ethernet interface RX queue size. Supported for AWS related clouds only. Applies on HA as well if enabled.",
                "description_kind": "plain",
                "optional": true
              },
              "saml_enabled": {
                "type": "bool",
                "description": "This field indicates whether to enable SAML or not.",
                "description_kind": "plain",
                "optional": true
              },
              "search_domains": {
                "type": "string",
                "description": "A list of domain names that will use the NameServer when a specific name is not in the destination when Split Tunnel Mode is enabled.",
                "description_kind": "plain",
                "optional": true
              },
              "security_group_id": {
                "type": "string",
                "description": "Security group used for the gateway.",
                "description_kind": "plain",
                "computed": true
              },
              "single_az_ha": {
                "type": "bool",
                "description": "Set to true if this feature is desired.",
                "description_kind": "plain",
                "optional": true
              },
              "single_ip_snat": {
                "type": "bool",
                "description": "Enable Source NAT for this container.",
                "description_kind": "plain",
                "optional": true
              },
              "software_version": {
                "type": "string",
                "description": "software_version can be used to set the desired software version of the gateway. If set, we will attempt to update the gateway to the specified version. If left blank, the gateway software version will continue to be managed through the aviatrix_controller_config resource.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "split_tunnel": {
                "type": "bool",
                "description": "Specify split tunnel mode.",
                "description_kind": "plain",
                "optional": true
              },
              "spot_price": {
                "type": "string",
                "description": "Price for spot instance. NOT supported for production deployment.",
                "description_kind": "plain",
                "optional": true
              },
              "subnet": {
                "type": "string",
                "description": "A VPC Network address range selected from one of the available network ranges.",
                "description_kind": "plain",
                "required": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "description": "A map of tags to assign to the gateway.",
                "description_kind": "plain",
                "optional": true
              },
              "tunnel_detection_time": {
                "type": "number",
                "description": "The IPSec tunnel down detection time for the Gateway.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "vpc_id": {
                "type": "string",
                "description": "ID of legacy VPC/Vnet to be connected.",
                "description_kind": "plain",
                "required": true
              },
              "vpc_reg": {
                "type": "string",
                "description": "Region where this gateway will be launched.",
                "description_kind": "plain",
                "required": true
              },
              "vpn_access": {
                "type": "bool",
                "description": "Enable user access through VPN to this container.",
                "description_kind": "plain",
                "optional": true
              },
              "vpn_cidr": {
                "type": "string",
                "description": "VPN CIDR block for the container.",
                "description_kind": "plain",
                "optional": true
              },
              "vpn_protocol": {
                "type": "string",
                "description": "Elb protocol for VPN gateway with elb enabled. Only supports AWS provider. Valid values: 'TCP', 'UDP'. If not specified, 'TCP'' will be used.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "zone": {
                "type": "string",
                "description": "Availability Zone. Only available for Azure (8), Azure GOV (32), Azure CHINA (2048) and Public Subnet Filtering gateway. Must be in the form 'az-n', for example, 'az-2'.",
                "description_kind": "plain",
                "optional": true
              }
            },
            "description_kind": "plain"
          }
        },
        "aviatrix_gateway_certificate_config": {
          "version": 0,
          "block": {
            "attributes": {
              "ca_certificate": {
                "type": "string",
                "description": "CA Certificate.",
                "description_kind": "plain",
                "required": true
              },
              "ca_private_key": {
                "type": "string",
                "description": "CA Private Key.",
                "description_kind": "plain",
                "required": true,
                "sensitive": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              }
            },
            "description_kind": "plain"
          }
        },
        "aviatrix_gateway_dnat": {
          "version": 0,
          "block": {
            "attributes": {
              "connection_policy": {
                "type": [
                  "list",
                  [
                    "object",
                    {
                      "apply_route_entry": "bool",
                      "connection": "string",
                      "dnat_ips": "string",
                      "dnat_port": "string",
                      "dst_cidr": "string",
                      "dst_port": "string",
                      "exclude_rtb": "string",
                      "interface": "string",
                      "mark": "string",
                      "protocol": "string",
                      "src_cidr": "string",
                      "src_port": "string"
                    }
                  ]
                ],
                "description": "Computed attribute to store the previous connection policy.",
                "description_kind": "plain",
                "computed": true
              },
              "gw_name": {
                "type": "string",
                "description": "Name of the gateway.",
                "description_kind": "plain",
                "required": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "interface_policy": {
                "type": [
                  "list",
                  [
                    "object",
                    {
                      "apply_route_entry": "bool",
                      "connection": "string",
                      "dnat_ips": "string",
                      "dnat_port": "string",
                      "dst_cidr": "string",
                      "dst_port": "string",
                      "exclude_rtb": "string",
                      "interface": "string",
                      "mark": "string",
                      "protocol": "string",
                      "src_cidr": "string",
                      "src_port": "string"
                    }
                  ]
                ],
                "description": "Computed attribute to store the previous interface policy.",
                "description_kind": "plain",
                "computed": true
              }
            },
            "block_types": {
              "dnat_policy": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "apply_route_entry": {
                      "type": "bool",
                      "description": "This is an option to program the route entry 'DST CIDR pointing to Aviatrix Gateway' into Cloud platform routing table. Type: Boolean. Default: True.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "connection": {
                      "type": "string",
                      "description": "This is a qualifier condition that specifies output connection where the rule applies. When left blank, this field is not used.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "dnat_ips": {
                      "type": "string",
                      "description": "This is a rule field that specifies the translated destination IP address when all specified qualifier conditions meet. When left blank, this field is not used. One of the rule field must be specified for this rule to take effect.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "dnat_port": {
                      "type": "string",
                      "description": "This is a rule field that specifies the translated destination port when all specified qualifier conditions meet. When left blank, this field is not used. One of the rule field must be specified for this rule to take effect.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "dst_cidr": {
                      "type": "string",
                      "description": "This is a qualifier condition that specifies a destination IP address range where the rule applies. When left blank, this field is not used.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "dst_port": {
                      "type": "string",
                      "description": "This is a qualifier condition that specifies a destination port where the rule applies. When left blank, this field is not used.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "exclude_rtb": {
                      "type": "string",
                      "description": "This field specifies which VPC private route table will not be programmed with the default route entry.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "interface": {
                      "type": "string",
                      "description": "This is a qualifier condition that specifies output interface where the rule applies. When left blank, this field is not used.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "mark": {
                      "type": "string",
                      "description": "This is a rule field that specifies a tag or mark of a TCP session when all qualifier conditions meet. When left blank, this field is not used.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "protocol": {
                      "type": "string",
                      "description": "This is a qualifier condition that specifies a destination port protocol where the rule applies. Default: all.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "src_cidr": {
                      "type": "string",
                      "description": "This is a qualifier condition that specifies a source IP address range where the rule applies. When left blank, this field is not used.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "src_port": {
                      "type": "string",
                      "description": "This is a qualifier condition that specifies a source port that the rule applies. When left blank, this field is not used.",
                      "description_kind": "plain",
                      "optional": true
                    }
                  },
                  "description": "Policy rule to be applied to gateway.",
                  "description_kind": "plain"
                },
                "min_items": 1
              }
            },
            "description_kind": "plain"
          }
        },
        "aviatrix_gateway_snat": {
          "version": 0,
          "block": {
            "attributes": {
              "connection_policy": {
                "type": [
                  "list",
                  [
                    "object",
                    {
                      "apply_route_entry": "bool",
                      "connection": "string",
                      "dst_cidr": "string",
                      "dst_port": "string",
                      "exclude_rtb": "string",
                      "interface": "string",
                      "mark": "string",
                      "protocol": "string",
                      "snat_ips": "string",
                      "snat_port": "string",
                      "src_cidr": "string",
                      "src_port": "string"
                    }
                  ]
                ],
                "description": "Computed attribute to store the previous connection policy.",
                "description_kind": "plain",
                "computed": true
              },
              "gw_name": {
                "type": "string",
                "description": "Name of the gateway.",
                "description_kind": "plain",
                "required": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "interface_policy": {
                "type": [
                  "list",
                  [
                    "object",
                    {
                      "apply_route_entry": "bool",
                      "connection": "string",
                      "dst_cidr": "string",
                      "dst_port": "string",
                      "exclude_rtb": "string",
                      "interface": "string",
                      "mark": "string",
                      "protocol": "string",
                      "snat_ips": "string",
                      "snat_port": "string",
                      "src_cidr": "string",
                      "src_port": "string"
                    }
                  ]
                ],
                "description": "Computed attribute to store the previous interface policy.",
                "description_kind": "plain",
                "computed": true
              },
              "snat_mode": {
                "type": "string",
                "description": "Nat mode. Currently only supports 'customized_snat'.",
                "description_kind": "plain",
                "optional": true
              },
              "sync_to_ha": {
                "type": "bool",
                "description": "Whether to sync the policies to the HA gateway.",
                "description_kind": "plain",
                "optional": true
              }
            },
            "block_types": {
              "snat_policy": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "apply_route_entry": {
                      "type": "bool",
                      "description": "This is an option to program the route entry 'DST CIDR pointing to Aviatrix Gateway' into Cloud platform routing table. Type: Boolean. Default: True.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "connection": {
                      "type": "string",
                      "description": "This is a qualifier condition that specifies output connection where the rule applies. When left blank, this field is not used.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "dst_cidr": {
                      "type": "string",
                      "description": "This is a qualifier condition that specifies a destination IP address range where the rule applies. When left blank, this field is not used.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "dst_port": {
                      "type": "string",
                      "description": "This is a qualifier condition that specifies a destination port where the rule applies. When left blank, this field is not used.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "exclude_rtb": {
                      "type": "string",
                      "description": "This field specifies which VPC private route table will not be programmed with the default route entry.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "interface": {
                      "type": "string",
                      "description": "This is a qualifier condition that specifies output interface where the rule applies. When left blank, this field is not used.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "mark": {
                      "type": "string",
                      "description": "This is a qualifier condition that specifies a tag or mark of a TCP session where the rule applies. When left blank, this field is not used.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "protocol": {
                      "type": "string",
                      "description": "This is a qualifier condition that specifies a destination port protocol where the rule applies. Default: all.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "snat_ips": {
                      "type": "string",
                      "description": "This is a rule field that specifies the changed source IP address when all specified qualifier conditions meet. When left blank, this field is not used. One of the rule fields must be specified for this rule to take effect.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "snat_port": {
                      "type": "string",
                      "description": "This is a rule field that specifies the changed source port when all specified qualifier conditions meet. When left blank, this field is not used. One of the rule fields must be specified for this rule to take effect.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "src_cidr": {
                      "type": "string",
                      "description": "This is a qualifier condition that specifies a source IP address range where the rule applies. When left blank, this field is not used.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "src_port": {
                      "type": "string",
                      "description": "This is a qualifier condition that specifies a source port that the rule applies. When left blank, this field is not used.",
                      "description_kind": "plain",
                      "optional": true
                    }
                  },
                  "description": "Policy rules applied for 'snat_mode'' of 'customized_snat'.'",
                  "description_kind": "plain"
                }
              }
            },
            "description_kind": "plain"
          }
        },
        "aviatrix_geo_vpn": {
          "version": 0,
          "block": {
            "attributes": {
              "account_name": {
                "type": "string",
                "description": "This parameter represents the name of a Cloud-Account in Aviatrix controller.",
                "description_kind": "plain",
                "required": true
              },
              "cloud_type": {
                "type": "number",
                "description": "Type of cloud service provider, requires an integer value. Currently only AWS(1) is supported.",
                "description_kind": "plain",
                "required": true
              },
              "domain_name": {
                "type": "string",
                "description": "The hosted domain name. It must be hosted by AWS Route53 or Azure DNS in the selected account.",
                "description_kind": "plain",
                "required": true
              },
              "elb_dns_names": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "List of ELB names to attach to this Geo VPN name.",
                "description_kind": "plain",
                "required": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "service_name": {
                "type": "string",
                "description": "The hostname that users will connect to. A DNS record will be created for this name in the specified domain name.",
                "description_kind": "plain",
                "required": true
              }
            },
            "description_kind": "plain"
          }
        },
        "aviatrix_netflow_agent": {
          "version": 0,
          "block": {
            "attributes": {
              "enable_l7_mode": {
                "type": "bool",
                "description": "Enable L7 mode.",
                "description_kind": "plain",
                "optional": true
              },
              "excluded_gateways": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "List of excluded gateways.",
                "description_kind": "plain",
                "optional": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "port": {
                "type": "number",
                "description": "Netflow server port.",
                "description_kind": "plain",
                "required": true
              },
              "server_ip": {
                "type": "string",
                "description": "Netflow server IP address.",
                "description_kind": "plain",
                "required": true
              },
              "status": {
                "type": "string",
                "description": "Enabled or not.",
                "description_kind": "plain",
                "computed": true
              },
              "version": {
                "type": "number",
                "description": "Netflow version.",
                "description_kind": "plain",
                "optional": true
              }
            },
            "description_kind": "plain"
          }
        },
        "aviatrix_periodic_ping": {
          "version": 0,
          "block": {
            "attributes": {
              "gw_name": {
                "type": "string",
                "description": "Name of gateway.",
                "description_kind": "plain",
                "required": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "interval": {
                "type": "number",
                "description": "Interval between pings in seconds.",
                "description_kind": "plain",
                "required": true
              },
              "ip_address": {
                "type": "string",
                "description": "IP Address to ping.",
                "description_kind": "plain",
                "required": true
              }
            },
            "description_kind": "plain"
          }
        },
        "aviatrix_private_mode_lb": {
          "version": 0,
          "block": {
            "attributes": {
              "account_name": {
                "type": "string",
                "description": "Name of the access account.",
                "description_kind": "plain",
                "required": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "lb_type": {
                "type": "string",
                "description": "Type of load balancer to create. Must be one of controller or multicloud.",
                "description_kind": "plain",
                "required": true
              },
              "multicloud_access_vpc_id": {
                "type": "string",
                "description": "VPC ID of multicloud access VPC to connect to. Required when lb_type is multicloud.",
                "description_kind": "plain",
                "optional": true
              },
              "region": {
                "type": "string",
                "description": "Name of the VPC region.",
                "description_kind": "plain",
                "required": true
              },
              "vpc_id": {
                "type": "string",
                "description": "ID of the VPC for the load balancer.",
                "description_kind": "plain",
                "required": true
              }
            },
            "block_types": {
              "proxies": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "instance_id": {
                      "type": "string",
                      "description": "Instance ID of proxy.",
                      "description_kind": "plain",
                      "required": true
                    },
                    "vpc_id": {
                      "type": "string",
                      "description": "VPC ID of proxy",
                      "description_kind": "plain",
                      "required": true
                    }
                  },
                  "description": "List of multicloud proxies.",
                  "description_kind": "plain"
                }
              }
            },
            "description_kind": "plain"
          }
        },
        "aviatrix_private_mode_multicloud_endpoint": {
          "version": 0,
          "block": {
            "attributes": {
              "account_name": {
                "type": "string",
                "description": "Name of the access account.",
                "description_kind": "plain",
                "required": true
              },
              "controller_lb_vpc_id": {
                "type": "string",
                "description": "ID of the VPC with the Controller load balancer.",
                "description_kind": "plain",
                "required": true
              },
              "dns_entry": {
                "type": "string",
                "description": "DNS entry of this endpoint.",
                "description_kind": "plain",
                "computed": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "region": {
                "type": "string",
                "description": "Name of the VPC region.",
                "description_kind": "plain",
                "required": true
              },
              "vpc_id": {
                "type": "string",
                "description": "VPC ID.",
                "description_kind": "plain",
                "required": true
              }
            },
            "description_kind": "plain"
          }
        },
        "aviatrix_proxy_config": {
          "version": 0,
          "block": {
            "attributes": {
              "http_proxy": {
                "type": "string",
                "description": "http proxy URL.",
                "description_kind": "plain",
                "required": true
              },
              "https_proxy": {
                "type": "string",
                "description": "https proxy URL.",
                "description_kind": "plain",
                "required": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "proxy_ca_certificate": {
                "type": "string",
                "description": "Server CA Certificate file.",
                "description_kind": "plain",
                "optional": true
              }
            },
            "description_kind": "plain"
          }
        },
        "aviatrix_rbac_group": {
          "version": 0,
          "block": {
            "attributes": {
              "group_name": {
                "type": "string",
                "description": "RBAC permission group name.",
                "description_kind": "plain",
                "required": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "local_login": {
                "type": "bool",
                "description": "Whether to allow members of an RBAC group to bypass LDAP/MFA for Duo login",
                "description_kind": "plain",
                "optional": true
              }
            },
            "description_kind": "plain"
          }
        },
        "aviatrix_rbac_group_access_account_attachment": {
          "version": 0,
          "block": {
            "attributes": {
              "access_account_name": {
                "type": "string",
                "description": "Access account name.",
                "description_kind": "plain",
                "required": true
              },
              "group_name": {
                "type": "string",
                "description": "RBAC permission group name.",
                "description_kind": "plain",
                "required": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              }
            },
            "description_kind": "plain"
          }
        },
        "aviatrix_rbac_group_permission_attachment": {
          "version": 0,
          "block": {
            "attributes": {
              "group_name": {
                "type": "string",
                "description": "RBAC permission group name.",
                "description_kind": "plain",
                "required": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "permission_name": {
                "type": "string",
                "description": "Permission name.",
                "description_kind": "plain",
                "required": true
              }
            },
            "description_kind": "plain"
          }
        },
        "aviatrix_rbac_group_user_attachment": {
          "version": 0,
          "block": {
            "attributes": {
              "group_name": {
                "type": "string",
                "description": "RBAC permission group name.",
                "description_kind": "plain",
                "required": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "user_name": {
                "type": "string",
                "description": "Account user name.",
                "description_kind": "plain",
                "required": true
              }
            },
            "description_kind": "plain"
          }
        },
        "aviatrix_remote_syslog": {
          "version": 0,
          "block": {
            "attributes": {
              "ca_certificate_file": {
                "type": "string",
                "description": "CA certificate file.",
                "description_kind": "plain",
                "optional": true
              },
              "excluded_gateways": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "List of excluded gateways.",
                "description_kind": "plain",
                "optional": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "index": {
                "type": "number",
                "description": "A total of 10 profiles from index 0 to 9 are supported for remote syslog, while index 9 is reserved for CoPilot.",
                "description_kind": "plain",
                "optional": true
              },
              "name": {
                "type": "string",
                "description": "Profile name.",
                "description_kind": "plain",
                "required": true
              },
              "notls": {
                "type": "bool",
                "description": "True if not protected by TLS.",
                "description_kind": "plain",
                "computed": true
              },
              "port": {
                "type": "number",
                "description": "Listening port of the remote syslog server.",
                "description_kind": "plain",
                "required": true
              },
              "private_key_file": {
                "type": "string",
                "description": "Private key of the controller that pairs with the public certificate.",
                "description_kind": "plain",
                "optional": true
              },
              "protocol": {
                "type": "string",
                "description": "TCP or UDP (TCP by default).",
                "description_kind": "plain",
                "optional": true
              },
              "public_certificate_file": {
                "type": "string",
                "description": "Public certificate of the controller signed by the same CA.",
                "description_kind": "plain",
                "optional": true
              },
              "server": {
                "type": "string",
                "description": "FQDN or IP address of the remote syslog server.",
                "description_kind": "plain",
                "required": true
              },
              "status": {
                "type": "string",
                "description": "Enabled or not.",
                "description_kind": "plain",
                "computed": true
              },
              "template": {
                "type": "string",
                "description": "Useful when forwarding to 3rd party servers like Datadog or Sumo",
                "description_kind": "plain",
                "optional": true
              }
            },
            "description_kind": "plain"
          }
        },
        "aviatrix_saml_endpoint": {
          "version": 0,
          "block": {
            "attributes": {
              "access_set_by": {
                "type": "string",
                "description": "Access type.",
                "description_kind": "plain",
                "optional": true
              },
              "controller_login": {
                "type": "bool",
                "description": "Switch to differentiate if it is for controller login.",
                "description_kind": "plain",
                "optional": true
              },
              "custom_entity_id": {
                "type": "string",
                "description": "Custom Entity ID. Required to be non-empty for 'Custom' Entity ID type, empty for 'Hostname'.",
                "description_kind": "plain",
                "optional": true
              },
              "custom_saml_request_template": {
                "type": "string",
                "description": "Custom SAML Request Template.",
                "description_kind": "plain",
                "optional": true
              },
              "endpoint_name": {
                "type": "string",
                "description": "SAML Endpoint Name.",
                "description_kind": "plain",
                "required": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "idp_metadata": {
                "type": "string",
                "description": "IDP Metadata.",
                "description_kind": "plain",
                "optional": true
              },
              "idp_metadata_type": {
                "type": "string",
                "description": "Type of IDP Metadata.",
                "description_kind": "plain",
                "required": true
              },
              "idp_metadata_url": {
                "type": "string",
                "description": "IDP Metadata.",
                "description_kind": "plain",
                "optional": true
              },
              "rbac_groups": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "List of RBAC groups.",
                "description_kind": "plain",
                "optional": true
              },
              "sign_authn_requests": {
                "type": "bool",
                "description": "Whether to sign SAML AuthnRequests",
                "description_kind": "plain",
                "optional": true
              }
            },
            "description_kind": "plain"
          }
        },
        "aviatrix_segmentation_network_domain": {
          "version": 0,
          "block": {
            "attributes": {
              "domain_name": {
                "type": "string",
                "description": "Network domain name.",
                "description_kind": "plain",
                "required": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              }
            },
            "description_kind": "plain"
          }
        },
        "aviatrix_segmentation_network_domain_association": {
          "version": 0,
          "block": {
            "attributes": {
              "attachment_name": {
                "type": "string",
                "description": "Attachment name, either Spoke or Edge.",
                "description_kind": "plain",
                "required": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "network_domain_name": {
                "type": "string",
                "description": "Network Domain name.",
                "description_kind": "plain",
                "required": true
              },
              "transit_gateway_name": {
                "type": "string",
                "description": "Transit Gateway name.",
                "description_kind": "plain",
                "optional": true
              }
            },
            "description_kind": "plain"
          }
        },
        "aviatrix_segmentation_network_domain_connection_policy": {
          "version": 0,
          "block": {
            "attributes": {
              "domain_name_1": {
                "type": "string",
                "description": "Name of network domain that will be connected to domain 2.",
                "description_kind": "plain",
                "required": true
              },
              "domain_name_2": {
                "type": "string",
                "description": "Name of network domain that will be connected to domain 1.",
                "description_kind": "plain",
                "required": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              }
            },
            "description_kind": "plain"
          }
        },
        "aviatrix_site2cloud": {
          "version": 1,
          "block": {
            "attributes": {
              "auth_type": {
                "type": "string",
                "description": "Authentication Type. Valid values: 'PSK' and 'Cert'. Default value: 'PSK'.",
                "description_kind": "plain",
                "optional": true
              },
              "backup_gateway_name": {
                "type": "string",
                "description": "Backup gateway name.",
                "description_kind": "plain",
                "optional": true
              },
              "backup_local_tunnel_ip": {
                "type": "string",
                "description": "Backup local tunnel IP address.",
                "description_kind": "plain",
                "optional": true
              },
              "backup_pre_shared_key": {
                "type": "string",
                "description": "Backup Pre-Shared Key.",
                "description_kind": "plain",
                "optional": true,
                "sensitive": true
              },
              "backup_remote_gateway_ip": {
                "type": "string",
                "description": "Backup remote remote gateway IP.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "backup_remote_gateway_latitude": {
                "type": "number",
                "description": "Latitude of backup remote gateway.",
                "description_kind": "plain",
                "optional": true
              },
              "backup_remote_gateway_longitude": {
                "type": "number",
                "description": "Longitude of backup remote gateway.",
                "description_kind": "plain",
                "optional": true
              },
              "backup_remote_identifier": {
                "type": "string",
                "description": "Backup remote identifier. Required for Cert based authentication type with HA enabled.",
                "description_kind": "plain",
                "optional": true
              },
              "backup_remote_tunnel_ip": {
                "type": "string",
                "description": "Backup remote tunnel IP address.",
                "description_kind": "plain",
                "optional": true
              },
              "ca_cert_tag_name": {
                "type": "string",
                "description": "Name of Remote CA Certificate Tag for creating Site2Cloud tunnels. Required for Cert based authentication type.",
                "description_kind": "plain",
                "optional": true
              },
              "connection_name": {
                "type": "string",
                "description": "Site2Cloud Connection Name.",
                "description_kind": "plain",
                "required": true
              },
              "connection_type": {
                "type": "string",
                "description": "Connection Type. Valid values: 'mapped' and 'unmapped'.",
                "description_kind": "plain",
                "required": true
              },
              "custom_algorithms": {
                "type": "bool",
                "description": "Switch to enable custom/non-default algorithms for IPSec Authentication/Encryption.",
                "description_kind": "plain",
                "optional": true
              },
              "custom_mapped": {
                "type": "bool",
                "description": "Enable custom mapped.",
                "description_kind": "plain",
                "optional": true
              },
              "enable_active_active": {
                "type": "bool",
                "description": "Switch to Enable/Disable active_active_ha for an existing site2cloud connection.",
                "description_kind": "plain",
                "optional": true
              },
              "enable_dead_peer_detection": {
                "type": "bool",
                "description": "Switch to Enable/Disable Deed Peer Detection for an existing site2cloud connection.",
                "description_kind": "plain",
                "optional": true
              },
              "enable_event_triggered_ha": {
                "type": "bool",
                "description": "Enable Event Triggered HA.",
                "description_kind": "plain",
                "optional": true
              },
              "enable_ikev2": {
                "type": "bool",
                "description": "Switch to enable IKEv2 for policy based site2cloud.",
                "description_kind": "plain",
                "optional": true
              },
              "enable_single_ip_ha": {
                "type": "bool",
                "description": "Enable single IP HA on a site2cloud connection.",
                "description_kind": "plain",
                "optional": true
              },
              "forward_traffic_to_transit": {
                "type": "bool",
                "description": "Enable spoke gateway with mapped site2cloud configurations to forward traffic from site2cloud connection to Aviatrix Transit Gateway.",
                "description_kind": "plain",
                "optional": true
              },
              "ha_enabled": {
                "type": "bool",
                "description": "Specify whether enabling HA or not.",
                "description_kind": "plain",
                "optional": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "local_destination_real_cidrs": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "Local Initiated Traffic Destination Real CIDRs.",
                "description_kind": "plain",
                "optional": true
              },
              "local_destination_virtual_cidrs": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "Local Initiated Traffic Destination Virtual CIDRs.",
                "description_kind": "plain",
                "optional": true
              },
              "local_source_real_cidrs": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "Local Initiated Traffic Source Real CIDRs.",
                "description_kind": "plain",
                "optional": true
              },
              "local_source_virtual_cidrs": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "Local Initiated Traffic Source Virtual CIDRs.",
                "description_kind": "plain",
                "optional": true
              },
              "local_subnet_cidr": {
                "type": "string",
                "description": "Local Subnet CIDR.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "local_subnet_virtual": {
                "type": "string",
                "description": "Local Subnet CIDR (Virtual).",
                "description_kind": "plain",
                "optional": true
              },
              "local_tunnel_ip": {
                "type": "string",
                "description": "Local tunnel IP address.",
                "description_kind": "plain",
                "optional": true
              },
              "phase1_remote_identifier": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "List of phase 1 remote identifier of the IPsec tunnel. This can be configured as a list of any string, including emtpy string.",
                "description_kind": "plain",
                "optional": true
              },
              "phase_1_authentication": {
                "type": "string",
                "description": "Phase one Authentication. Valid values: 'SHA-1', 'SHA-256', 'SHA-384' and 'SHA-512'.",
                "description_kind": "plain",
                "optional": true
              },
              "phase_1_dh_groups": {
                "type": "string",
                "description": "Phase one DH Groups. Valid values: '1', '2', '5', '14', '15', '16', '17', '18', '19', '20' and '21'.",
                "description_kind": "plain",
                "optional": true
              },
              "phase_1_encryption": {
                "type": "string",
                "description": "Phase one Encryption. Valid values: '3DES', 'AES-128-CBC', 'AES-192-CBC' and 'AES-256-CBC', 'AES-128-GCM-64', 'AES-128-GCM-96', 'AES-128-GCM-128', 'AES-256-GCM-64', 'AES-256-GCM-96', and 'AES-256-GCM-128'.",
                "description_kind": "plain",
                "optional": true
              },
              "phase_2_authentication": {
                "type": "string",
                "description": "Phase two Authentication. Valid values: 'NO-AUTH', 'HMAC-SHA-1', 'HMAC-SHA-256', 'HMAC-SHA-384' and 'HMAC-SHA-512'.",
                "description_kind": "plain",
                "optional": true
              },
              "phase_2_dh_groups": {
                "type": "string",
                "description": "Phase two DH Groups. Valid values: '1', '2', '5', '14', '15', '16', '17', '18', '19', '20' and '21'.",
                "description_kind": "plain",
                "optional": true
              },
              "phase_2_encryption": {
                "type": "string",
                "description": "Phase two Encryption. Valid values: '3DES', 'AES-128-CBC', 'AES-192-CBC', 'AES-256-CBC', 'AES-128-GCM-64', 'AES-128-GCM-96', 'AES-128-GCM-128', 'AES-256-GCM-64', 'AES-256-GCM-96', 'AES-256-GCM-128', and 'NULL-ENCR'.",
                "description_kind": "plain",
                "optional": true
              },
              "pre_shared_key": {
                "type": "string",
                "description": "Pre-Shared Key.",
                "description_kind": "plain",
                "optional": true,
                "sensitive": true
              },
              "primary_cloud_gateway_name": {
                "type": "string",
                "description": "Primary Cloud Gateway Name.",
                "description_kind": "plain",
                "required": true
              },
              "private_route_encryption": {
                "type": "bool",
                "description": "Private route encryption switch.",
                "description_kind": "plain",
                "optional": true
              },
              "remote_destination_real_cidrs": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "Remote Initiated Traffic Destination Real CIDRs.",
                "description_kind": "plain",
                "optional": true
              },
              "remote_destination_virtual_cidrs": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "Remote Initiated Traffic Destination Virtual CIDRs.",
                "description_kind": "plain",
                "optional": true
              },
              "remote_gateway_ip": {
                "type": "string",
                "description": "Remote Gateway IP.",
                "description_kind": "plain",
                "required": true
              },
              "remote_gateway_latitude": {
                "type": "number",
                "description": "Latitude of remote gateway.",
                "description_kind": "plain",
                "optional": true
              },
              "remote_gateway_longitude": {
                "type": "number",
                "description": "Longitude of remote gateway.",
                "description_kind": "plain",
                "optional": true
              },
              "remote_gateway_type": {
                "type": "string",
                "description": "Remote gateway type. Valid values: 'generic', 'avx', 'aws', 'azure', 'sonicwall' and 'oracle'.",
                "description_kind": "plain",
                "required": true
              },
              "remote_identifier": {
                "type": "string",
                "description": "Remote identifier. Required for Cert based authentication type.",
                "description_kind": "plain",
                "optional": true
              },
              "remote_source_real_cidrs": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "Remote Initiated Traffic Source Real CIDRs.",
                "description_kind": "plain",
                "optional": true
              },
              "remote_source_virtual_cidrs": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "Remote Initiated Traffic Source Virtual CIDRs.",
                "description_kind": "plain",
                "optional": true
              },
              "remote_subnet_cidr": {
                "type": "string",
                "description": "Remote Subnet CIDR.",
                "description_kind": "plain",
                "optional": true
              },
              "remote_subnet_virtual": {
                "type": "string",
                "description": "Remote Subnet CIDR (Virtual).",
                "description_kind": "plain",
                "optional": true
              },
              "remote_tunnel_ip": {
                "type": "string",
                "description": "Remote tunnel IP address.",
                "description_kind": "plain",
                "optional": true
              },
              "route_table_list": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "Route tables to modify.",
                "description_kind": "plain",
                "optional": true
              },
              "ssl_server_pool": {
                "type": "string",
                "description": "Specify ssl_server_pool for tunnel_type 'tcp'. Default value is '192.168.44.0/24'",
                "description_kind": "plain",
                "optional": true
              },
              "tunnel_type": {
                "type": "string",
                "description": "Site2Cloud Tunnel Type. Valid values: 'policy' and 'route'.",
                "description_kind": "plain",
                "required": true
              },
              "vpc_id": {
                "type": "string",
                "description": "VPC Id of the cloud gateway.",
                "description_kind": "plain",
                "required": true
              }
            },
            "description_kind": "plain"
          }
        },
        "aviatrix_site2cloud_ca_cert_tag": {
          "version": 0,
          "block": {
            "attributes": {
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "tag_name": {
                "type": "string",
                "description": "Unique name of the ca cert tag.",
                "description_kind": "plain",
                "required": true
              }
            },
            "block_types": {
              "ca_certificates": {
                "nesting_mode": "set",
                "block": {
                  "attributes": {
                    "cert_content": {
                      "type": "string",
                      "description": "Content of cert certificate to create only one cert.",
                      "description_kind": "plain",
                      "required": true
                    },
                    "common_name": {
                      "type": "string",
                      "description": "Common name of created cert.",
                      "description_kind": "plain",
                      "computed": true
                    },
                    "expiration_time": {
                      "type": "string",
                      "description": "Expiration time of created cert.",
                      "description_kind": "plain",
                      "computed": true
                    },
                    "id": {
                      "type": "string",
                      "description": "Unique id of created cert.",
                      "description_kind": "plain",
                      "computed": true
                    },
                    "issuer_name": {
                      "type": "string",
                      "description": "Issuer name of created cert.",
                      "description_kind": "plain",
                      "computed": true
                    },
                    "unique_serial": {
                      "type": "string",
                      "description": "Unique serial of created cert.",
                      "description_kind": "plain",
                      "computed": true
                    }
                  },
                  "description": "A set of CA certificates.",
                  "description_kind": "plain"
                },
                "min_items": 1
              }
            },
            "description_kind": "plain"
          }
        },
        "aviatrix_smart_group": {
          "version": 0,
          "block": {
            "attributes": {
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "description": "Name of the Smart Group.",
                "description_kind": "plain",
                "required": true
              },
              "uuid": {
                "type": "string",
                "description": "UUID of the Smart Group.",
                "description_kind": "plain",
                "computed": true
              }
            },
            "block_types": {
              "selector": {
                "nesting_mode": "list",
                "block": {
                  "block_types": {
                    "match_expressions": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "account_id": {
                            "type": "string",
                            "description": "Account ID this expression matches.",
                            "description_kind": "plain",
                            "optional": true
                          },
                          "account_name": {
                            "type": "string",
                            "description": "Account name this expression matches.",
                            "description_kind": "plain",
                            "optional": true
                          },
                          "cidr": {
                            "type": "string",
                            "description": "CIDR block or IP Address this expression matches.",
                            "description_kind": "plain",
                            "optional": true
                          },
                          "name": {
                            "type": "string",
                            "description": "Name this expression matches.",
                            "description_kind": "plain",
                            "optional": true
                          },
                          "region": {
                            "type": "string",
                            "description": "Region this expression matches.",
                            "description_kind": "plain",
                            "optional": true
                          },
                          "res_id": {
                            "type": "string",
                            "description": "Resource ID this expression matches.",
                            "description_kind": "plain",
                            "optional": true
                          },
                          "tags": {
                            "type": [
                              "map",
                              "string"
                            ],
                            "description": "Map of tags this expression matches.",
                            "description_kind": "plain",
                            "optional": true
                          },
                          "type": {
                            "type": "string",
                            "description": "Type of resource this expression matches.",
                            "description_kind": "plain",
                            "optional": true
                          },
                          "zone": {
                            "type": "string",
                            "description": "Zone this expression matches.",
                            "description_kind": "plain",
                            "optional": true
                          }
                        },
                        "description_kind": "plain"
                      },
                      "min_items": 1
                    }
                  },
                  "description": "List of match expressions for the Smart Group.",
                  "description_kind": "plain"
                },
                "min_items": 1,
                "max_items": 1
              }
            },
            "description_kind": "plain"
          }
        },
        "aviatrix_splunk_logging": {
          "version": 0,
          "block": {
            "attributes": {
              "custom_input_config": {
                "type": "string",
                "description": "Custom configuration.",
                "description_kind": "plain",
                "optional": true
              },
              "custom_output_config_file": {
                "type": "string",
                "description": "Configuration file. Use the filebase64 function to read from a file.",
                "description_kind": "plain",
                "optional": true
              },
              "excluded_gateways": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "List of excluded gateways.",
                "description_kind": "plain",
                "optional": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "port": {
                "type": "number",
                "description": "Port number.",
                "description_kind": "plain",
                "optional": true
              },
              "server": {
                "type": "string",
                "description": "Server IP.",
                "description_kind": "plain",
                "optional": true
              },
              "status": {
                "type": "string",
                "description": "Enabled or not.",
                "description_kind": "plain",
                "computed": true
              }
            },
            "description_kind": "plain"
          }
        },
        "aviatrix_spoke_external_device_conn": {
          "version": 0,
          "block": {
            "attributes": {
              "approved_cidrs": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "Set of approved cidrs. Requires 'enable_learned_cidrs_approval' to be true. Type: Set(String).",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "backup_bgp_md5_key": {
                "type": "string",
                "description": "Backup BGP MD5 authentication key.",
                "description_kind": "plain",
                "optional": true,
                "sensitive": true
              },
              "backup_bgp_remote_as_num": {
                "type": "string",
                "description": "Backup BGP remote ASN (Autonomous System Number). Integer between 1-4294967294.",
                "description_kind": "plain",
                "optional": true
              },
              "backup_direct_connect": {
                "type": "bool",
                "description": "Backup direct connect for backup external device.",
                "description_kind": "plain",
                "optional": true
              },
              "backup_local_lan_ip": {
                "type": "string",
                "description": "Backup Local LAN IP.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "backup_local_tunnel_cidr": {
                "type": "string",
                "description": "Source CIDR for the tunnel from the backup Aviatrix spoke gateway.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "backup_pre_shared_key": {
                "type": "string",
                "description": "Backup pre shared key.",
                "description_kind": "plain",
                "optional": true,
                "sensitive": true
              },
              "backup_remote_gateway_ip": {
                "type": "string",
                "description": "Backup remote gateway IP.",
                "description_kind": "plain",
                "optional": true
              },
              "backup_remote_lan_ip": {
                "type": "string",
                "description": "Backup Remote LAN IP.",
                "description_kind": "plain",
                "optional": true
              },
              "backup_remote_tunnel_cidr": {
                "type": "string",
                "description": "Destination CIDR for the tunnel to the backup external device.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "bgp_local_as_num": {
                "type": "string",
                "description": "BGP local ASN (Autonomous System Number). Integer between 1-4294967294.",
                "description_kind": "plain",
                "optional": true
              },
              "bgp_md5_key": {
                "type": "string",
                "description": "BGP MD5 authentication key.",
                "description_kind": "plain",
                "optional": true,
                "sensitive": true
              },
              "bgp_remote_as_num": {
                "type": "string",
                "description": "BGP remote ASN (Autonomous System Number). Integer between 1-4294967294.",
                "description_kind": "plain",
                "optional": true
              },
              "connection_name": {
                "type": "string",
                "description": "The name of the spoke external device connection which is going to be created.",
                "description_kind": "plain",
                "required": true
              },
              "connection_type": {
                "type": "string",
                "description": "Connection type. Valid values: 'bgp', 'static'. Default value: 'bgp'.",
                "description_kind": "plain",
                "optional": true
              },
              "custom_algorithms": {
                "type": "bool",
                "description": "Switch to enable custom/non-default algorithms for IPSec Authentication/Encryption.",
                "description_kind": "plain",
                "optional": true
              },
              "direct_connect": {
                "type": "bool",
                "description": "Set true for private network infrastructure.",
                "description_kind": "plain",
                "optional": true
              },
              "enable_bgp_lan_activemesh": {
                "type": "bool",
                "description": "Switch to enable BGP LAN ActiveMesh. Only valid for GCP and Azure with Remote Gateway HA enabled. Requires Azure Remote Gateway insane mode enabled. Valid values: true, false. Default: false. Available as of provider version R3.0.2+.",
                "description_kind": "plain",
                "optional": true
              },
              "enable_event_triggered_ha": {
                "type": "bool",
                "description": "Enable Event Triggered HA.",
                "description_kind": "plain",
                "optional": true
              },
              "enable_ikev2": {
                "type": "bool",
                "description": "Set as true if use IKEv2.",
                "description_kind": "plain",
                "optional": true
              },
              "enable_learned_cidrs_approval": {
                "type": "bool",
                "description": "Enable learned CIDR approval for the connection. Only valid with 'connection_type' = 'bgp'. Requires the spoke_gateway's 'learned_cidrs_approval_mode' attribute be set to 'connection'. Valid values: true, false. Default value: false.",
                "description_kind": "plain",
                "optional": true
              },
              "gw_name": {
                "type": "string",
                "description": "Name of the BGP Spoke Gateway.",
                "description_kind": "plain",
                "required": true
              },
              "ha_enabled": {
                "type": "bool",
                "description": "Set as true if there are two external devices.",
                "description_kind": "plain",
                "optional": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "local_lan_ip": {
                "type": "string",
                "description": "Local LAN IP.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "local_tunnel_cidr": {
                "type": "string",
                "description": "Source CIDR for the tunnel from the Aviatrix spoke gateway.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "manual_bgp_advertised_cidrs": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "Configure manual BGP advertised CIDRs for this connection. Only valid with 'connection_type' = 'bgp'.",
                "description_kind": "plain",
                "optional": true
              },
              "phase1_remote_identifier": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "List of phase 1 remote identifier of the IPsec tunnel. This can be configured as a list of any string, including emtpy string.",
                "description_kind": "plain",
                "optional": true
              },
              "phase_1_authentication": {
                "type": "string",
                "description": "Phase one Authentication. Valid values: 'SHA-1', 'SHA-256', 'SHA-384' and 'SHA-512'.",
                "description_kind": "plain",
                "optional": true
              },
              "phase_1_dh_groups": {
                "type": "string",
                "description": "Phase one DH Groups. Valid values: '1', '2', '5', '14', '15', '16', '17', '18', '19', '20' and '21'.",
                "description_kind": "plain",
                "optional": true
              },
              "phase_1_encryption": {
                "type": "string",
                "description": "Phase one Encryption. Valid values: '3DES', 'AES-128-CBC', 'AES-192-CBC' and 'AES-256-CBC', 'AES-128-GCM-64', 'AES-128-GCM-96', 'AES-128-GCM-128', 'AES-256-GCM-64', 'AES-256-GCM-96', and 'AES-256-GCM-128'.",
                "description_kind": "plain",
                "optional": true
              },
              "phase_2_authentication": {
                "type": "string",
                "description": "Phase two Authentication. Valid values: 'NO-AUTH', 'HMAC-SHA-1', 'HMAC-SHA-256', 'HMAC-SHA-384' and 'HMAC-SHA-512'.",
                "description_kind": "plain",
                "optional": true
              },
              "phase_2_dh_groups": {
                "type": "string",
                "description": "Phase two DH Groups. Valid values: '1', '2', '5', '14', '15', '16', '17', '18', '19', '20' and '21'.",
                "description_kind": "plain",
                "optional": true
              },
              "phase_2_encryption": {
                "type": "string",
                "description": "Phase two Encryption. Valid values: '3DES', 'AES-128-CBC', 'AES-192-CBC', 'AES-256-CBC', 'AES-128-GCM-64', 'AES-128-GCM-96', 'AES-128-GCM-128', 'AES-256-GCM-64', 'AES-256-GCM-96', 'AES-256-GCM-128', and 'NULL-ENCR'.",
                "description_kind": "plain",
                "optional": true
              },
              "pre_shared_key": {
                "type": "string",
                "description": "If left blank, the pre-shared key will be auto generated.",
                "description_kind": "plain",
                "optional": true,
                "sensitive": true
              },
              "prepend_as_path": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "Connection AS Path Prepend customized by specifying AS PATH for a BGP connection.",
                "description_kind": "plain",
                "optional": true
              },
              "remote_gateway_ip": {
                "type": "string",
                "description": "Remote Gateway IP.",
                "description_kind": "plain",
                "optional": true
              },
              "remote_lan_ip": {
                "type": "string",
                "description": "Remote LAN IP.",
                "description_kind": "plain",
                "optional": true
              },
              "remote_subnet": {
                "type": "string",
                "description": "Remote CIDRs joined as a string with ','. Required for a 'static' type connection.",
                "description_kind": "plain",
                "optional": true
              },
              "remote_tunnel_cidr": {
                "type": "string",
                "description": "Destination CIDR for the tunnel to the external device.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "remote_vpc_name": {
                "type": "string",
                "description": "Name of the remote VPC for a LAN BGP connection. Only valid when 'connection_type' = 'bgp' and tunnel_protocol' = 'LAN' with an Azure spoke gateway. Must be in the form \"<VNET-name>:<resource-group-name>\". Available as of provider version R3.0.2+.",
                "description_kind": "plain",
                "optional": true
              },
              "tunnel_protocol": {
                "type": "string",
                "description": "Tunnel Protocol. Valid values: 'IPsec', 'LAN'. Default value: 'IPsec'. Case insensitive.",
                "description_kind": "plain",
                "optional": true
              },
              "vpc_id": {
                "type": "string",
                "description": "ID of the VPC where the BGP Spoke Gateway is located.",
                "description_kind": "plain",
                "required": true
              }
            },
            "description_kind": "plain"
          }
        },
        "aviatrix_spoke_gateway": {
          "version": 2,
          "block": {
            "attributes": {
              "account_name": {
                "type": "string",
                "description": "This parameter represents the name of a Cloud-Account in Aviatrix controller.",
                "description_kind": "plain",
                "required": true
              },
              "allocate_new_eip": {
                "type": "bool",
                "description": "If false, reuse an idle address in Elastic IP pool for this gateway. Otherwise, allocate a new Elastic IP and use it for this gateway.",
                "description_kind": "plain",
                "optional": true
              },
              "approved_learned_cidrs": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "Approved learned CIDRs for BGP Spoke Gateway. Available as of provider version R2.21+.",
                "description_kind": "plain",
                "optional": true
              },
              "availability_domain": {
                "type": "string",
                "description": "Availability domain for OCI.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "azure_eip_name_resource_group": {
                "type": "string",
                "description": "The name of the public IP address and its resource group in Azure to assign to this Spoke Gateway.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "bgp_ecmp": {
                "type": "bool",
                "description": "Enable Equal Cost Multi Path (ECMP) routing for the next hop for BGP Spoke Gateway.",
                "description_kind": "plain",
                "optional": true
              },
              "bgp_hold_time": {
                "type": "number",
                "description": "BGP Hold Time for BGP Spoke Gateway. Unit is in seconds. Valid values are between 12 and 360.",
                "description_kind": "plain",
                "optional": true
              },
              "bgp_lan_interfaces_count": {
                "type": "number",
                "description": "Number of interfaces that will be created for BGP over LAN enabled Azure spoke. Only valid for 8 (Azure), 32 (AzureGov) or AzureChina (2048). Default value: 1. Available as of provider version R3.0.2+.",
                "description_kind": "plain",
                "optional": true
              },
              "bgp_lan_ip_list": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "List of available BGP LAN interface IPs for spoke external device connection creation. Only supports 8 (Azure), 32 (AzureGov) or AzureChina (2048). Available as of provider version R3.0.2+.",
                "description_kind": "plain",
                "computed": true
              },
              "bgp_polling_time": {
                "type": "number",
                "description": "BGP route polling time for BGP Spoke Gateway. Unit is in seconds. Valid values are between 10 and 50.",
                "description_kind": "plain",
                "optional": true
              },
              "cloud_instance_id": {
                "type": "string",
                "description": "Cloud instance ID.",
                "description_kind": "plain",
                "computed": true
              },
              "cloud_type": {
                "type": "number",
                "description": "Type of cloud service provider.",
                "description_kind": "plain",
                "required": true
              },
              "customer_managed_keys": {
                "type": "string",
                "description": "Customer managed key ID.",
                "description_kind": "plain",
                "optional": true,
                "sensitive": true
              },
              "customized_spoke_vpc_routes": {
                "type": "string",
                "description": "A list of comma separated CIDRs to be customized for the spoke VPC routes. When configured, it will replace all learned routes in VPC routing tables, including RFC1918 and non-RFC1918 CIDRs. It applies to this spoke gateway only.",
                "description_kind": "plain",
                "optional": true
              },
              "disable_route_propagation": {
                "type": "bool",
                "description": "Disables route propagation on BGP Spoke to attached Transit Gateway. Default: false.",
                "description_kind": "plain",
                "optional": true
              },
              "eip": {
                "type": "string",
                "description": "Required when allocate_new_eip is false. It uses specified EIP for this gateway.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "enable_active_standby": {
                "type": "bool",
                "description": "Enables Active-Standby Mode, available only with HA enabled for BGP Spoke Gateway.",
                "description_kind": "plain",
                "optional": true
              },
              "enable_active_standby_preemptive": {
                "type": "bool",
                "description": "Enables Preemptive Mode for Active-Standby, available only with Active-Standby enabled.",
                "description_kind": "plain",
                "optional": true
              },
              "enable_auto_advertise_s2c_cidrs": {
                "type": "bool",
                "description": "Automatically advertise remote CIDR to Aviatrix Transit Gateway when route based Site2Cloud Tunnel is created.",
                "description_kind": "plain",
                "optional": true
              },
              "enable_bgp": {
                "type": "bool",
                "description": "Enable BGP. Default: false.",
                "description_kind": "plain",
                "optional": true
              },
              "enable_bgp_over_lan": {
                "type": "bool",
                "description": "Pre-allocate a network interface(eth4) for \"BGP over LAN\" functionality. Only valid for 8 (Azure), 32 (AzureGov) or AzureChina (2048). Valid values: true or false. Default value: false. Available as of provider version R3.0.2+.",
                "description_kind": "plain",
                "optional": true
              },
              "enable_encrypt_volume": {
                "type": "bool",
                "description": "Enable encrypt gateway EBS volume. Only supported for AWS provider. Valid values: true, false. Default value: false.",
                "description_kind": "plain",
                "optional": true
              },
              "enable_jumbo_frame": {
                "type": "bool",
                "description": "Enable jumbo frame support for spoke gateway. Valid values: true or false. Default value: true.",
                "description_kind": "plain",
                "optional": true
              },
              "enable_learned_cidrs_approval": {
                "type": "bool",
                "description": "Switch to enable/disable learned CIDR approval for BGP Spoke Gateway. Valid values: true, false.",
                "description_kind": "plain",
                "optional": true
              },
              "enable_monitor_gateway_subnets": {
                "type": "bool",
                "description": "Enable [monitor gateway subnets](https://docs.aviatrix.com/HowTos/gateway.html#monitor-gateway-subnet). Only valid for cloud_type = 1 (AWS) or 256 (AWSGov). Valid values: true, false. Default value: false.",
                "description_kind": "plain",
                "optional": true
              },
              "enable_preserve_as_path": {
                "type": "bool",
                "description": "Enable preserve as_path when advertising manual summary cidrs on BGP spoke gateway.",
                "description_kind": "plain",
                "optional": true
              },
              "enable_private_oob": {
                "type": "bool",
                "description": "Enable private OOB.",
                "description_kind": "plain",
                "optional": true
              },
              "enable_private_vpc_default_route": {
                "type": "bool",
                "description": "Config Private VPC Default Route.",
                "description_kind": "plain",
                "optional": true
              },
              "enable_skip_public_route_table_update": {
                "type": "bool",
                "description": "Skip Public Route Table Update.",
                "description_kind": "plain",
                "optional": true
              },
              "enable_spot_instance": {
                "type": "bool",
                "description": "Enable spot instance. NOT supported for production deployment.",
                "description_kind": "plain",
                "optional": true
              },
              "enable_vpc_dns_server": {
                "type": "bool",
                "description": "Enable vpc_dns_server for Gateway. Valid values: true, false.",
                "description_kind": "plain",
                "optional": true
              },
              "fault_domain": {
                "type": "string",
                "description": "Fault domain for OCI.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "filtered_spoke_vpc_routes": {
                "type": "string",
                "description": "A list of comma separated CIDRs to be filtered from the spoke VPC route table. When configured, filtering CIDR(s) or it’s subnet will be deleted from VPC routing tables as well as from spoke gateway’s routing table. It applies to this spoke gateway only.",
                "description_kind": "plain",
                "optional": true
              },
              "gw_name": {
                "type": "string",
                "description": "Name of the gateway which is going to be created.",
                "description_kind": "plain",
                "required": true
              },
              "gw_size": {
                "type": "string",
                "description": "Size of the gateway instance.",
                "description_kind": "plain",
                "required": true
              },
              "ha_availability_domain": {
                "type": "string",
                "description": "HA availability domain for OCI.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "ha_azure_eip_name_resource_group": {
                "type": "string",
                "description": "The name of the public IP address and its resource group in Azure to assign to the HA Spoke Gateway.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "ha_bgp_lan_ip_list": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "List of available BGP LAN interface IPs for spoke external device HA connection creation. Only supports 8 (Azure), 32 (AzureGov) or AzureChina (2048). Available as of provider version R3.0.2+.",
                "description_kind": "plain",
                "computed": true
              },
              "ha_cloud_instance_id": {
                "type": "string",
                "description": "Cloud instance ID of HA spoke gateway.",
                "description_kind": "plain",
                "computed": true
              },
              "ha_eip": {
                "type": "string",
                "description": "Public IP address that you want assigned to the HA Spoke Gateway.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "ha_fault_domain": {
                "type": "string",
                "description": "HA fault domain for OCI.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "ha_gw_name": {
                "type": "string",
                "description": "Aviatrix spoke gateway unique name of HA spoke gateway.",
                "description_kind": "plain",
                "computed": true
              },
              "ha_gw_size": {
                "type": "string",
                "description": "HA Gateway Size.",
                "description_kind": "plain",
                "optional": true
              },
              "ha_image_version": {
                "type": "string",
                "description": "ha_image_version can be used to set the desired image version of the HA gateway. If set, we will attempt to update the gateway to the specified version.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "ha_insane_mode_az": {
                "type": "string",
                "description": "AZ of subnet being created for Insane Mode Spoke HA Gateway. Required for AWS if insane_mode is true and ha_subnet is set.",
                "description_kind": "plain",
                "optional": true
              },
              "ha_oob_availability_zone": {
                "type": "string",
                "description": "OOB HA availability zone.",
                "description_kind": "plain",
                "optional": true
              },
              "ha_oob_management_subnet": {
                "type": "string",
                "description": "OOB HA management subnet.",
                "description_kind": "plain",
                "optional": true
              },
              "ha_private_ip": {
                "type": "string",
                "description": "Private IP address of the spoke gateway created.",
                "description_kind": "plain",
                "computed": true
              },
              "ha_private_mode_subnet_zone": {
                "type": "string",
                "description": " Private Mode HA subnet availability zone.",
                "description_kind": "plain",
                "optional": true
              },
              "ha_public_ip": {
                "type": "string",
                "description": "Public IP address of the HA Spoke Gateway.",
                "description_kind": "plain",
                "computed": true
              },
              "ha_security_group_id": {
                "type": "string",
                "description": "HA security group used for the spoke gateway.",
                "description_kind": "plain",
                "computed": true
              },
              "ha_software_version": {
                "type": "string",
                "description": "ha_software_version can be used to set the desired software version of the HA gateway. If set, we will attempt to update the gateway to the specified version. If left blank, the gateway software version will continue to be managed through the aviatrix_controller_config resource.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "ha_subnet": {
                "type": "string",
                "description": "HA Subnet. Required if enabling HA for AWS/AWSGov/AWSChina/Azure/AzureChina/OCI/Alibaba Cloud. Optional if enabling HA for GCP.",
                "description_kind": "plain",
                "optional": true
              },
              "ha_zone": {
                "type": "string",
                "description": "HA Zone. Required if enabling HA for GCP. Optional for Azure.",
                "description_kind": "plain",
                "optional": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "image_version": {
                "type": "string",
                "description": "image_version can be used to set the desired image version of the gateway. If set, we will attempt to update the gateway to the specified version.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "included_advertised_spoke_routes": {
                "type": "string",
                "description": "A list of comma separated CIDRs to be advertised to on-prem as 'Included CIDR List'. When configured, it will replace all advertised routes from this VPC.",
                "description_kind": "plain",
                "optional": true
              },
              "insane_mode": {
                "type": "bool",
                "description": "Enable Insane Mode for Spoke Gateway. Valid values: true, false. Supported for AWS/AWSGov, GCP, Azure and OCI. If insane mode is enabled, gateway size has to at least be c5 size for AWS and Standard_D3_v2 size for Azure.",
                "description_kind": "plain",
                "optional": true
              },
              "insane_mode_az": {
                "type": "string",
                "description": "AZ of subnet being created for Insane Mode Spoke Gateway. Required if insane_mode is enabled for AWS cloud.",
                "description_kind": "plain",
                "optional": true
              },
              "learned_cidrs_approval_mode": {
                "type": "string",
                "description": "Set the learned CIDRs approval mode for BGP Spoke Gateway. Only valid when 'enable_learned_cidrs_approval' is set to true. Currently, only 'gateway' is supported: learned CIDR approval applies to ALL connections. Default value: 'gateway'.",
                "description_kind": "plain",
                "optional": true
              },
              "local_as_number": {
                "type": "string",
                "description": "Changes the Aviatrix BGP Spoke Gateway ASN number before you setup Aviatrix BGP Spoke Gateway connection configurations.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "manage_ha_gateway": {
                "type": "bool",
                "description": "This parameter is a switch used to determine whether or not to manage spoke ha gateway using the aviatrix_spoke_gateway resource. If this is set to false, managing spoke ha gateway must be done using the aviatrix_spoke_ha_gateway resource. Valid values: true, false. Default value: true.",
                "description_kind": "plain",
                "optional": true
              },
              "monitor_exclude_list": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "A set of monitored instance ids. Only valid when 'enable_monitor_gateway_subnets' = true.",
                "description_kind": "plain",
                "optional": true
              },
              "oob_availability_zone": {
                "type": "string",
                "description": "OOB subnet availability zone.",
                "description_kind": "plain",
                "optional": true
              },
              "oob_management_subnet": {
                "type": "string",
                "description": "OOB management subnet.",
                "description_kind": "plain",
                "optional": true
              },
              "prepend_as_path": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "List of AS numbers to populate BGP AP_PATH field when it advertises to VGW or peer devices. Only valid for BGP Spoke Gateway",
                "description_kind": "plain",
                "optional": true
              },
              "private_ip": {
                "type": "string",
                "description": "Private IP address of the spoke gateway created.",
                "description_kind": "plain",
                "computed": true
              },
              "private_mode_lb_vpc_id": {
                "type": "string",
                "description": "Private Mode controller load balancer vpc_id.  Required when private mode is enabled for the Controller.",
                "description_kind": "plain",
                "optional": true
              },
              "private_mode_subnet_zone": {
                "type": "string",
                "description": "Subnet availability zone. Required when Private Mode is enabled on the Controller and cloud_type is AWS.",
                "description_kind": "plain",
                "optional": true
              },
              "public_ip": {
                "type": "string",
                "description": "Public IP address of the Spoke Gateway created.",
                "description_kind": "plain",
                "computed": true
              },
              "rx_queue_size": {
                "type": "string",
                "description": "Gateway ethernet interface RX queue size. Supported for AWS related clouds only. Applies on HA as well if enabled.",
                "description_kind": "plain",
                "optional": true
              },
              "security_group_id": {
                "type": "string",
                "description": "Security group used for the spoke gateway.",
                "description_kind": "plain",
                "computed": true
              },
              "single_az_ha": {
                "type": "bool",
                "description": "Set to 'enabled' if this feature is desired.",
                "description_kind": "plain",
                "optional": true
              },
              "single_ip_snat": {
                "type": "bool",
                "description": "Specify whether to enable Source NAT feature in 'single_ip' mode on the gateway or not.",
                "description_kind": "plain",
                "optional": true
              },
              "software_version": {
                "type": "string",
                "description": "software_version can be used to set the desired software version of the gateway. If set, we will attempt to update the gateway to the specified version. If left blank, the gateway software version will continue to be managed through the aviatrix_controller_config resource.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "spoke_bgp_manual_advertise_cidrs": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "Intended CIDR list to be advertised to external BGP router.",
                "description_kind": "plain",
                "optional": true
              },
              "spot_price": {
                "type": "string",
                "description": "Price for spot instance. NOT supported for production deployment.",
                "description_kind": "plain",
                "optional": true
              },
              "subnet": {
                "type": "string",
                "description": "Public Subnet Info.",
                "description_kind": "plain",
                "required": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "description": "A map of tags to assign to the spoke gateway.",
                "description_kind": "plain",
                "optional": true
              },
              "tunnel_detection_time": {
                "type": "number",
                "description": "The IPSec tunnel down detection time for the Spoke Gateway.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "vpc_id": {
                "type": "string",
                "description": "VPC-ID/VNet-Name of cloud provider.",
                "description_kind": "plain",
                "required": true
              },
              "vpc_reg": {
                "type": "string",
                "description": "Region of cloud provider.",
                "description_kind": "plain",
                "required": true
              },
              "zone": {
                "type": "string",
                "description": "Availability Zone. Only available for Azure (8), Azure GOV (32) and Azure CHINA (2048). Must be in the form 'az-n', for example, 'az-2'.",
                "description_kind": "plain",
                "optional": true
              }
            },
            "description_kind": "plain"
          }
        },
        "aviatrix_spoke_gateway_subnet_group": {
          "version": 0,
          "block": {
            "attributes": {
              "gw_name": {
                "type": "string",
                "description": "Spoke gateway name.",
                "description_kind": "plain",
                "required": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "description": "Subnet group name.",
                "description_kind": "plain",
                "required": true
              },
              "subnets": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "A set of subnets in the subnet group.",
                "description_kind": "plain",
                "optional": true
              }
            },
            "description_kind": "plain"
          }
        },
        "aviatrix_spoke_ha_gateway": {
          "version": 0,
          "block": {
            "attributes": {
              "account_name": {
                "type": "string",
                "description": "This parameter represents the name of a Cloud-Account in Aviatrix controller.",
                "description_kind": "plain",
                "computed": true
              },
              "availability_domain": {
                "type": "string",
                "description": "Availability domain for OCI.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "azure_eip_name_resource_group": {
                "type": "string",
                "description": "The name of the public IP address and its resource group in Azure to assign to this Gateway.",
                "description_kind": "plain",
                "optional": true
              },
              "cloud_instance_id": {
                "type": "string",
                "description": "Cloud instance ID.",
                "description_kind": "plain",
                "computed": true
              },
              "cloud_type": {
                "type": "number",
                "description": "Type of cloud service provider.",
                "description_kind": "plain",
                "computed": true
              },
              "eip": {
                "type": "string",
                "description": "If set, the specified EIP is used for this gateway.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "fault_domain": {
                "type": "string",
                "description": "Fault domain for OCI.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "gw_name": {
                "type": "string",
                "description": "Name of the HA gateway which is going to be created.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "gw_size": {
                "type": "string",
                "description": "Size of the gateway instance.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "image_version": {
                "type": "string",
                "description": "Image version of the gateway.",
                "description_kind": "plain",
                "computed": true
              },
              "insane_mode": {
                "type": "bool",
                "description": "Enable Insane Mode for Spoke Gateway. Valid values: true, false. Supported for AWS/AWSGov, GCP, Azure and OCI. If insane mode is enabled, gateway size has to at least be c5 size for AWS and Standard_D3_v2 size for Azure.",
                "description_kind": "plain",
                "optional": true
              },
              "insane_mode_az": {
                "type": "string",
                "description": "AZ of subnet being created for Insane Mode Spoke Gateway. Required if insane_mode is enabled for AWS cloud.",
                "description_kind": "plain",
                "optional": true
              },
              "primary_gw_name": {
                "type": "string",
                "description": "Name of the primary gateway.",
                "description_kind": "plain",
                "required": true
              },
              "private_ip": {
                "type": "string",
                "description": "Private IP address of the spoke ha gateway created.",
                "description_kind": "plain",
                "computed": true
              },
              "public_ip": {
                "type": "string",
                "description": "Public IP address of the spoke ha gateway created.",
                "description_kind": "plain",
                "computed": true
              },
              "security_group_id": {
                "type": "string",
                "description": "Security group used for the spoke ha gateway.",
                "description_kind": "plain",
                "computed": true
              },
              "software_version": {
                "type": "string",
                "description": "Software version of the gateway.",
                "description_kind": "plain",
                "computed": true
              },
              "subnet": {
                "type": "string",
                "description": "Public Subnet Info.",
                "description_kind": "plain",
                "required": true
              },
              "vpc_reg": {
                "type": "string",
                "description": "Region of cloud provider.",
                "description_kind": "plain",
                "computed": true
              },
              "zone": {
                "type": "string",
                "description": "Availability Zone. Required for GCP gateway, example: 'us-west1-c'. Optional for Azure / Azure GOV / Azure CHINA gateway in the form 'az-n', example: 'az-2'.",
                "description_kind": "plain",
                "optional": true
              }
            },
            "description_kind": "plain"
          }
        },
        "aviatrix_spoke_transit_attachment": {
          "version": 0,
          "block": {
            "attributes": {
              "enable_max_performance": {
                "type": "bool",
                "description": "Indicates whether the maximum amount of HPE tunnels will be created. Only valid when transit and spoke gateways are each launched in Insane Mode and in the same cloud type. Available as of provider version R2.22.2+.",
                "description_kind": "plain",
                "optional": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "route_tables": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "Learned routes will be propagated to these route tables.",
                "description_kind": "plain",
                "optional": true
              },
              "spoke_bgp_enabled": {
                "type": "bool",
                "description": "Indicates whether the spoke gateway is BGP enabled or not.",
                "description_kind": "plain",
                "computed": true
              },
              "spoke_gw_name": {
                "type": "string",
                "description": "Name of the spoke gateway to attach to transit network.",
                "description_kind": "plain",
                "required": true
              },
              "spoke_prepend_as_path": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "AS Path Prepend customized by specifying AS PATH for a BGP connection. Applies on spoke gateway.",
                "description_kind": "plain",
                "optional": true
              },
              "transit_gw_name": {
                "type": "string",
                "description": "Name of the transit gateway to attach the spoke gateway to.",
                "description_kind": "plain",
                "required": true
              },
              "transit_prepend_as_path": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "AS Path Prepend customized by specifying AS PATH for a BGP connection. Applies on transit gateway.",
                "description_kind": "plain",
                "optional": true
              }
            },
            "description_kind": "plain"
          }
        },
        "aviatrix_sumologic_forwarder": {
          "version": 0,
          "block": {
            "attributes": {
              "access_id": {
                "type": "string",
                "description": "Access ID.",
                "description_kind": "plain",
                "required": true
              },
              "access_key": {
                "type": "string",
                "description": "Access key.",
                "description_kind": "plain",
                "required": true,
                "sensitive": true
              },
              "custom_configuration": {
                "type": "string",
                "description": "Custom configuration.",
                "description_kind": "plain",
                "optional": true
              },
              "excluded_gateways": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "List of excluded gateways.",
                "description_kind": "plain",
                "optional": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "source_category": {
                "type": "string",
                "description": "Source category.",
                "description_kind": "plain",
                "optional": true
              },
              "status": {
                "type": "string",
                "description": "Enabled or not.",
                "description_kind": "plain",
                "computed": true
              }
            },
            "description_kind": "plain"
          }
        },
        "aviatrix_trans_peer": {
          "version": 0,
          "block": {
            "attributes": {
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "nexthop": {
                "type": "string",
                "description": "Name of nexthop gateway.",
                "description_kind": "plain",
                "required": true
              },
              "reachable_cidr": {
                "type": "string",
                "description": "Destination CIDR.",
                "description_kind": "plain",
                "required": true
              },
              "source": {
                "type": "string",
                "description": "Name of Source gateway.",
                "description_kind": "plain",
                "required": true
              }
            },
            "description_kind": "plain"
          }
        },
        "aviatrix_transit_external_device_conn": {
          "version": 0,
          "block": {
            "attributes": {
              "approved_cidrs": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "Set of approved cidrs. Requires 'enable_learned_cidrs_approval' to be true. Type: Set(String).",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "backup_bgp_md5_key": {
                "type": "string",
                "description": "Backup BGP MD5 authentication key.",
                "description_kind": "plain",
                "optional": true,
                "sensitive": true
              },
              "backup_bgp_remote_as_num": {
                "type": "string",
                "description": "Backup BGP remote ASN (Autonomous System Number). Integer between 1-4294967294.",
                "description_kind": "plain",
                "optional": true
              },
              "backup_direct_connect": {
                "type": "bool",
                "description": "Backup direct connect for backup external device.",
                "description_kind": "plain",
                "optional": true
              },
              "backup_local_lan_ip": {
                "type": "string",
                "description": "Backup Local LAN IP. Required for GCP BGP over LAN Connection with HA enabled.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "backup_local_tunnel_cidr": {
                "type": "string",
                "description": "Source CIDR for the tunnel from the backup Aviatrix transit gateway.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "backup_pre_shared_key": {
                "type": "string",
                "description": "Backup pre shared key.",
                "description_kind": "plain",
                "optional": true,
                "sensitive": true
              },
              "backup_remote_gateway_ip": {
                "type": "string",
                "description": "Backup remote gateway IP.",
                "description_kind": "plain",
                "optional": true
              },
              "backup_remote_lan_ip": {
                "type": "string",
                "description": "Backup Remote LAN IP.",
                "description_kind": "plain",
                "optional": true
              },
              "backup_remote_tunnel_cidr": {
                "type": "string",
                "description": "Destination CIDR for the tunnel to the backup external device.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "bgp_local_as_num": {
                "type": "string",
                "description": "BGP local ASN (Autonomous System Number). Integer between 1-4294967294.",
                "description_kind": "plain",
                "optional": true
              },
              "bgp_md5_key": {
                "type": "string",
                "description": "BGP MD5 authentication key.",
                "description_kind": "plain",
                "optional": true,
                "sensitive": true
              },
              "bgp_remote_as_num": {
                "type": "string",
                "description": "BGP remote ASN (Autonomous System Number). Integer between 1-4294967294.",
                "description_kind": "plain",
                "optional": true
              },
              "connection_name": {
                "type": "string",
                "description": "The name of the transit external device connection which is going to be created.",
                "description_kind": "plain",
                "required": true
              },
              "connection_type": {
                "type": "string",
                "description": "Connection type. Valid values: 'bgp', 'static'. Default value: 'bgp'.",
                "description_kind": "plain",
                "optional": true
              },
              "custom_algorithms": {
                "type": "bool",
                "description": "Switch to enable custom/non-default algorithms for IPSec Authentication/Encryption.",
                "description_kind": "plain",
                "optional": true
              },
              "direct_connect": {
                "type": "bool",
                "description": "Set true for private network infrastructure.",
                "description_kind": "plain",
                "optional": true
              },
              "enable_bgp_lan_activemesh": {
                "type": "bool",
                "description": "Switch to enable BGP LAN ActiveMesh. Only valid for GCP and Azure with Remote Gateway HA enabled. Requires Azure Remote Gateway insane mode enabled. Valid values: true, false. Default: false. Available as of provider version R2.21+.",
                "description_kind": "plain",
                "optional": true
              },
              "enable_edge_segmentation": {
                "type": "bool",
                "description": "Switch to allow this connection to communicate with a Network Domain via Connection Policy.",
                "description_kind": "plain",
                "optional": true
              },
              "enable_event_triggered_ha": {
                "type": "bool",
                "description": "Enable Event Triggered HA.",
                "description_kind": "plain",
                "optional": true
              },
              "enable_ikev2": {
                "type": "bool",
                "description": "Set as true if use IKEv2.",
                "description_kind": "plain",
                "optional": true
              },
              "enable_jumbo_frame": {
                "type": "bool",
                "description": "Enable Jumbo Frame for the transit external device connection. Valid values: true, false.",
                "description_kind": "plain",
                "optional": true
              },
              "enable_learned_cidrs_approval": {
                "type": "bool",
                "description": "Enable learned CIDR approval for the connection. Only valid with 'connection_type' = 'bgp'. Requires the transit_gateway's 'learned_cidrs_approval_mode' attribute be set to 'connection'. Valid values: true, false. Default value: false. Available as of provider version R2.18+.",
                "description_kind": "plain",
                "optional": true
              },
              "gw_name": {
                "type": "string",
                "description": "Name of the Transit Gateway.",
                "description_kind": "plain",
                "required": true
              },
              "ha_enabled": {
                "type": "bool",
                "description": "Set as true if there are two external devices.",
                "description_kind": "plain",
                "optional": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "local_lan_ip": {
                "type": "string",
                "description": "Local LAN IP. Required for GCP BGP over LAN Connection.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "local_tunnel_cidr": {
                "type": "string",
                "description": "Source CIDR for the tunnel from the Aviatrix transit gateway.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "manual_bgp_advertised_cidrs": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "Configure manual BGP advertised CIDRs for this connection. Only valid with 'connection_type' = 'bgp'. Available as of provider version R2.18+.",
                "description_kind": "plain",
                "optional": true
              },
              "phase1_remote_identifier": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "List of phase 1 remote identifier of the IPsec tunnel. This can be configured as a list of any string, including emtpy string.",
                "description_kind": "plain",
                "optional": true
              },
              "phase_1_authentication": {
                "type": "string",
                "description": "Phase one Authentication. Valid values: 'SHA-1', 'SHA-256', 'SHA-384' and 'SHA-512'.",
                "description_kind": "plain",
                "optional": true
              },
              "phase_1_dh_groups": {
                "type": "string",
                "description": "Phase one DH Groups. Valid values: '1', '2', '5', '14', '15', '16', '17', '18', '19', '20' and '21'.",
                "description_kind": "plain",
                "optional": true
              },
              "phase_1_encryption": {
                "type": "string",
                "description": "Phase one Encryption. Valid values: '3DES', 'AES-128-CBC', 'AES-192-CBC' and 'AES-256-CBC', 'AES-128-GCM-64', 'AES-128-GCM-96', 'AES-128-GCM-128', 'AES-256-GCM-64', 'AES-256-GCM-96', and 'AES-256-GCM-128'.",
                "description_kind": "plain",
                "optional": true
              },
              "phase_2_authentication": {
                "type": "string",
                "description": "Phase two Authentication. Valid values: 'NO-AUTH', 'HMAC-SHA-1', 'HMAC-SHA-256', 'HMAC-SHA-384' and 'HMAC-SHA-512'.",
                "description_kind": "plain",
                "optional": true
              },
              "phase_2_dh_groups": {
                "type": "string",
                "description": "Phase two DH Groups. Valid values: '1', '2', '5', '14', '15', '16', '17', '18', '19', '20' and '21'.",
                "description_kind": "plain",
                "optional": true
              },
              "phase_2_encryption": {
                "type": "string",
                "description": "Phase two Encryption. Valid values: '3DES', 'AES-128-CBC', 'AES-192-CBC', 'AES-256-CBC', 'AES-128-GCM-64', 'AES-128-GCM-96', 'AES-128-GCM-128', 'AES-256-GCM-64', 'AES-256-GCM-96', 'AES-256-GCM-128', and 'NULL-ENCR'.",
                "description_kind": "plain",
                "optional": true
              },
              "pre_shared_key": {
                "type": "string",
                "description": "If left blank, the pre-shared key will be auto generated.",
                "description_kind": "plain",
                "optional": true,
                "sensitive": true
              },
              "prepend_as_path": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "Connection AS Path Prepend customized by specifying AS PATH for a BGP connection.",
                "description_kind": "plain",
                "optional": true
              },
              "remote_gateway_ip": {
                "type": "string",
                "description": "Remote Gateway IP.",
                "description_kind": "plain",
                "optional": true
              },
              "remote_lan_ip": {
                "type": "string",
                "description": "Remote LAN IP.",
                "description_kind": "plain",
                "optional": true
              },
              "remote_subnet": {
                "type": "string",
                "description": "Remote CIDRs joined as a string with ','. Required for a 'static' type connection.",
                "description_kind": "plain",
                "optional": true
              },
              "remote_tunnel_cidr": {
                "type": "string",
                "description": "Destination CIDR for the tunnel to the external device.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "remote_vpc_name": {
                "type": "string",
                "description": "Name of the remote VPC for a LAN BGP connection. Only valid when 'connection_type' = 'bgp' and tunnel_protocol' = 'LAN' with an Azure transit gateway. Must be in the form \"<VNET-name>:<resource-group-name>\". Available as of provider version R2.18+.",
                "description_kind": "plain",
                "optional": true
              },
              "switch_to_ha_standby_gateway": {
                "type": "bool",
                "description": "Only valid for Transit Gateway's with Active-Standby Mode enabled. Valid values: true, false. Default: false.",
                "description_kind": "plain",
                "optional": true
              },
              "tunnel_protocol": {
                "type": "string",
                "description": "Tunnel Protocol. Valid values: 'IPsec', 'GRE' or 'LAN'. Default value: 'IPsec'. Case insensitive.",
                "description_kind": "plain",
                "optional": true
              },
              "vpc_id": {
                "type": "string",
                "description": "ID of the VPC where the Transit Gateway is located. For GCP BGP over LAN connection, it is in the format of 'vpc_name~-~account_name'.",
                "description_kind": "plain",
                "required": true
              }
            },
            "description_kind": "plain"
          }
        },
        "aviatrix_transit_firenet_policy": {
          "version": 0,
          "block": {
            "attributes": {
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "inspected_resource_name": {
                "type": "string",
                "description": "Name of the resource to be added to transit firenet policy.",
                "description_kind": "plain",
                "required": true
              },
              "transit_firenet_gateway_name": {
                "type": "string",
                "description": "Name of the transit firenet gateway.",
                "description_kind": "plain",
                "required": true
              }
            },
            "description_kind": "plain"
          }
        },
        "aviatrix_transit_gateway": {
          "version": 1,
          "block": {
            "attributes": {
              "account_name": {
                "type": "string",
                "description": "This parameter represents the name of a Cloud-Account in Aviatrix controller.",
                "description_kind": "plain",
                "required": true
              },
              "allocate_new_eip": {
                "type": "bool",
                "description": "If false, reuse an idle address in Elastic IP pool for this gateway. Otherwise, allocate a new Elastic IP and use it for this gateway.",
                "description_kind": "plain",
                "optional": true
              },
              "approved_learned_cidrs": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "Approved learned CIDRs. Available as of provider version R2.21+.",
                "description_kind": "plain",
                "optional": true
              },
              "availability_domain": {
                "type": "string",
                "description": "Availability domain for OCI.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "azure_eip_name_resource_group": {
                "type": "string",
                "description": "The name of the public IP address and its resource group in Azure to assign to this Transit Gateway.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "bgp_ecmp": {
                "type": "bool",
                "description": "Enable Equal Cost Multi Path (ECMP) routing for the next hop.",
                "description_kind": "plain",
                "optional": true
              },
              "bgp_hold_time": {
                "type": "number",
                "description": "BGP Hold Time.",
                "description_kind": "plain",
                "optional": true
              },
              "bgp_lan_interfaces_count": {
                "type": "number",
                "description": "Number of interfaces that will be created for BGP over LAN enabled Azure transit.",
                "description_kind": "plain",
                "optional": true
              },
              "bgp_lan_ip_list": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "List of available BGP LAN interface IPs for transit external device connection creation. Only supports GCP and Azure. Available as of provider version R2.21.0+.",
                "description_kind": "plain",
                "computed": true
              },
              "bgp_manual_spoke_advertise_cidrs": {
                "type": "string",
                "description": "Intended CIDR list to be advertised to external bgp router.",
                "description_kind": "plain",
                "optional": true
              },
              "bgp_polling_time": {
                "type": "string",
                "description": "BGP route polling time. Unit is in seconds. Valid values are between 10 and 50.",
                "description_kind": "plain",
                "optional": true
              },
              "cloud_instance_id": {
                "type": "string",
                "description": "Instance ID of the transit gateway.",
                "description_kind": "plain",
                "computed": true
              },
              "cloud_type": {
                "type": "number",
                "description": "Type of cloud service provider, requires an integer value. Use 1 for AWS.",
                "description_kind": "plain",
                "required": true
              },
              "connected_transit": {
                "type": "bool",
                "description": "Specify Connected Transit status.",
                "description_kind": "plain",
                "optional": true
              },
              "customer_managed_keys": {
                "type": "string",
                "description": "Customer managed key ID.",
                "description_kind": "plain",
                "optional": true,
                "sensitive": true
              },
              "customized_spoke_vpc_routes": {
                "type": "string",
                "description": "A list of comma separated CIDRs to be customized for the spoke VPC routes. When configured, it will replace all learned routes in VPC routing tables, including RFC1918 and non-RFC1918 CIDRs. It applies to all spoke gateways attached to this transit gateway.",
                "description_kind": "plain",
                "optional": true
              },
              "customized_transit_vpc_routes": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "A list of CIDRs to be customized for the transit VPC routes. When configured, it will replace all learned routes in VPC routing tables, including RFC1918 and non-RFC1918 CIDRs.To be effective, `enable_advertise_transit_cidr` or firewall management access for a transit firenet gateway must be enabled.",
                "description_kind": "plain",
                "optional": true
              },
              "eip": {
                "type": "string",
                "description": "Required when allocate_new_eip is false. It uses specified EIP for this gateway.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "enable_active_standby": {
                "type": "bool",
                "description": "Enables Active-Standby Mode, available only with HA enabled.",
                "description_kind": "plain",
                "optional": true
              },
              "enable_active_standby_preemptive": {
                "type": "bool",
                "description": "Enables Preemptive Mode for Active-Standby, available only with Active-Standby enabled.",
                "description_kind": "plain",
                "optional": true
              },
              "enable_advertise_transit_cidr": {
                "type": "bool",
                "description": "Switch to Enable/Disable advertise transit VPC network CIDR.",
                "description_kind": "plain",
                "optional": true
              },
              "enable_bgp_over_lan": {
                "type": "bool",
                "description": "Pre-allocate a network interface(eth4) for \"BGP over LAN\" functionality. Only valid for cloud_type = 4 (GCP) and 8 (Azure). Valid values: true or false. Default value: false. Available as of provider version R2.18+",
                "description_kind": "plain",
                "optional": true
              },
              "enable_egress_transit_firenet": {
                "type": "bool",
                "description": "Specify whether to enable egress transit firenet interfaces or not.",
                "description_kind": "plain",
                "optional": true
              },
              "enable_encrypt_volume": {
                "type": "bool",
                "description": "Enable encrypt gateway EBS volume. Only supported for AWS and AWSGov providers. Valid values: true, false. Default value: false.",
                "description_kind": "plain",
                "optional": true
              },
              "enable_firenet": {
                "type": "bool",
                "description": "Specify whether to enable firenet interfaces or not.",
                "description_kind": "plain",
                "optional": true
              },
              "enable_gateway_load_balancer": {
                "type": "bool",
                "description": "Enable firenet interfaces with AWS Gateway Load Balancer. Only valid when `enable_firenet` or `enable_transit_firenet` are set to true and `cloud_type` = 1 (AWS). Currently AWS Gateway Load Balancer is only supported in AWS regions us-west-2 and us-east-1. Valid values: true or false. Default value: false.",
                "description_kind": "plain",
                "optional": true
              },
              "enable_hybrid_connection": {
                "type": "bool",
                "description": "Sign of readiness for TGW connection.",
                "description_kind": "plain",
                "optional": true
              },
              "enable_jumbo_frame": {
                "type": "bool",
                "description": "Enable jumbo frame support for transit gateway. Valid values: true or false. Default value: true.",
                "description_kind": "plain",
                "optional": true
              },
              "enable_learned_cidrs_approval": {
                "type": "bool",
                "description": "Switch to enable/disable encrypted transit approval for transit Gateway. Valid values: true, false.",
                "description_kind": "plain",
                "optional": true
              },
              "enable_monitor_gateway_subnets": {
                "type": "bool",
                "description": "Enable [monitor gateway subnets](https://docs.aviatrix.com/HowTos/gateway.html#monitor-gateway-subnet). Only valid for cloud_type = 1 (AWS) or 256 (AWSGov). Valid values: true, false. Default value: false.",
                "description_kind": "plain",
                "optional": true
              },
              "enable_multi_tier_transit": {
                "type": "bool",
                "description": "Enable Multi-tier Transit mode on transit gateway.",
                "description_kind": "plain",
                "optional": true
              },
              "enable_preserve_as_path": {
                "type": "bool",
                "description": "Enable preserve as_path when advertising manual summary cidrs on transit gateway.",
                "description_kind": "plain",
                "optional": true
              },
              "enable_private_oob": {
                "type": "bool",
                "description": "Enable private OOB.",
                "description_kind": "plain",
                "optional": true
              },
              "enable_s2c_rx_balancing": {
                "type": "bool",
                "description": "Enable S2C receive packet CPU re-balancing on transit gateway.",
                "description_kind": "plain",
                "optional": true
              },
              "enable_segmentation": {
                "type": "bool",
                "description": "Enable segmentation to allow association of transit gateway to security domains.",
                "description_kind": "plain",
                "optional": true
              },
              "enable_spot_instance": {
                "type": "bool",
                "description": "Enable spot instance. NOT supported for production deployment.",
                "description_kind": "plain",
                "optional": true
              },
              "enable_transit_firenet": {
                "type": "bool",
                "description": "Specify whether to enable transit firenet interfaces or not.",
                "description_kind": "plain",
                "optional": true
              },
              "enable_transit_summarize_cidr_to_tgw": {
                "type": "bool",
                "description": "Enable summarize CIDR to TGW.",
                "description_kind": "plain",
                "optional": true
              },
              "enable_vpc_dns_server": {
                "type": "bool",
                "description": "Enable vpc_dns_server for Gateway. Valid values: true, false.",
                "description_kind": "plain",
                "optional": true
              },
              "excluded_advertised_spoke_routes": {
                "type": "string",
                "description": "A list of comma separated CIDRs to be advertised to on-prem as 'Excluded CIDR List'. When configured, it inspects all the advertised CIDRs from its spoke gateways and remove those included in the 'Excluded CIDR List'.",
                "description_kind": "plain",
                "optional": true
              },
              "fault_domain": {
                "type": "string",
                "description": "Fault domain for OCI.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "filtered_spoke_vpc_routes": {
                "type": "string",
                "description": "A list of comma separated CIDRs to be filtered from the spoke VPC route table. When configured, filtering CIDR(s) or it’s subnet will be deleted from VPC routing tables as well as from spoke gateway’s routing table. It applies to all spoke gateways attached to this transit gateway.",
                "description_kind": "plain",
                "optional": true
              },
              "gw_name": {
                "type": "string",
                "description": "Name of the gateway which is going to be created.",
                "description_kind": "plain",
                "required": true
              },
              "gw_size": {
                "type": "string",
                "description": "Size of the gateway instance.",
                "description_kind": "plain",
                "required": true
              },
              "ha_availability_domain": {
                "type": "string",
                "description": "HA availability domain for OCI.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "ha_azure_eip_name_resource_group": {
                "type": "string",
                "description": "The name of the public IP address and its resource group in Azure to assign to the HA Transit Gateway.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "ha_bgp_lan_ip_list": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "List of available BGP LAN interface IPs for transit external device HA connection creation. Only supports GCP and Azure. Available as of provider version R2.21.0+.",
                "description_kind": "plain",
                "computed": true
              },
              "ha_cloud_instance_id": {
                "type": "string",
                "description": "Cloud instance ID of HA transit gateway.",
                "description_kind": "plain",
                "computed": true
              },
              "ha_eip": {
                "type": "string",
                "description": "Public IP address that you want assigned to the HA Transit Gateway.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "ha_fault_domain": {
                "type": "string",
                "description": "HA fault domain for OCI.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "ha_gw_name": {
                "type": "string",
                "description": "Aviatrix transit gateway unique name of HA transit gateway.",
                "description_kind": "plain",
                "computed": true
              },
              "ha_gw_size": {
                "type": "string",
                "description": "HA Gateway Size. Mandatory if HA is enabled (ha_subnet is set).",
                "description_kind": "plain",
                "optional": true
              },
              "ha_image_version": {
                "type": "string",
                "description": "ha_image_version can be used to set the desired image version of the HA gateway. If set, we will attempt to update the gateway to the specified version.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "ha_insane_mode_az": {
                "type": "string",
                "description": "AZ of subnet being created for Insane Mode Transit HA Gateway. Required for AWS if insane_mode is enabled and ha_subnet is set.",
                "description_kind": "plain",
                "optional": true
              },
              "ha_lan_interface_cidr": {
                "type": "string",
                "description": "Transit gateway lan interface cidr for the HA gateway.",
                "description_kind": "plain",
                "computed": true
              },
              "ha_oob_availability_zone": {
                "type": "string",
                "description": "OOB HA availability zone.",
                "description_kind": "plain",
                "optional": true
              },
              "ha_oob_management_subnet": {
                "type": "string",
                "description": "OOB HA management subnet.",
                "description_kind": "plain",
                "optional": true
              },
              "ha_private_ip": {
                "type": "string",
                "description": "Private IP address of HA transit gateway.",
                "description_kind": "plain",
                "computed": true
              },
              "ha_private_mode_subnet_zone": {
                "type": "string",
                "description": " Private Mode HA subnet availability zone.",
                "description_kind": "plain",
                "optional": true
              },
              "ha_public_ip": {
                "type": "string",
                "description": "Public IP address of the HA Transit Gateway.",
                "description_kind": "plain",
                "computed": true
              },
              "ha_security_group_id": {
                "type": "string",
                "description": "HA security group used for the transit gateway.",
                "description_kind": "plain",
                "computed": true
              },
              "ha_software_version": {
                "type": "string",
                "description": "ha_software_version can be used to set the desired software version of the HA gateway. If set, we will attempt to update the gateway to the specified version. If left blank, the gateway software version will continue to be managed through the aviatrix_controller_config resource.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "ha_subnet": {
                "type": "string",
                "description": "HA Subnet. Required for enabling HA for AWS/AWSGov/AWSChina/Azure/OCI/Alibaba Cloud. Optional for enabling HA for GCP gateway.",
                "description_kind": "plain",
                "optional": true
              },
              "ha_zone": {
                "type": "string",
                "description": "HA Zone. Required if enabling HA for GCP. Optional for Azure.",
                "description_kind": "plain",
                "optional": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "image_version": {
                "type": "string",
                "description": "image_version can be used to set the desired image version of the gateway. If set, we will attempt to update the gateway to the specified version.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "insane_mode": {
                "type": "bool",
                "description": "Enable Insane Mode for Transit. Valid values: true, false. Supported for AWS/AWSGov, GCP, Azure and OCI. If insane mode is enabled, gateway size has to at least be c5 size for AWS and Standard_D3_v2 size for Azure.",
                "description_kind": "plain",
                "optional": true
              },
              "insane_mode_az": {
                "type": "string",
                "description": "AZ of subnet being created for Insane Mode Transit Gateway. Required for AWS if insane_mode is enabled.",
                "description_kind": "plain",
                "optional": true
              },
              "lan_interface_cidr": {
                "type": "string",
                "description": "Transit gateway lan interface cidr.",
                "description_kind": "plain",
                "computed": true
              },
              "lan_private_subnet": {
                "type": "string",
                "description": "LAN Private Subnet. Only used for GCP Transit FireNet.",
                "description_kind": "plain",
                "optional": true
              },
              "lan_vpc_id": {
                "type": "string",
                "description": "LAN VPC ID. Only used for GCP Transit FireNet.",
                "description_kind": "plain",
                "optional": true
              },
              "learned_cidrs_approval_mode": {
                "type": "string",
                "description": "Set the learned CIDRs approval mode. Only valid when 'enable_learned_cidrs_approval' is set to true. If set to 'gateway', learned CIDR approval applies to ALL connections. If set to 'connection', learned CIDR approval is configured on a per connection basis. When configuring per connection, use the enable_learned_cidrs_approval attribute within the connection resource to toggle learned CIDR approval. Valid values: 'gateway' or 'connection'. Default value: 'gateway'.",
                "description_kind": "plain",
                "optional": true
              },
              "local_as_number": {
                "type": "string",
                "description": "Changes the Aviatrix Transit Gateway ASN number before you setup Aviatrix Transit Gateway connection configurations.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "monitor_exclude_list": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "A set of monitored instance ids. Only valid when 'enable_monitor_gateway_subnets' = true.",
                "description_kind": "plain",
                "optional": true
              },
              "oob_availability_zone": {
                "type": "string",
                "description": "OOB subnet availability zone.",
                "description_kind": "plain",
                "optional": true
              },
              "oob_management_subnet": {
                "type": "string",
                "description": "OOB management subnet.",
                "description_kind": "plain",
                "optional": true
              },
              "prepend_as_path": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "List of AS numbers to populate BGP AP_PATH field when it advertises to VGW or peer devices.",
                "description_kind": "plain",
                "optional": true
              },
              "private_ip": {
                "type": "string",
                "description": "Private IP address of the transit gateway created.",
                "description_kind": "plain",
                "computed": true
              },
              "private_mode_lb_vpc_id": {
                "type": "string",
                "description": "Private Mode Controller load balancer VPC ID. Required when private mode is enabled for the Controller.",
                "description_kind": "plain",
                "optional": true
              },
              "private_mode_subnet_zone": {
                "type": "string",
                "description": "Private Mode subnet availability zone.",
                "description_kind": "plain",
                "optional": true
              },
              "public_ip": {
                "type": "string",
                "description": "Public IP address of the Transit Gateway created.",
                "description_kind": "plain",
                "computed": true
              },
              "rx_queue_size": {
                "type": "string",
                "description": "Gateway ethernet interface RX queue size. Supported for AWS related clouds only. Applies on HA as well if enabled.",
                "description_kind": "plain",
                "optional": true
              },
              "security_group_id": {
                "type": "string",
                "description": "Security group used for the transit gateway.",
                "description_kind": "plain",
                "computed": true
              },
              "single_az_ha": {
                "type": "bool",
                "description": "Set to 'enabled' if this feature is desired.",
                "description_kind": "plain",
                "optional": true
              },
              "single_ip_snat": {
                "type": "bool",
                "description": "Enable or disable Source NAT feature in 'single_ip' mode for this container.",
                "description_kind": "plain",
                "optional": true
              },
              "software_version": {
                "type": "string",
                "description": "software_version can be used to set the desired software version of the gateway. If set, we will attempt to update the gateway to the specified version. If left blank, the gateway software version will continue to be managed through the aviatrix_controller_config resource.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "spot_price": {
                "type": "string",
                "description": "Price for spot instance. NOT supported for production deployment.",
                "description_kind": "plain",
                "optional": true
              },
              "subnet": {
                "type": "string",
                "description": "Public Subnet Name.",
                "description_kind": "plain",
                "required": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "description": "A map of tags to assign to the transit gateway.",
                "description_kind": "plain",
                "optional": true
              },
              "tunnel_detection_time": {
                "type": "number",
                "description": "The IPSec tunnel down detection time for the transit gateway.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "vpc_id": {
                "type": "string",
                "description": "VPC-ID/VNet-Name of cloud provider.",
                "description_kind": "plain",
                "required": true
              },
              "vpc_reg": {
                "type": "string",
                "description": "Region of cloud provider.",
                "description_kind": "plain",
                "required": true
              },
              "zone": {
                "type": "string",
                "description": "Availability Zone. Only available for Azure (8), Azure GOV (32) and Azure CHINA (2048). Must be in the form 'az-n', for example, 'az-2'.",
                "description_kind": "plain",
                "optional": true
              }
            },
            "block_types": {
              "bgp_lan_interfaces": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "subnet": {
                      "type": "string",
                      "description": "Subnet Info.",
                      "description_kind": "plain",
                      "required": true
                    },
                    "vpc_id": {
                      "type": "string",
                      "description": "VPC-ID of GCP cloud provider.",
                      "description_kind": "plain",
                      "required": true
                    }
                  },
                  "description": "Interfaces to run BGP protocol on top of the ethernet interface, to connect to the onprem/remote peer. Only available for GCP Transit.",
                  "description_kind": "plain"
                }
              },
              "ha_bgp_lan_interfaces": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "subnet": {
                      "type": "string",
                      "description": "Subnet Info.",
                      "description_kind": "plain",
                      "required": true
                    },
                    "vpc_id": {
                      "type": "string",
                      "description": "VPC-ID of GCP cloud provider.",
                      "description_kind": "plain",
                      "required": true
                    }
                  },
                  "description": "Interfaces to run BGP protocol on top of the ethernet interface, to connect to the onprem/remote peer. Only available for GCP HA Transit.",
                  "description_kind": "plain"
                }
              }
            },
            "description_kind": "plain"
          }
        },
        "aviatrix_transit_gateway_peering": {
          "version": 0,
          "block": {
            "attributes": {
              "enable_insane_mode_encryption_over_internet": {
                "type": "bool",
                "description": "(Optional) Advanced option. Enable Insane Mode Encryption over Internet. Transit gateways must be in Insane Mode. Currently, only inter-cloud connections between AWS and Azure are supported. Required with valid `tunnel_count`. Conflicts with `enable_peering_over_private_network` and `enable_single_tunnel_mode`. Type: Boolean. Default: false. Available as of provider version R2.19+.",
                "description_kind": "plain",
                "optional": true
              },
              "enable_max_performance": {
                "type": "bool",
                "description": "Indicates whether the maximum amount of HPE tunnels will be created. Only valid when the two transit gateways are each launched in Insane Mode and in the same cloud type. Available as of provider version R2.22.2+.",
                "description_kind": "plain",
                "optional": true
              },
              "enable_peering_over_private_network": {
                "type": "bool",
                "description": "(Optional) Advanced option. Enable peering over private network. Only appears and applies to when the two Multi-cloud Transit Gateways are each launched in Insane Mode and in a different cloud type. Conflicts with `enable_insane_mode_encryption_over_internet` and `tunnel_count`. Type: Boolean. Default: false. Available in provider version R2.17.1+",
                "description_kind": "plain",
                "optional": true
              },
              "enable_single_tunnel_mode": {
                "type": "bool",
                "description": "(Optional) Advanced option. Enable peering with Single-Tunnel mode. Only appears and applies to when the two Multi-cloud Transit Gateways are each launched in Insane Mode and in a different cloud type. Required with `enable_peering_over_private_network`. Conflicts with `enable_insane_mode_encryption_over_internet` and `tunnel_count`. Type: Boolean. Default: false. Available as of provider version R2.18+.",
                "description_kind": "plain",
                "optional": true
              },
              "gateway1_excluded_network_cidrs": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "List of excluded network CIDRs for the first transit gateway.",
                "description_kind": "plain",
                "optional": true
              },
              "gateway1_excluded_tgw_connections": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "List of excluded TGW connections for the first transit gateway.",
                "description_kind": "plain",
                "optional": true
              },
              "gateway2_excluded_network_cidrs": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "List of excluded network CIDRs for the second transit gateway.",
                "description_kind": "plain",
                "optional": true
              },
              "gateway2_excluded_tgw_connections": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "List of excluded TGW connections for the second transit gateway.",
                "description_kind": "plain",
                "optional": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "prepend_as_path1": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "AS Path Prepend customized by specifying AS PATH for a BGP connection. Applies on transit_gateway_name1.",
                "description_kind": "plain",
                "optional": true
              },
              "prepend_as_path2": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "AS Path Prepend customized by specifying AS PATH for a BGP connection. Applies on transit_gateway_name2.",
                "description_kind": "plain",
                "optional": true
              },
              "transit_gateway_name1": {
                "type": "string",
                "description": "The first transit gateway name to make a peer pair.",
                "description_kind": "plain",
                "required": true
              },
              "transit_gateway_name2": {
                "type": "string",
                "description": "The second transit gateway name to make a peer pair.",
                "description_kind": "plain",
                "required": true
              },
              "tunnel_count": {
                "type": "number",
                "description": "(Optional) Advanced option. Number of public tunnels. Required with `enable_insane_mode_encryption_over_internet`. Conflicts with `enable_peering_over_private_network` and `enable_single_tunnel_mode`. Type: Integer. Valid Range: 2-20. Available as of provider version R2.19+.",
                "description_kind": "plain",
                "optional": true
              }
            },
            "description_kind": "plain"
          }
        },
        "aviatrix_tunnel": {
          "version": 0,
          "block": {
            "attributes": {
              "enable_ha": {
                "type": "bool",
                "description": "Whether Peering HA is enabled. Valid inputs: true or false.",
                "description_kind": "plain",
                "optional": true
              },
              "gw_name1": {
                "type": "string",
                "description": "The first VPC Container name to make a peer pair.",
                "description_kind": "plain",
                "required": true
              },
              "gw_name2": {
                "type": "string",
                "description": "The second VPC Container name to make a peer pair.",
                "description_kind": "plain",
                "required": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "peering_hastatus": {
                "type": "string",
                "description": "Status of the HA tunnel.",
                "description_kind": "plain",
                "computed": true
              },
              "peering_link": {
                "type": "string",
                "description": "Name of the peering link.",
                "description_kind": "plain",
                "computed": true
              },
              "peering_state": {
                "type": "string",
                "description": "Status of the tunnel.",
                "description_kind": "plain",
                "computed": true
              }
            },
            "description_kind": "plain"
          }
        },
        "aviatrix_vgw_conn": {
          "version": 1,
          "block": {
            "attributes": {
              "bgp_local_as_num": {
                "type": "string",
                "description": "BGP local ASN (Autonomous System Number). Integer between 1-4294967294.",
                "description_kind": "plain",
                "required": true
              },
              "bgp_vgw_account": {
                "type": "string",
                "description": "Account of AWS's VGW that is used for this connection.",
                "description_kind": "plain",
                "required": true
              },
              "bgp_vgw_id": {
                "type": "string",
                "description": "Id of AWS's VGW that is used for this connection.",
                "description_kind": "plain",
                "required": true
              },
              "bgp_vgw_region": {
                "type": "string",
                "description": "Region of AWS's VGW that is used for this connection.",
                "description_kind": "plain",
                "required": true
              },
              "conn_name": {
                "type": "string",
                "description": "The name of the VGW connection which is going to be created.",
                "description_kind": "plain",
                "required": true
              },
              "enable_event_triggered_ha": {
                "type": "bool",
                "description": "Enable Event Triggered HA.",
                "description_kind": "plain",
                "optional": true
              },
              "enable_learned_cidrs_approval": {
                "type": "bool",
                "description": "Enable learned CIDR approval for the connection. Requires the transit_gateway's 'learned_cidrs_approval_mode' attribute be set to 'connection'. Valid values: true, false. Default value: false. Available as of provider version R2.18+.",
                "description_kind": "plain",
                "optional": true
              },
              "gw_name": {
                "type": "string",
                "description": "Name of the Transit Gateway.",
                "description_kind": "plain",
                "required": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "manual_bgp_advertised_cidrs": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "Configure manual BGP advertised CIDRs for this connection. Available as of provider version R2.18+.",
                "description_kind": "plain",
                "optional": true
              },
              "prepend_as_path": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "Connection AS Path Prepend customized by specifying AS PATH for a BGP connection.",
                "description_kind": "plain",
                "optional": true
              },
              "vpc_id": {
                "type": "string",
                "description": "VPC-ID where the Transit Gateway is located.",
                "description_kind": "plain",
                "required": true
              }
            },
            "description_kind": "plain"
          }
        },
        "aviatrix_vpc": {
          "version": 1,
          "block": {
            "attributes": {
              "account_name": {
                "type": "string",
                "description": "Account name. This account will be used to create an Aviatrix VPC.",
                "description_kind": "plain",
                "required": true
              },
              "availability_domains": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "List of OCI availability domains.",
                "description_kind": "plain",
                "computed": true
              },
              "aviatrix_firenet_vpc": {
                "type": "bool",
                "description": "Specify the VPC as Aviatrix FireNet VPC or not. Required to be false for GCP provider.",
                "description_kind": "plain",
                "optional": true
              },
              "aviatrix_transit_vpc": {
                "type": "bool",
                "description": "Specify the VPC as Aviatrix Transit VPC or not. Required to be false for GCP provider.",
                "description_kind": "plain",
                "optional": true
              },
              "azure_vnet_resource_id": {
                "type": "string",
                "description": "Azure vnet resource ID.",
                "description_kind": "plain",
                "computed": true
              },
              "cidr": {
                "type": "string",
                "description": "Subnet of the VPC to be created. Required to be empty for GCP provider, and non-empty for other providers.",
                "description_kind": "plain",
                "optional": true
              },
              "cloud_type": {
                "type": "number",
                "description": "Type of cloud service provider.",
                "description_kind": "plain",
                "required": true
              },
              "enable_native_gwlb": {
                "type": "bool",
                "description": "Enable Native AWS GWLB for FireNet Function. Only valid with cloud_type = 1 (AWS). Valid values: true or false. Default value: false. Available as of provider version R2.18+.",
                "description_kind": "plain",
                "optional": true
              },
              "enable_private_oob_subnet": {
                "type": "bool",
                "description": "Switch to enable private oob subnet. Only supported for AWS/AWSGov provider. Valid values: true, false. Default value: false.",
                "description_kind": "plain",
                "optional": true
              },
              "fault_domains": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "List of OCI fault domains.",
                "description_kind": "plain",
                "computed": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "description": "Name of the VPC to be created.",
                "description_kind": "plain",
                "required": true
              },
              "num_of_subnet_pairs": {
                "type": "number",
                "description": "Number of public subnet and private subnet pair to be created.",
                "description_kind": "plain",
                "optional": true
              },
              "private_mode_subnets": {
                "type": "bool",
                "description": "Switch to only launch private subnets. Only available when Private Mode is enabled on the Controller.",
                "description_kind": "plain",
                "optional": true
              },
              "private_subnets": {
                "type": [
                  "list",
                  [
                    "object",
                    {
                      "cidr": "string",
                      "name": "string",
                      "subnet_id": "string"
                    }
                  ]
                ],
                "description": "List of private subnet of the VPC to be created.",
                "description_kind": "plain",
                "computed": true
              },
              "public_subnets": {
                "type": [
                  "list",
                  [
                    "object",
                    {
                      "cidr": "string",
                      "name": "string",
                      "subnet_id": "string"
                    }
                  ]
                ],
                "description": "List of public subnet of the VPC to be created.",
                "description_kind": "plain",
                "computed": true
              },
              "region": {
                "type": "string",
                "description": "Region of cloud provider. Required to be empty for GCP provider, and non-empty for other providers.",
                "description_kind": "plain",
                "optional": true
              },
              "resource_group": {
                "type": "string",
                "description": "Resource group of the Azure VPC created.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "route_tables": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "List of route table ids associated with this VPC.",
                "description_kind": "plain",
                "computed": true
              },
              "subnet_size": {
                "type": "number",
                "description": "Subnet size.",
                "description_kind": "plain",
                "optional": true
              },
              "vpc_id": {
                "type": "string",
                "description": "ID of the VPC created.",
                "description_kind": "plain",
                "computed": true
              }
            },
            "block_types": {
              "subnets": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "cidr": {
                      "type": "string",
                      "description": "Subnet cidr.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "name": {
                      "type": "string",
                      "description": "Subnet name.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "region": {
                      "type": "string",
                      "description": "Subnet region.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "subnet_id": {
                      "type": "string",
                      "description": "Subnet ID.",
                      "description_kind": "plain",
                      "computed": true
                    }
                  },
                  "description": "List of subnet of the VPC to be created. Required to be non-empty for GCP provider, and empty for other providers.",
                  "description_kind": "plain"
                }
              }
            },
            "description_kind": "plain"
          }
        },
        "aviatrix_vpn_cert_download": {
          "version": 0,
          "block": {
            "attributes": {
              "download_enabled": {
                "type": "bool",
                "description": "Whether the VPN Certificate download is enabled. Supported Values: \"true\", \"false\"",
                "description_kind": "plain",
                "optional": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "saml_endpoints": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "List of SAML endpoint names for which the downloading should be enabled . Currently, only a single endpoint is supported. Example: [\"saml_endpoint_1\"].",
                "description_kind": "plain",
                "optional": true
              }
            },
            "description_kind": "plain"
          }
        },
        "aviatrix_vpn_profile": {
          "version": 1,
          "block": {
            "attributes": {
              "base_rule": {
                "type": "string",
                "description": "Base policy rule of the profile to be added. Enter 'allow_all' or 'deny_all'.",
                "description_kind": "plain",
                "optional": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "manage_user_attachment": {
                "type": "bool",
                "description_kind": "plain",
                "optional": true
              },
              "name": {
                "type": "string",
                "description": "name for the VPN profile.",
                "description_kind": "plain",
                "required": true
              },
              "users": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "List of VPN users to attach to this profile.",
                "description_kind": "plain",
                "optional": true
              }
            },
            "block_types": {
              "policy": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "action": {
                      "type": "string",
                      "description": "The opposite of the base rule for correct behaviour. 'allow' or 'deny'.",
                      "description_kind": "plain",
                      "required": true
                    },
                    "port": {
                      "type": "string",
                      "description": "Port to be allowed or denied.",
                      "description_kind": "plain",
                      "required": true
                    },
                    "proto": {
                      "type": "string",
                      "description": "Protocol to allow or deny.",
                      "description_kind": "plain",
                      "required": true
                    },
                    "target": {
                      "type": "string",
                      "description": "CIDR to be allowed or denied.",
                      "description_kind": "plain",
                      "required": true
                    }
                  },
                  "description": "New security policy for the profile.",
                  "description_kind": "plain"
                }
              }
            },
            "description_kind": "plain"
          }
        },
        "aviatrix_vpn_user": {
          "version": 1,
          "block": {
            "attributes": {
              "dns_name": {
                "type": "string",
                "description": "FQDN of a DNS based VPN service such as GeoVPN or UDP load balancer.",
                "description_kind": "plain",
                "optional": true
              },
              "gw_name": {
                "type": "string",
                "description": "If ELB is enabled, this will be the name of the ELB, else it will be the name of the Aviatrix VPN gateway.",
                "description_kind": "plain",
                "optional": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "manage_user_attachment": {
                "type": "bool",
                "description_kind": "plain",
                "optional": true
              },
              "profiles": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "List of profiles for user to attach to.",
                "description_kind": "plain",
                "optional": true
              },
              "saml_endpoint": {
                "type": "string",
                "description": "This is the name of the SAML endpoint to which the user will be associated.",
                "description_kind": "plain",
                "optional": true
              },
              "user_email": {
                "type": "string",
                "description": "VPN User's email.",
                "description_kind": "plain",
                "optional": true
              },
              "user_name": {
                "type": "string",
                "description": "VPN user name.",
                "description_kind": "plain",
                "required": true
              },
              "vpc_id": {
                "type": "string",
                "description": "VPC Id of Aviatrix VPN gateway.",
                "description_kind": "plain",
                "optional": true
              }
            },
            "description_kind": "plain"
          }
        },
        "aviatrix_vpn_user_accelerator": {
          "version": 0,
          "block": {
            "attributes": {
              "elb_name": {
                "type": "string",
                "description": "ELB to include into the VPN User Accelerator.",
                "description_kind": "plain",
                "required": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              }
            },
            "description_kind": "plain"
          }
        }
      },
      "data_source_schemas": {
        "aviatrix_account": {
          "version": 0,
          "block": {
            "attributes": {
              "account_name": {
                "type": "string",
                "description": "Account name. This can be used for logging in to CloudN console or UserConnect controller.",
                "description_kind": "plain",
                "required": true
              },
              "alicloud_account_id": {
                "type": "string",
                "description": "Alibaba Cloud Account ID to associate with Aviatrix account.",
                "description_kind": "plain",
                "computed": true
              },
              "arm_subscription_id": {
                "type": "string",
                "description": "Azure Subscription ID.",
                "description_kind": "plain",
                "computed": true
              },
              "aws_account_number": {
                "type": "string",
                "description": "AWS Account number to associate with Aviatrix account.",
                "description_kind": "plain",
                "computed": true
              },
              "aws_ca_cert_path": {
                "type": "string",
                "description": "AWS Top Secret Region or Secret Region Custom Certificate Authority file path on the controller.",
                "description_kind": "plain",
                "computed": true
              },
              "aws_gateway_role_app": {
                "type": "string",
                "description": "AWS App role ARN for gateways.",
                "description_kind": "plain",
                "computed": true
              },
              "aws_gateway_role_ec2": {
                "type": "string",
                "description": "AWS EC2 role ARN for gateways.",
                "description_kind": "plain",
                "computed": true
              },
              "aws_role_arn": {
                "type": "string",
                "description": "AWS App role ARN.",
                "description_kind": "plain",
                "computed": true
              },
              "aws_role_ec2": {
                "type": "string",
                "description": "AWS EC2 role ARN",
                "description_kind": "plain",
                "computed": true
              },
              "awschina_account_number": {
                "type": "string",
                "description": "AWS China Account number.",
                "description_kind": "plain",
                "computed": true
              },
              "awschina_iam": {
                "type": "bool",
                "description": "AWS China IAM-role based flag.",
                "description_kind": "plain",
                "computed": true
              },
              "awschina_role_app": {
                "type": "string",
                "description": "AWS China App role ARN.",
                "description_kind": "plain",
                "computed": true
              },
              "awschina_role_ec2": {
                "type": "string",
                "description": "AWS China EC2 role ARN.",
                "description_kind": "plain",
                "computed": true
              },
              "awsgov_account_number": {
                "type": "string",
                "description": "AWS Gov Account number to associate with Aviatrix account.",
                "description_kind": "plain",
                "computed": true
              },
              "awsgov_iam": {
                "type": "bool",
                "description": "AWSGov IAM role based flag.",
                "description_kind": "plain",
                "computed": true
              },
              "awsgov_role_app": {
                "type": "string",
                "description": "AWSGov App role ARN.",
                "description_kind": "plain",
                "computed": true
              },
              "awsgov_role_ec2": {
                "type": "string",
                "description": "AWSGov EC2 role ARN.",
                "description_kind": "plain",
                "computed": true
              },
              "awss_account_number": {
                "type": "string",
                "description": "AWS Secret Region Account Number.",
                "description_kind": "plain",
                "computed": true
              },
              "awss_cap_account_name": {
                "type": "string",
                "description": "AWS Secret Region CAP Account Name.",
                "description_kind": "plain",
                "computed": true
              },
              "awss_cap_agency": {
                "type": "string",
                "description": "AWS Secret Region CAP Agency.",
                "description_kind": "plain",
                "computed": true
              },
              "awss_cap_cert_key_path": {
                "type": "string",
                "description": "AWS Secret Region CAP Certificate Key file path on the controller.",
                "description_kind": "plain",
                "computed": true
              },
              "awss_cap_cert_path": {
                "type": "string",
                "description": "AWS Secret Region CAP Certificate file path on the controller.",
                "description_kind": "plain",
                "computed": true
              },
              "awss_cap_role_name": {
                "type": "string",
                "description": "AWS Secret Region CAP Role Name.",
                "description_kind": "plain",
                "computed": true
              },
              "awss_cap_url": {
                "type": "string",
                "description": "AWS Secret Region CAP Endpoint URL.",
                "description_kind": "plain",
                "computed": true
              },
              "awsts_account_number": {
                "type": "string",
                "description": "AWS Top Secret Region Account Number.",
                "description_kind": "plain",
                "computed": true
              },
              "awsts_cap_agency": {
                "type": "string",
                "description": "AWS Top Secret Region CAP Agency.",
                "description_kind": "plain",
                "computed": true
              },
              "awsts_cap_cert_key_path": {
                "type": "string",
                "description": "AWS Top Secret Region CAP Certificate Key file path on the controller.",
                "description_kind": "plain",
                "computed": true
              },
              "awsts_cap_cert_path": {
                "type": "string",
                "description": "AWS Top Secret Region CAP Certificate file path on the controller.",
                "description_kind": "plain",
                "computed": true
              },
              "awsts_cap_mission": {
                "type": "string",
                "description": "AWS Top Secret Region CAP Mission.",
                "description_kind": "plain",
                "computed": true
              },
              "awsts_cap_role_name": {
                "type": "string",
                "description": "AWS Top Secret Region CAP Role Name.",
                "description_kind": "plain",
                "computed": true
              },
              "awsts_cap_url": {
                "type": "string",
                "description": "AWS Top Secret Region CAP Endpoint URL.",
                "description_kind": "plain",
                "computed": true
              },
              "azurechina_subscription_id": {
                "type": "string",
                "description": "Azure China subscription ID.",
                "description_kind": "plain",
                "computed": true
              },
              "azuregov_subscription_id": {
                "type": "string",
                "description": "Azure Gov Subscription ID.",
                "description_kind": "plain",
                "computed": true
              },
              "cloud_type": {
                "type": "number",
                "description": "Type of cloud service provider.",
                "description_kind": "plain",
                "computed": true
              },
              "gcloud_project_id": {
                "type": "string",
                "description": "GCloud Project ID.",
                "description_kind": "plain",
                "computed": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              }
            },
            "description_kind": "plain"
          }
        },
        "aviatrix_caller_identity": {
          "version": 0,
          "block": {
            "attributes": {
              "cid": {
                "type": "string",
                "description": "Aviatrix caller identity.",
                "description_kind": "plain",
                "computed": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              }
            },
            "description_kind": "plain"
          }
        },
        "aviatrix_device_interfaces": {
          "version": 0,
          "block": {
            "attributes": {
              "device_name": {
                "type": "string",
                "description": "Name of device.",
                "description_kind": "plain",
                "required": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "wan_interfaces": {
                "type": [
                  "list",
                  [
                    "object",
                    {
                      "wan_primary_interface": "string",
                      "wan_primary_interface_public_ip": "string"
                    }
                  ]
                ],
                "description": "List of WAN primary interface and WAN primary interface public IP.",
                "description_kind": "plain",
                "computed": true
              }
            },
            "description_kind": "plain"
          }
        },
        "aviatrix_firenet": {
          "version": 1,
          "block": {
            "attributes": {
              "egress_enabled": {
                "type": "bool",
                "description": "Enable/Disable egress through firewall.",
                "description_kind": "plain",
                "computed": true
              },
              "egress_static_cidrs": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "List of egress static cidrs.",
                "description_kind": "plain",
                "computed": true
              },
              "hashing_algorithm": {
                "type": "string",
                "description": "Hashing algorithm to load balance traffic across the firewall.",
                "description_kind": "plain",
                "computed": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "inspection_enabled": {
                "type": "bool",
                "description": "Enable/Disable traffic inspection.",
                "description_kind": "plain",
                "computed": true
              },
              "keep_alive_via_lan_interface_enabled": {
                "type": "bool",
                "description": "Enable Keep Alive via Firewall LAN Interface.",
                "description_kind": "plain",
                "computed": true
              },
              "tgw_segmentation_for_egress_enabled": {
                "type": "bool",
                "description": "Enable TGW segmentation for egress.",
                "description_kind": "plain",
                "computed": true
              },
              "vpc_id": {
                "type": "string",
                "description": "VPC ID.",
                "description_kind": "plain",
                "required": true
              }
            },
            "description_kind": "plain"
          }
        },
        "aviatrix_firenet_firewall_manager": {
          "version": 0,
          "block": {
            "attributes": {
              "gateway_name": {
                "type": "string",
                "description": "The FireNet gateway name.",
                "description_kind": "plain",
                "required": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "number_of_retries": {
                "type": "number",
                "description": "Number of retries for 'save' or 'synchronize'.",
                "description_kind": "plain",
                "optional": true
              },
              "password": {
                "type": "string",
                "description": "Panorama login password for API calls.",
                "description_kind": "plain",
                "optional": true,
                "sensitive": true
              },
              "public_ip": {
                "type": "string",
                "description": "The public IP address of the Panorama instance.",
                "description_kind": "plain",
                "optional": true
              },
              "retry_interval": {
                "type": "number",
                "description": "Retry interval in seconds for `save` or `synchronize`.",
                "description_kind": "plain",
                "optional": true
              },
              "route_table": {
                "type": "string",
                "description": "The name of firewall virtual router to program. If left unspecified, the Controller programs the Panorama template’s first router.",
                "description_kind": "plain",
                "optional": true
              },
              "save": {
                "type": "bool",
                "description": "Switch to save or not.",
                "description_kind": "plain",
                "optional": true
              },
              "synchronize": {
                "type": "bool",
                "description": "Switch to sync or not.",
                "description_kind": "plain",
                "optional": true
              },
              "template": {
                "type": "string",
                "description": "Panorama template for each FireNet gateway.",
                "description_kind": "plain",
                "optional": true
              },
              "template_stack": {
                "type": "string",
                "description": "Panorama template stack for each FireNet gateway.",
                "description_kind": "plain",
                "optional": true
              },
              "username": {
                "type": "string",
                "description": "Panorama login name for API calls from the Controller.",
                "description_kind": "plain",
                "optional": true
              },
              "vendor_type": {
                "type": "string",
                "description": "Vendor type. Valid values: 'Generic' and 'Palo Alto Networks Panorama'.",
                "description_kind": "plain",
                "required": true
              },
              "vpc_id": {
                "type": "string",
                "description": "VPC ID.",
                "description_kind": "plain",
                "required": true
              }
            },
            "description_kind": "plain"
          }
        },
        "aviatrix_firenet_vendor_integration": {
          "version": 0,
          "block": {
            "attributes": {
              "api_token": {
                "type": "string",
                "description": "API token for Fortinet FortiGate.",
                "description_kind": "plain",
                "optional": true,
                "sensitive": true
              },
              "firewall_name": {
                "type": "string",
                "description": "Name of firewall instance.",
                "description_kind": "plain",
                "optional": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "instance_id": {
                "type": "string",
                "description": "ID of Firewall instance.",
                "description_kind": "plain",
                "required": true
              },
              "number_of_retries": {
                "type": "number",
                "description": "Number of retries for 'save' or 'synchronize'.",
                "description_kind": "plain",
                "optional": true
              },
              "password": {
                "type": "string",
                "description": "Firewall login password for API calls.",
                "description_kind": "plain",
                "optional": true,
                "sensitive": true
              },
              "private_key_file": {
                "type": "string",
                "description": "Private key file for Check Point Cloud Guard.",
                "description_kind": "plain",
                "optional": true,
                "sensitive": true
              },
              "public_ip": {
                "type": "string",
                "description": "The IP address of the firewall management interface for API calls from the Aviatrix Controller.",
                "description_kind": "plain",
                "optional": true
              },
              "retry_interval": {
                "type": "number",
                "description": "Retry interval in seconds for `save` or `synchronize`.",
                "description_kind": "plain",
                "optional": true
              },
              "route_table": {
                "type": "string",
                "description": "Specify the firewall virtual Router name you wish the Controller to program. If left unspecified, the Controller programs the firewall’s default router.",
                "description_kind": "plain",
                "optional": true
              },
              "save": {
                "type": "bool",
                "description": "Switch to save or not.",
                "description_kind": "plain",
                "optional": true
              },
              "synchronize": {
                "type": "bool",
                "description": "Switch to sync or not.",
                "description_kind": "plain",
                "optional": true
              },
              "username": {
                "type": "string",
                "description": "Firewall login name for API calls from the Controller. For example, admin-api, as shown in the screen shot.",
                "description_kind": "plain",
                "optional": true
              },
              "vendor_type": {
                "type": "string",
                "description": "Select PAN. Valid values: 'Generic', 'Palo Alto Networks VM-Series', 'Aviatrix FQDN Gateway', and 'Fortinet FortiGate'.",
                "description_kind": "plain",
                "required": true
              },
              "vpc_id": {
                "type": "string",
                "description": "VPC ID.",
                "description_kind": "plain",
                "required": true
              }
            },
            "description_kind": "plain"
          }
        },
        "aviatrix_firewall": {
          "version": 1,
          "block": {
            "attributes": {
              "base_log_enabled": {
                "type": "bool",
                "description": "Indicates whether logging is enabled or not.",
                "description_kind": "plain",
                "computed": true
              },
              "base_policy": {
                "type": "string",
                "description": "The firewall's base policy.",
                "description_kind": "plain",
                "computed": true
              },
              "gw_name": {
                "type": "string",
                "description": "Name of the gateway the firewall is associated with.",
                "description_kind": "plain",
                "required": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "policies": {
                "type": [
                  "list",
                  [
                    "object",
                    {
                      "action": "string",
                      "description": "string",
                      "dst_ip": "string",
                      "log_enabled": "bool",
                      "port": "string",
                      "protocol": "string",
                      "src_ip": "string"
                    }
                  ]
                ],
                "description": "List of policies associated with the firewall.",
                "description_kind": "plain",
                "computed": true
              }
            },
            "description_kind": "plain"
          }
        },
        "aviatrix_firewall_instance_images": {
          "version": 0,
          "block": {
            "attributes": {
              "firewall_images": {
                "type": [
                  "list",
                  [
                    "object",
                    {
                      "firewall_image": "string",
                      "firewall_image_version": [
                        "list",
                        "string"
                      ],
                      "firewall_size": [
                        "list",
                        "string"
                      ]
                    }
                  ]
                ],
                "description": "List of firewall instances associated with fireNet.",
                "description_kind": "plain",
                "computed": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "vpc_id": {
                "type": "string",
                "description": "VPC ID.",
                "description_kind": "plain",
                "required": true
              }
            },
            "description_kind": "plain"
          }
        },
        "aviatrix_gateway": {
          "version": 1,
          "block": {
            "attributes": {
              "account_name": {
                "type": "string",
                "description": "Account name. This account will be used to launch Aviatrix gateway.",
                "description_kind": "plain",
                "computed": true
              },
              "additional_cidrs": {
                "type": "string",
                "description": "A list of destination CIDR ranges that will also go through the VPN tunnel when Split Tunnel Mode is enabled.",
                "description_kind": "plain",
                "computed": true
              },
              "additional_cidrs_designated_gateway": {
                "type": "string",
                "description": "A list of CIDR ranges separated by comma to configure when 'designated_gateway' feature is enabled.",
                "description_kind": "plain",
                "computed": true
              },
              "allocate_new_eip": {
                "type": "bool",
                "description": "When value is false, reuse an idle address in Elastic IP pool for this gateway. Otherwise, allocate a new Elastic IP and use it for this gateway.",
                "description_kind": "plain",
                "computed": true
              },
              "availability_domain": {
                "type": "string",
                "description": "Availability domain for OCI.",
                "description_kind": "plain",
                "computed": true
              },
              "azure_eip_name_resource_group": {
                "type": "string",
                "description": "The name of the public IP address and its resource group in Azure to assign to this Gateway.",
                "description_kind": "plain",
                "computed": true
              },
              "cloud_instance_id": {
                "type": "string",
                "description": "Instance ID of the gateway.",
                "description_kind": "plain",
                "computed": true
              },
              "cloud_type": {
                "type": "number",
                "description": "Type of cloud service provider.",
                "description_kind": "plain",
                "computed": true
              },
              "duo_api_hostname": {
                "type": "string",
                "description": "API hostname for DUO auth mode.",
                "description_kind": "plain",
                "computed": true
              },
              "duo_integration_key": {
                "type": "string",
                "description": "Integration key for DUO auth mode.",
                "description_kind": "plain",
                "computed": true
              },
              "duo_push_mode": {
                "type": "string",
                "description": "Push mode for DUO auth.",
                "description_kind": "plain",
                "computed": true
              },
              "elb_dns_name": {
                "type": "string",
                "description": "ELB DNS Name.",
                "description_kind": "plain",
                "computed": true
              },
              "elb_name": {
                "type": "string",
                "description": "A name for the ELB that is created.",
                "description_kind": "plain",
                "computed": true
              },
              "enable_designated_gateway": {
                "type": "bool",
                "description": "Enable 'designated_gateway' feature for Gateway. Only supports AWS. Valid values: true, false.",
                "description_kind": "plain",
                "computed": true
              },
              "enable_elb": {
                "type": "bool",
                "description": "Specify whether to enable ELB or not.",
                "description_kind": "plain",
                "computed": true
              },
              "enable_encrypt_volume": {
                "type": "bool",
                "description": "Enable encrypt gateway EBS volume. Only supported for AWS provider. Valid values: true, false. Default value: false.",
                "description_kind": "plain",
                "computed": true
              },
              "enable_jumbo_frame": {
                "type": "bool",
                "description": "Enable jumbo frame support for Gateway.",
                "description_kind": "plain",
                "computed": true
              },
              "enable_ldap": {
                "type": "bool",
                "description": "Specify whether to enable LDAP or not. Supported values: 'yes' and 'no'.",
                "description_kind": "plain",
                "computed": true
              },
              "enable_monitor_gateway_subnets": {
                "type": "bool",
                "description": "Enable monitor gateway subnets.",
                "description_kind": "plain",
                "computed": true
              },
              "enable_public_subnet_filtering": {
                "type": "bool",
                "description": "Create a [Public Subnet Filtering gateway](https://docs.aviatrix.com/HowTos/public_subnet_filtering_faq.html).",
                "description_kind": "plain",
                "computed": true
              },
              "enable_spot_instance": {
                "type": "bool",
                "description": "Enable spot instance. NOT supported for production deployment.",
                "description_kind": "plain",
                "computed": true
              },
              "enable_vpc_dns_server": {
                "type": "bool",
                "description": "Enable vpc_dns_server for Gateway. Valid values: true, false.",
                "description_kind": "plain",
                "computed": true
              },
              "enable_vpn_nat": {
                "type": "bool",
                "description": "This field indicates whether to enable VPN NAT or not. Only supported for VPN gateway. Valid values: true, false. Default value: true.",
                "description_kind": "plain",
                "computed": true
              },
              "fault_domain": {
                "type": "string",
                "description": "Fault domain for OCI.",
                "description_kind": "plain",
                "computed": true
              },
              "fqdn_lan_cidr": {
                "type": "string",
                "description": "FQDN gateway lan interface cidr.",
                "description_kind": "plain",
                "computed": true
              },
              "fqdn_lan_interface": {
                "type": "string",
                "description": "FQDN gateway lan interface id.",
                "description_kind": "plain",
                "computed": true
              },
              "fqdn_lan_vpc_id": {
                "type": "string",
                "description": "LAN VPC ID. Only used for GCP FQDN Gateway.",
                "description_kind": "plain",
                "computed": true
              },
              "gw_name": {
                "type": "string",
                "description": "Gateway name. This can be used for getting gateway.",
                "description_kind": "plain",
                "required": true
              },
              "gw_size": {
                "type": "string",
                "description": "Size of Gateway Instance.",
                "description_kind": "plain",
                "computed": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "idle_timeout": {
                "type": "number",
                "description": "Typed value when modifying idle_timeout. If it's -1, this feature is disabled.",
                "description_kind": "plain",
                "computed": true
              },
              "image_version": {
                "type": "string",
                "description": "Image version of the gateway.",
                "description_kind": "plain",
                "computed": true
              },
              "insane_mode": {
                "type": "bool",
                "description": "Enable Insane Mode for Gateway. Valid values: true, false.",
                "description_kind": "plain",
                "computed": true
              },
              "insane_mode_az": {
                "type": "string",
                "description": "AZ of subnet being created for Insane Mode Gateway. Required if insane_mode is set.",
                "description_kind": "plain",
                "computed": true
              },
              "ldap_base_dn": {
                "type": "string",
                "description": "LDAP base DN. Required: Yes if enable_ldap is 'yes'.",
                "description_kind": "plain",
                "computed": true
              },
              "ldap_bind_dn": {
                "type": "string",
                "description": "LDAP bind DN. Required: Yes if enable_ldap is 'yes'.",
                "description_kind": "plain",
                "computed": true
              },
              "ldap_server": {
                "type": "string",
                "description": "LDAP server address. Required: Yes if enable_ldap is 'yes'.",
                "description_kind": "plain",
                "computed": true
              },
              "ldap_username_attribute": {
                "type": "string",
                "description": "LDAP user attribute. Required: Yes if enable_ldap is 'yes'.",
                "description_kind": "plain",
                "computed": true
              },
              "max_vpn_conn": {
                "type": "string",
                "description": "Maximum connection of VPN access.",
                "description_kind": "plain",
                "computed": true
              },
              "monitor_exclude_list": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "A set of monitored instance ids. Only set when 'enable_monitor_gateway_subnets' = true",
                "description_kind": "plain",
                "computed": true
              },
              "name_servers": {
                "type": "string",
                "description": "A list of DNS servers used to resolve domain names by a connected VPN user when Split Tunnel Mode is enabled.",
                "description_kind": "plain",
                "computed": true
              },
              "okta_url": {
                "type": "string",
                "description": "URL for Okta auth mode.",
                "description_kind": "plain",
                "computed": true
              },
              "okta_username_suffix": {
                "type": "string",
                "description": "Username suffix for Okta auth mode.",
                "description_kind": "plain",
                "computed": true
              },
              "otp_mode": {
                "type": "string",
                "description": "Two step authentication mode.",
                "description_kind": "plain",
                "computed": true
              },
              "peering_ha_availability_domain": {
                "type": "string",
                "description": "Peering HA availability domain for OCI.",
                "description_kind": "plain",
                "computed": true
              },
              "peering_ha_azure_eip_name_resource_group": {
                "type": "string",
                "description": "The name of the public IP address and its resource group in Azure to assign to the Peering HA Gateway.",
                "description_kind": "plain",
                "computed": true
              },
              "peering_ha_cloud_instance_id": {
                "type": "string",
                "description": "Instance ID of the peering HA gateway.",
                "description_kind": "plain",
                "computed": true
              },
              "peering_ha_fault_domain": {
                "type": "string",
                "description": "Peering HA fault domain for OCI.",
                "description_kind": "plain",
                "computed": true
              },
              "peering_ha_gw_name": {
                "type": "string",
                "description": "Aviatrix gateway unique name of HA gateway.",
                "description_kind": "plain",
                "computed": true
              },
              "peering_ha_gw_size": {
                "type": "string",
                "description": "Peering HA Gateway Size.",
                "description_kind": "plain",
                "computed": true
              },
              "peering_ha_image_version": {
                "type": "string",
                "description": "Image version of the HA gateway.",
                "description_kind": "plain",
                "computed": true
              },
              "peering_ha_insane_mode_az": {
                "type": "string",
                "description": "AZ of subnet being created for Insane Mode Peering HA Gateway. Required if insane_mode is set.",
                "description_kind": "plain",
                "computed": true
              },
              "peering_ha_private_ip": {
                "type": "string",
                "description": "Private IP address of HA gateway.",
                "description_kind": "plain",
                "computed": true
              },
              "peering_ha_public_ip": {
                "type": "string",
                "description": "Public IP address that you want assigned to the HA peering instance.",
                "description_kind": "plain",
                "computed": true
              },
              "peering_ha_security_group_id": {
                "type": "string",
                "description": "Peering HA security group used for the gateway.",
                "description_kind": "plain",
                "computed": true
              },
              "peering_ha_software_version": {
                "type": "string",
                "description": "Software version of the HA gateway.",
                "description_kind": "plain",
                "computed": true
              },
              "peering_ha_subnet": {
                "type": "string",
                "description": "Public Subnet Information while creating Peering HA Gateway, only subnet is accepted. Required to create peering ha gateway if cloud_type = 1 or 8 (AWS or Azure)",
                "description_kind": "plain",
                "computed": true
              },
              "peering_ha_zone": {
                "type": "string",
                "description": "Zone information for creating Peering HA Gateway. Required to create peering ha gateway if cloud_type = 4 (gcp)",
                "description_kind": "plain",
                "computed": true
              },
              "private_ip": {
                "type": "string",
                "description": "Private IP address of the Gateway created.",
                "description_kind": "plain",
                "computed": true
              },
              "public_dns_server": {
                "type": "string",
                "description": "NS server used by the gateway.",
                "description_kind": "plain",
                "computed": true
              },
              "public_ip": {
                "type": "string",
                "description": "Public IP address of the Gateway created.",
                "description_kind": "plain",
                "computed": true
              },
              "public_subnet_filtering_guard_duty_enforced": {
                "type": "bool",
                "description": "Whether to enforce Guard Duty IP blocking. Only set when `enable_public_subnet_filtering` attribute is true.",
                "description_kind": "plain",
                "computed": true
              },
              "public_subnet_filtering_ha_route_tables": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "Route tables whose associated public subnets are protected for the HA PSF gateway. Only set when enable_public_subnet_filtering and peering_ha_subnet are set.",
                "description_kind": "plain",
                "computed": true
              },
              "public_subnet_filtering_route_tables": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "Route tables whose associated public subnets are protected. Only set when `enable_public_subnet_filtering` attribute is true.",
                "description_kind": "plain",
                "computed": true
              },
              "renegotiation_interval": {
                "type": "number",
                "description": "Typed value when modifying renegotiation_interval. If it's -1, this feature is disabled.",
                "description_kind": "plain",
                "computed": true
              },
              "saml_enabled": {
                "type": "bool",
                "description": "This field indicates whether to enable SAML or not.",
                "description_kind": "plain",
                "computed": true
              },
              "search_domains": {
                "type": "string",
                "description": "A list of domain names that will use the NameServer when a specific name is not in the destination when Split Tunnel Mode is enabled.",
                "description_kind": "plain",
                "computed": true
              },
              "security_group_id": {
                "type": "string",
                "description": "Security group used for the gateway.",
                "description_kind": "plain",
                "computed": true
              },
              "single_az_ha": {
                "type": "bool",
                "description": "Set to true if this feature is desired.",
                "description_kind": "plain",
                "computed": true
              },
              "single_ip_snat": {
                "type": "bool",
                "description": "Enable Source NAT for this container.",
                "description_kind": "plain",
                "computed": true
              },
              "software_version": {
                "type": "string",
                "description": "Software version of the gateway.",
                "description_kind": "plain",
                "computed": true
              },
              "split_tunnel": {
                "type": "bool",
                "description": "Specify split tunnel mode.",
                "description_kind": "plain",
                "computed": true
              },
              "spot_price": {
                "type": "string",
                "description": "Price for spot instance. NOT supported for production deployment.",
                "description_kind": "plain",
                "computed": true
              },
              "subnet": {
                "type": "string",
                "description": "A VPC Network address range selected from one of the available network ranges.",
                "description_kind": "plain",
                "computed": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "description": "A map of tags assigned to the gateway.",
                "description_kind": "plain",
                "computed": true
              },
              "tunnel_detection_time": {
                "type": "number",
                "description": "The IPSec tunnel down detection time for the gateway.",
                "description_kind": "plain",
                "computed": true
              },
              "vpc_id": {
                "type": "string",
                "description": "ID of legacy VPC/Vnet to be connected.",
                "description_kind": "plain",
                "computed": true
              },
              "vpc_reg": {
                "type": "string",
                "description": "Region where gateway is launched.",
                "description_kind": "plain",
                "computed": true
              },
              "vpn_access": {
                "type": "bool",
                "description": "Enable user access through VPN to this container.",
                "description_kind": "plain",
                "computed": true
              },
              "vpn_cidr": {
                "type": "string",
                "description": "VPN CIDR block for the container.",
                "description_kind": "plain",
                "computed": true
              },
              "vpn_protocol": {
                "type": "string",
                "description": "Elb protocol for VPN gateway with elb enabled. Only supports AWS provider. Valid values: 'TCP', 'UDP'. If not specified, 'TCP'' will be used.",
                "description_kind": "plain",
                "computed": true
              },
              "zone": {
                "type": "string",
                "description": "Availability Zone. Only set for Azure and Public Subnet Filtering gateway",
                "description_kind": "plain",
                "computed": true
              }
            },
            "description_kind": "plain"
          }
        },
        "aviatrix_gateway_image": {
          "version": 0,
          "block": {
            "attributes": {
              "cloud_type": {
                "type": "number",
                "description": "Type of cloud service provider.",
                "description_kind": "plain",
                "required": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "image_version": {
                "type": "string",
                "description": "Compatible image version for the given software_version.",
                "description_kind": "plain",
                "computed": true
              },
              "software_version": {
                "type": "string",
                "description": "Software version.",
                "description_kind": "plain",
                "required": true
              }
            },
            "description_kind": "plain"
          }
        },
        "aviatrix_network_domains": {
          "version": 0,
          "block": {
            "attributes": {
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "network_domains": {
                "type": [
                  "list",
                  [
                    "object",
                    {
                      "account": "string",
                      "cloud_type": "string",
                      "egress_inspection": "bool",
                      "egress_inspection_name": "string",
                      "inspection_policy": "string",
                      "intra_domain_inspection": "bool",
                      "intra_domain_inspection_name": "string",
                      "name": "string",
                      "region": "string",
                      "route_table_id": "string",
                      "tgw_name": "string",
                      "type": "string"
                    }
                  ]
                ],
                "description": "List of Network Domains.",
                "description_kind": "plain",
                "computed": true
              }
            },
            "description_kind": "plain"
          }
        },
        "aviatrix_spoke_gateway": {
          "version": 2,
          "block": {
            "attributes": {
              "account_name": {
                "type": "string",
                "description": "This parameter represents the name of a Cloud-Account in Aviatrix controller.",
                "description_kind": "plain",
                "computed": true
              },
              "allocate_new_eip": {
                "type": "bool",
                "description": "If false, reuse an idle address in Elastic IP pool for this gateway. Otherwise, allocate a new Elastic IP and use it for this gateway.",
                "description_kind": "plain",
                "computed": true
              },
              "approved_learned_cidrs": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "Approved learned CIDRs for BGP Spoke Gateway. Available as of provider version R2.21+.",
                "description_kind": "plain",
                "computed": true
              },
              "availability_domain": {
                "type": "string",
                "description": "Availability domain for OCI.",
                "description_kind": "plain",
                "computed": true
              },
              "azure_eip_name_resource_group": {
                "type": "string",
                "description": "The name of the public IP address and its resource group in Azure to assign to this Spoke Gateway.",
                "description_kind": "plain",
                "computed": true
              },
              "bgp_ecmp": {
                "type": "bool",
                "description": "Enable Equal Cost Multi Path (ECMP) routing for the next hop for BGP Spoke Gateway.",
                "description_kind": "plain",
                "computed": true
              },
              "bgp_hold_time": {
                "type": "number",
                "description": "BGP Hold Time for BGP Spoke Gateway. Unit is in seconds.",
                "description_kind": "plain",
                "computed": true
              },
              "bgp_polling_time": {
                "type": "number",
                "description": "BGP route polling time for BGP Spoke Gateway. Unit is in seconds.",
                "description_kind": "plain",
                "computed": true
              },
              "cloud_instance_id": {
                "type": "string",
                "description": "Cloud instance ID.",
                "description_kind": "plain",
                "computed": true
              },
              "cloud_type": {
                "type": "number",
                "description": "Type of cloud service provider.",
                "description_kind": "plain",
                "computed": true
              },
              "customized_spoke_vpc_routes": {
                "type": "string",
                "description": "A list of comma separated CIDRs to be customized for the spoke VPC routes. When configured, it will replace all learned routes in VPC routing tables, including RFC1918 and non-RFC1918 CIDRs. It applies to this spoke gateway only.",
                "description_kind": "plain",
                "computed": true
              },
              "disable_route_propagation": {
                "type": "bool",
                "description": "Disables route propagation on BGP Spoke to attached Transit Gateway.",
                "description_kind": "plain",
                "computed": true
              },
              "eip": {
                "type": "string",
                "description": "The EIP address of the Spoke Gateway.",
                "description_kind": "plain",
                "computed": true
              },
              "enable_active_standby": {
                "type": "bool",
                "description": "Enables Active-Standby Mode, available only with HA enabled for BGP Spoke Gateway.",
                "description_kind": "plain",
                "computed": true
              },
              "enable_active_standby_preemptive": {
                "type": "bool",
                "description": "Enables Preemptive Mode for Active-Standby, available only with Active-Standby enabled.",
                "description_kind": "plain",
                "computed": true
              },
              "enable_auto_advertise_s2c_cidrs": {
                "type": "bool",
                "description": "Automatically advertise remote CIDR to Aviatrix Transit Gateway when route based Site2Cloud Tunnel is created.",
                "description_kind": "plain",
                "computed": true
              },
              "enable_bgp": {
                "type": "bool",
                "description": "Enable BGP.",
                "description_kind": "plain",
                "computed": true
              },
              "enable_encrypt_volume": {
                "type": "bool",
                "description": "Enable encrypt gateway EBS volume. Only supported for AWS provider. Valid values: true, false. Default value: false.",
                "description_kind": "plain",
                "computed": true
              },
              "enable_jumbo_frame": {
                "type": "bool",
                "description": "Enable jumbo frame support for spoke gateway.",
                "description_kind": "plain",
                "computed": true
              },
              "enable_learned_cidrs_approval": {
                "type": "bool",
                "description": "Switch to enable/disable encrypted transit approval for BGP Spoke Gateway.",
                "description_kind": "plain",
                "computed": true
              },
              "enable_monitor_gateway_subnets": {
                "type": "bool",
                "description": "Enable [monitor gateway subnets](https://docs.aviatrix.com/HowTos/gateway.html#monitor-gateway-subnet). Only valid for cloud_type = 1 (AWS) or 256 (AWSGov). Valid values: true, false. Default value: false.",
                "description_kind": "plain",
                "computed": true
              },
              "enable_private_oob": {
                "type": "bool",
                "description": "Enable private OOB.",
                "description_kind": "plain",
                "computed": true
              },
              "enable_private_vpc_default_route": {
                "type": "bool",
                "description": "Config Private VPC Default Route.",
                "description_kind": "plain",
                "computed": true
              },
              "enable_skip_public_route_table_update": {
                "type": "bool",
                "description": "Skip Public Route Table Update.",
                "description_kind": "plain",
                "computed": true
              },
              "enable_spot_instance": {
                "type": "bool",
                "description": "Enable spot instance. NOT supported for production deployment.",
                "description_kind": "plain",
                "computed": true
              },
              "enable_vpc_dns_server": {
                "type": "bool",
                "description": "Enable vpc_dns_server for Gateway. Valid values: true, false.",
                "description_kind": "plain",
                "computed": true
              },
              "fault_domain": {
                "type": "string",
                "description": "Fault domain for OCI.",
                "description_kind": "plain",
                "computed": true
              },
              "filtered_spoke_vpc_routes": {
                "type": "string",
                "description": "A list of comma separated CIDRs to be filtered from the spoke VPC route table. When configured, filtering CIDR(s) or it’s subnet will be deleted from VPC routing tables as well as from spoke gateway’s routing table. It applies to this spoke gateway only.",
                "description_kind": "plain",
                "computed": true
              },
              "gw_name": {
                "type": "string",
                "description": "Spoke gateway name. This can be used for getting spoke gateway.",
                "description_kind": "plain",
                "required": true
              },
              "gw_size": {
                "type": "string",
                "description": "Size of the gateway instance.",
                "description_kind": "plain",
                "computed": true
              },
              "ha_availability_domain": {
                "type": "string",
                "description": "HA availability domain for OCI.",
                "description_kind": "plain",
                "computed": true
              },
              "ha_azure_eip_name_resource_group": {
                "type": "string",
                "description": "The name of the public IP address and its resource group in Azure to assign to the HA Spoke Gateway.",
                "description_kind": "plain",
                "computed": true
              },
              "ha_cloud_instance_id": {
                "type": "string",
                "description": "Cloud instance ID of HA spoke gateway.",
                "description_kind": "plain",
                "computed": true
              },
              "ha_eip": {
                "type": "string",
                "description": "The EIP address of the HA Spoke Gateway.",
                "description_kind": "plain",
                "computed": true
              },
              "ha_fault_domain": {
                "type": "string",
                "description": "HA fault domain for OCI.",
                "description_kind": "plain",
                "computed": true
              },
              "ha_gw_name": {
                "type": "string",
                "description": "Aviatrix spoke gateway unique name of HA spoke gateway.",
                "description_kind": "plain",
                "computed": true
              },
              "ha_gw_size": {
                "type": "string",
                "description": "HA Gateway Size.",
                "description_kind": "plain",
                "computed": true
              },
              "ha_image_version": {
                "type": "string",
                "description": "Image version of the HA gateway.",
                "description_kind": "plain",
                "computed": true
              },
              "ha_insane_mode_az": {
                "type": "string",
                "description": "AZ of subnet being created for Insane Mode Spoke HA Gateway. Required if insane_mode is true and ha_subnet is set.",
                "description_kind": "plain",
                "computed": true
              },
              "ha_oob_availability_zone": {
                "type": "string",
                "description": "OOB HA availability zone.",
                "description_kind": "plain",
                "computed": true
              },
              "ha_oob_management_subnet": {
                "type": "string",
                "description": "OOB HA management subnet.",
                "description_kind": "plain",
                "computed": true
              },
              "ha_private_ip": {
                "type": "string",
                "description": "Private IP address of HA spoke gateway.",
                "description_kind": "plain",
                "computed": true
              },
              "ha_public_ip": {
                "type": "string",
                "description": "Public IP address that you want assigned to the HA Spoke Gateway.",
                "description_kind": "plain",
                "computed": true
              },
              "ha_security_group_id": {
                "type": "string",
                "description": "HA security group used for the spoke gateway.",
                "description_kind": "plain",
                "computed": true
              },
              "ha_software_version": {
                "type": "string",
                "description": "Software version of the HA gateway.",
                "description_kind": "plain",
                "computed": true
              },
              "ha_subnet": {
                "type": "string",
                "description": "HA Subnet. Required if enabling HA for AWS/Azure.",
                "description_kind": "plain",
                "computed": true
              },
              "ha_zone": {
                "type": "string",
                "description": "HA Zone. Required if enabling HA for GCP.",
                "description_kind": "plain",
                "computed": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "image_version": {
                "type": "string",
                "description": "Image version of the gateway.",
                "description_kind": "plain",
                "computed": true
              },
              "included_advertised_spoke_routes": {
                "type": "string",
                "description": "A list of comma separated CIDRs to be advertised to on-prem as 'Included CIDR List'. When configured, it will replace all advertised routes from this VPC.",
                "description_kind": "plain",
                "computed": true
              },
              "insane_mode": {
                "type": "bool",
                "description": "Enable Insane Mode for Spoke Gateway. Valid values: true, false. If insane mode is enabled, gateway size has to at least be c5 size.",
                "description_kind": "plain",
                "computed": true
              },
              "insane_mode_az": {
                "type": "string",
                "description": "AZ of subnet being created for Insane Mode Spoke Gateway. Required if insane_mode is enabled for aws cloud.",
                "description_kind": "plain",
                "computed": true
              },
              "learned_cidrs_approval_mode": {
                "type": "string",
                "description": "Set the learned CIDRs approval mode for BGP Spoke Gateway. Only valid when 'enable_learned_cidrs_approval' is set to true. Currently, only 'gateway' is supported: learned CIDR approval applies to ALL connections. Default value: 'gateway'.",
                "description_kind": "plain",
                "computed": true
              },
              "local_as_number": {
                "type": "string",
                "description": "Changes the Aviatrix BGP Spoke Gateway ASN number before you setup Aviatrix BGP Spoke Gateway connection configurations.",
                "description_kind": "plain",
                "computed": true
              },
              "monitor_exclude_list": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "A set of monitored instance ids. Only set when 'enable_monitor_gateway_subnets' = true.",
                "description_kind": "plain",
                "computed": true
              },
              "oob_availability_zone": {
                "type": "string",
                "description": "OOB subnet availability zone.",
                "description_kind": "plain",
                "computed": true
              },
              "oob_management_subnet": {
                "type": "string",
                "description": "OOB management subnet.",
                "description_kind": "plain",
                "computed": true
              },
              "prepend_as_path": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "List of AS numbers to populate BGP AP_PATH field when it advertises to VGW or peer devices. Only valid for BGP Spoke Gateway",
                "description_kind": "plain",
                "computed": true
              },
              "private_ip": {
                "type": "string",
                "description": "Private IP address of the spoke gateway created.",
                "description_kind": "plain",
                "computed": true
              },
              "public_ip": {
                "type": "string",
                "description": "Required when allocate_new_eip is false. It uses specified EIP for this gateway.",
                "description_kind": "plain",
                "computed": true
              },
              "security_group_id": {
                "type": "string",
                "description": "Security group used for the spoke gateway.",
                "description_kind": "plain",
                "computed": true
              },
              "single_az_ha": {
                "type": "bool",
                "description": "Set to 'enabled' if this feature is desired.",
                "description_kind": "plain",
                "computed": true
              },
              "single_ip_snat": {
                "type": "bool",
                "description": "Specify whether to enable Source NAT feature in 'single_ip' mode on the gateway or not.",
                "description_kind": "plain",
                "computed": true
              },
              "software_version": {
                "type": "string",
                "description": "Software version of the gateway.",
                "description_kind": "plain",
                "computed": true
              },
              "spoke_bgp_manual_advertise_cidrs": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "Intended CIDR list to be advertised to external BGP router.",
                "description_kind": "plain",
                "computed": true
              },
              "spot_price": {
                "type": "string",
                "description": "Price for spot instance. NOT supported for production deployment.",
                "description_kind": "plain",
                "computed": true
              },
              "subnet": {
                "type": "string",
                "description": "Public Subnet Info.",
                "description_kind": "plain",
                "computed": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "description": "A map of tags assigned to the spoke gateway.",
                "description_kind": "plain",
                "computed": true
              },
              "tunnel_detection_time": {
                "type": "number",
                "description": "The IPSec tunnel down detection time for the spoke gateway.",
                "description_kind": "plain",
                "computed": true
              },
              "vpc_id": {
                "type": "string",
                "description": "VPC-ID/VNet-Name of cloud provider.",
                "description_kind": "plain",
                "computed": true
              },
              "vpc_reg": {
                "type": "string",
                "description": "Region of cloud provider.",
                "description_kind": "plain",
                "computed": true
              },
              "zone": {
                "type": "string",
                "description": "Availability Zone. Only available for cloud_type = 8 (Azure). Must be in the form 'az-n', for example, 'az-2'.",
                "description_kind": "plain",
                "computed": true
              }
            },
            "description_kind": "plain"
          }
        },
        "aviatrix_spoke_gateway_inspection_subnets": {
          "version": 0,
          "block": {
            "attributes": {
              "gw_name": {
                "type": "string",
                "description": "Spoke gateway name.",
                "description_kind": "plain",
                "required": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "subnets_for_inspection": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "List of all subnets available for the subnet inspection feature.",
                "description_kind": "plain",
                "computed": true
              }
            },
            "description_kind": "plain"
          }
        },
        "aviatrix_spoke_gateways": {
          "version": 0,
          "block": {
            "attributes": {
              "gateway_list": {
                "type": [
                  "list",
                  [
                    "object",
                    {
                      "account_name": "string",
                      "allocate_new_eip": "bool",
                      "availability_domain": "string",
                      "azure_eip_name_resource_group": "string",
                      "bgp_ecmp": "bool",
                      "bgp_hold_time": "number",
                      "bgp_polling_time": "number",
                      "cloud_instance_id": "string",
                      "cloud_type": "number",
                      "customized_spoke_vpc_routes": "string",
                      "disable_route_propagation": "bool",
                      "eip": "string",
                      "enable_active_standby": "bool",
                      "enable_active_standby_preemptive": "bool",
                      "enable_auto_advertise_s2c_cidrs": "bool",
                      "enable_bgp": "bool",
                      "enable_encrypt_volume": "bool",
                      "enable_jumbo_frame": "bool",
                      "enable_learned_cidrs_approval": "bool",
                      "enable_monitor_gateway_subnets": "bool",
                      "enable_private_oob": "bool",
                      "enable_private_vpc_default_route": "bool",
                      "enable_skip_public_route_table_update": "bool",
                      "enable_spot_instance": "bool",
                      "enable_vpc_dns_server": "bool",
                      "fault_domain": "string",
                      "filtered_spoke_vpc_routes": "string",
                      "gw_name": "string",
                      "gw_size": "string",
                      "image_version": "string",
                      "included_advertised_spoke_routes": "string",
                      "insane_mode": "bool",
                      "insane_mode_az": "string",
                      "learned_cidrs_approval_mode": "string",
                      "local_as_number": "string",
                      "monitor_exclude_list": [
                        "set",
                        "string"
                      ],
                      "oob_availability_zone": "string",
                      "oob_management_subnet": "string",
                      "prepend_as_path": [
                        "list",
                        "string"
                      ],
                      "private_ip": "string",
                      "public_ip": "string",
                      "security_group_id": "string",
                      "single_az_ha": "bool",
                      "single_ip_snat": "bool",
                      "software_version": "string",
                      "spoke_bgp_manual_advertise_cidrs": [
                        "list",
                        "string"
                      ],
                      "spot_price": "string",
                      "subnet": "string",
                      "transit_gw": "string",
                      "tunnel_detection_time": "number",
                      "vpc_id": "string",
                      "vpc_reg": "string",
                      "zone": "string"
                    }
                  ]
                ],
                "description": "List of all Spoke Gateways.",
                "description_kind": "plain",
                "computed": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              }
            },
            "description_kind": "plain"
          }
        },
        "aviatrix_transit_gateway": {
          "version": 1,
          "block": {
            "attributes": {
              "account_name": {
                "type": "string",
                "description": "Name of a Cloud-Account in Aviatrix controller.",
                "description_kind": "plain",
                "computed": true
              },
              "allocate_new_eip": {
                "type": "bool",
                "description": "Whether the eip is newly allocated or not.",
                "description_kind": "plain",
                "computed": true
              },
              "approved_learned_cidrs": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "Approved learned CIDRs. Available as of provider version R2.21+.",
                "description_kind": "plain",
                "computed": true
              },
              "availability_domain": {
                "type": "string",
                "description": "Availability domain for OCI.",
                "description_kind": "plain",
                "computed": true
              },
              "azure_eip_name_resource_group": {
                "type": "string",
                "description": "The name of the public IP address and its resource group in Azure to assign to this Transit Gateway.",
                "description_kind": "plain",
                "computed": true
              },
              "bgp_ecmp": {
                "type": "bool",
                "description": "Enable Equal Cost Multi Path (ECMP) routing for the next hop.",
                "description_kind": "plain",
                "computed": true
              },
              "bgp_hold_time": {
                "type": "number",
                "description": "BGP Hold Time.",
                "description_kind": "plain",
                "computed": true
              },
              "bgp_lan_interfaces": {
                "type": [
                  "list",
                  [
                    "object",
                    {
                      "subnet": "string",
                      "vpc_id": "string"
                    }
                  ]
                ],
                "description": "Interfaces to run BGP protocol on top of the ethernet interface, to connect to the onprem/remote peer. Only available for GCP Transit.",
                "description_kind": "plain",
                "computed": true
              },
              "bgp_lan_ip_list": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "List of available BGP LAN interface IPs for transit external device connection creation. Only supports GCP and Azure. Available as of provider version R2.21.0+.",
                "description_kind": "plain",
                "computed": true
              },
              "bgp_manual_spoke_advertise_cidrs": {
                "type": "string",
                "description": "Intended CIDR list to advertise to VGW.",
                "description_kind": "plain",
                "computed": true
              },
              "bgp_polling_time": {
                "type": "string",
                "description": "BGP route polling time. Unit is in seconds.",
                "description_kind": "plain",
                "computed": true
              },
              "cloud_instance_id": {
                "type": "string",
                "description": "Instance ID of the transit gateway.",
                "description_kind": "plain",
                "computed": true
              },
              "cloud_type": {
                "type": "number",
                "description": "Type of cloud service provider.",
                "description_kind": "plain",
                "computed": true
              },
              "connected_transit": {
                "type": "bool",
                "description": "Connected Transit status.",
                "description_kind": "plain",
                "computed": true
              },
              "customized_spoke_vpc_routes": {
                "type": "string",
                "description": "A list of comma separated CIDRs to be customized for the spoke VPC routes. When configured, it will replace all learned routes in VPC routing tables, including RFC1918 and non-RFC1918 CIDRs. It applies to this spoke gateway only.",
                "description_kind": "plain",
                "computed": true
              },
              "customized_transit_vpc_routes": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "A list of CIDRs to be customized for the transit VPC routes. When configured, it will replace all learned routes in VPC routing tables, including RFC1918 and non-RFC1918 CIDRs.To be effective, `enable_advertise_transit_cidr` or firewall management access for a transit firenet gateway must be enabled.",
                "description_kind": "plain",
                "computed": true
              },
              "eip": {
                "type": "string",
                "description": "The EIP address of the Transit Gateway.",
                "description_kind": "plain",
                "computed": true
              },
              "enable_active_standby": {
                "type": "bool",
                "description": "Enables Active-Standby Mode, available only with HA enabled.",
                "description_kind": "plain",
                "computed": true
              },
              "enable_active_standby_preemptive": {
                "type": "bool",
                "description": "Enables Preemptive Mode for Active-Standby, available only with Active-Standby enabled.",
                "description_kind": "plain",
                "computed": true
              },
              "enable_advertise_transit_cidr": {
                "type": "bool",
                "description": "Enable/Disable advertise transit VPC network CIDR.",
                "description_kind": "plain",
                "computed": true
              },
              "enable_bgp_over_lan": {
                "type": "bool",
                "description": "Pre-allocate a network interface(eth4) for \"BGP over LAN\" functionality. Only valid for cloud_type = 4 (GCP) and 8 (Azure). Available as of provider version R2.18+",
                "description_kind": "plain",
                "computed": true
              },
              "enable_egress_transit_firenet": {
                "type": "bool",
                "description": "Specify whether to enable egress transit firenet interfaces or not.",
                "description_kind": "plain",
                "computed": true
              },
              "enable_encrypt_volume": {
                "type": "bool",
                "description": "Enable/Disable encrypt gateway EBS volume. Only supported for AWS provider.",
                "description_kind": "plain",
                "computed": true
              },
              "enable_firenet": {
                "type": "bool",
                "description": "Whether firenet interfaces is enabled.",
                "description_kind": "plain",
                "computed": true
              },
              "enable_gateway_load_balancer": {
                "type": "bool",
                "description": "Enable firenet interfaces with AWS Gateway Load Balancer. Only set when `enable_firenet` or `enable_transit_firenet` are set to true and `cloud_type` = 1 (AWS). Currently AWS Gateway Load Balancer is only supported in AWS regions us-west-2 and us-east-1.",
                "description_kind": "plain",
                "computed": true
              },
              "enable_hybrid_connection": {
                "type": "bool",
                "description": "Sign of readiness for TGW connection.",
                "description_kind": "plain",
                "computed": true
              },
              "enable_jumbo_frame": {
                "type": "bool",
                "description": "Enable jumbo frame support for transit gateway.",
                "description_kind": "plain",
                "computed": true
              },
              "enable_learned_cidrs_approval": {
                "type": "bool",
                "description": "Switch to enable/disable encrypted transit approval for transit gateway.",
                "description_kind": "plain",
                "computed": true
              },
              "enable_monitor_gateway_subnets": {
                "type": "bool",
                "description": "Enable [monitor gateway subnets](https://docs.aviatrix.com/HowTos/gateway.html#monitor-gateway-subnet). Only valid for cloud_type = 1 (AWS) or 256 (AWSGov).",
                "description_kind": "plain",
                "computed": true
              },
              "enable_multi_tier_transit": {
                "type": "bool",
                "description": "Enable Multi-tier Transit mode on transit gateway.",
                "description_kind": "plain",
                "computed": true
              },
              "enable_private_oob": {
                "type": "bool",
                "description": "Enable private OOB.",
                "description_kind": "plain",
                "computed": true
              },
              "enable_segmentation": {
                "type": "bool",
                "description": "Enable segmentation to allow association of transit gateway to security domains.",
                "description_kind": "plain",
                "computed": true
              },
              "enable_spot_instance": {
                "type": "bool",
                "description": "Enable spot instance. NOT supported for production deployment.",
                "description_kind": "plain",
                "computed": true
              },
              "enable_transit_firenet": {
                "type": "bool",
                "description": "Switch to enable/disable transit firenet interfaces for transit gateway.",
                "description_kind": "plain",
                "computed": true
              },
              "enable_transit_summarize_cidr_to_tgw": {
                "type": "bool",
                "description": "Enable summarize CIDR to TGW.",
                "description_kind": "plain",
                "computed": true
              },
              "enable_vpc_dns_server": {
                "type": "bool",
                "description": "Enable/Disable vpc_dns_server for Gateway. Valid values: true, false.",
                "description_kind": "plain",
                "computed": true
              },
              "excluded_advertised_spoke_routes": {
                "type": "string",
                "description": "A list of comma separated CIDRs to be advertised to on-prem as 'Excluded CIDR List'. When configured, it inspects all the advertised CIDRs from its spoke gateways and remove those included in the 'Excluded CIDR List'.",
                "description_kind": "plain",
                "computed": true
              },
              "fault_domain": {
                "type": "string",
                "description": "Fault domain for OCI.",
                "description_kind": "plain",
                "computed": true
              },
              "filtered_spoke_vpc_routes": {
                "type": "string",
                "description": "A list of comma separated CIDRs to be filtered from the spoke VPC route table. When configured, filtering CIDR(s) or it’s subnet will be deleted from VPC routing tables as well as from spoke gateway’s routing table. It applies to this spoke gateway only.",
                "description_kind": "plain",
                "computed": true
              },
              "gw_name": {
                "type": "string",
                "description": "Transit Gateway name. This can be used for getting gateway.",
                "description_kind": "plain",
                "required": true
              },
              "gw_size": {
                "type": "string",
                "description": "Instance type.",
                "description_kind": "plain",
                "computed": true
              },
              "ha_availability_domain": {
                "type": "string",
                "description": "HA availability domain for OCI.",
                "description_kind": "plain",
                "computed": true
              },
              "ha_azure_eip_name_resource_group": {
                "type": "string",
                "description": "The name of the public IP address and its resource group in Azure to assign to the HA Transit Gateway.",
                "description_kind": "plain",
                "computed": true
              },
              "ha_bgp_lan_interfaces": {
                "type": [
                  "list",
                  [
                    "object",
                    {
                      "subnet": "string",
                      "vpc_id": "string"
                    }
                  ]
                ],
                "description": "Interfaces to run BGP protocol on top of the ethernet interface, to connect to the onprem/remote peer. Only available for GCP HA Transit.",
                "description_kind": "plain",
                "computed": true
              },
              "ha_bgp_lan_ip_list": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "List of available BGP LAN interface IPs for transit external device HA connection creation. Only supports GCP and Azure. Available as of provider version R2.21.0+.",
                "description_kind": "plain",
                "computed": true
              },
              "ha_cloud_instance_id": {
                "type": "string",
                "description": "Cloud instance ID of HA transit gateway.",
                "description_kind": "plain",
                "computed": true
              },
              "ha_eip": {
                "type": "string",
                "description": "The EIP address of the HA Transit Gateway.",
                "description_kind": "plain",
                "computed": true
              },
              "ha_fault_domain": {
                "type": "string",
                "description": "HA fault domain for OCI.",
                "description_kind": "plain",
                "computed": true
              },
              "ha_gw_name": {
                "type": "string",
                "description": "Aviatrix transit gateway unique name of HA transit gateway.",
                "description_kind": "plain",
                "computed": true
              },
              "ha_gw_size": {
                "type": "string",
                "description": "HA Gateway Size. Mandatory if HA is enabled (ha_subnet is set).",
                "description_kind": "plain",
                "computed": true
              },
              "ha_image_version": {
                "type": "string",
                "description": "Image version of the HA gateway.",
                "description_kind": "plain",
                "computed": true
              },
              "ha_insane_mode_az": {
                "type": "string",
                "description": "AZ of subnet being created for Insane Mode Transit HA Gateway. Required if insane_mode is enabled and ha_subnet is set.",
                "description_kind": "plain",
                "computed": true
              },
              "ha_lan_interface_cidr": {
                "type": "string",
                "description": "Transit gateway lan interface cidr for the HA gateway.",
                "description_kind": "plain",
                "computed": true
              },
              "ha_oob_availability_zone": {
                "type": "string",
                "description": "OOB HA availability zone.",
                "description_kind": "plain",
                "computed": true
              },
              "ha_oob_management_subnet": {
                "type": "string",
                "description": "OOB HA management subnet.",
                "description_kind": "plain",
                "computed": true
              },
              "ha_private_ip": {
                "type": "string",
                "description": "Private IP address of HA transit gateway.",
                "description_kind": "plain",
                "computed": true
              },
              "ha_public_ip": {
                "type": "string",
                "description": "Public IP address that you want assigned to the HA Transit Gateway.",
                "description_kind": "plain",
                "computed": true
              },
              "ha_security_group_id": {
                "type": "string",
                "description": "HA security group used for the transit gateway.",
                "description_kind": "plain",
                "computed": true
              },
              "ha_software_version": {
                "type": "string",
                "description": "Software version of the HA gateway.",
                "description_kind": "plain",
                "computed": true
              },
              "ha_subnet": {
                "type": "string",
                "description": "HA Subnet. Required for enabling HA for AWS/Azure transit gateway.",
                "description_kind": "plain",
                "computed": true
              },
              "ha_zone": {
                "type": "string",
                "description": "HA Zone. Required if enabling HA for GCP.",
                "description_kind": "plain",
                "computed": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "image_version": {
                "type": "string",
                "description": "Image version of the gateway.",
                "description_kind": "plain",
                "computed": true
              },
              "insane_mode": {
                "type": "bool",
                "description": "Enable/Disable Insane Mode for Spoke Gateway.",
                "description_kind": "plain",
                "computed": true
              },
              "insane_mode_az": {
                "type": "string",
                "description": "AZ of subnet being created for Insane Mode Spoke Gateway. Required if insane_mode is enabled for aws cloud.",
                "description_kind": "plain",
                "computed": true
              },
              "lan_interface_cidr": {
                "type": "string",
                "description": "Transit gateway lan interface cidr.",
                "description_kind": "plain",
                "computed": true
              },
              "lan_private_subnet": {
                "type": "string",
                "description": "LAN Private Subnet. Only used for GCP Transit FireNet.",
                "description_kind": "plain",
                "computed": true
              },
              "lan_vpc_id": {
                "type": "string",
                "description": "LAN VPC ID. Only used for GCP Transit FireNet.",
                "description_kind": "plain",
                "computed": true
              },
              "learned_cidrs_approval_mode": {
                "type": "string",
                "description": "Set the learned CIDRs approval mode. Only set when 'enable_learned_cidrs_approval' is set to true. If set to 'gateway', learned CIDR approval applies to ALL connections. If set to 'connection', learned CIDR approval is configured on a per connection basis. When configuring per connection, use the enable_learned_cidrs_approval attribute within the connection resource to toggle learned CIDR approval.",
                "description_kind": "plain",
                "computed": true
              },
              "local_as_number": {
                "type": "string",
                "description": "Changes the Aviatrix Transit Gateway ASN number before you setup Aviatrix Transit Gateway connection configurations.",
                "description_kind": "plain",
                "computed": true
              },
              "monitor_exclude_list": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "A set of monitored instance ids. Only valid when 'enable_monitor_gateway_subnets' = true.",
                "description_kind": "plain",
                "computed": true
              },
              "oob_availability_zone": {
                "type": "string",
                "description": "OOB subnet availability zone.",
                "description_kind": "plain",
                "computed": true
              },
              "oob_management_subnet": {
                "type": "string",
                "description": "OOB management subnet.",
                "description_kind": "plain",
                "computed": true
              },
              "prepend_as_path": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "List of AS numbers to populate BGP AP_PATH field when it advertises to VGW or peer devices.",
                "description_kind": "plain",
                "computed": true
              },
              "private_ip": {
                "type": "string",
                "description": "Private IP address of the transit gateway created.",
                "description_kind": "plain",
                "computed": true
              },
              "public_ip": {
                "type": "string",
                "description": "Public IP address of the Transit Gateway created.",
                "description_kind": "plain",
                "computed": true
              },
              "security_group_id": {
                "type": "string",
                "description": "Security group used for the transit gateway.",
                "description_kind": "plain",
                "computed": true
              },
              "single_az_ha": {
                "type": "bool",
                "description": "Enable/Disable this feature.",
                "description_kind": "plain",
                "computed": true
              },
              "single_ip_snat": {
                "type": "bool",
                "description": "Enable or disable Source NAT feature in 'single_ip' mode for this container.",
                "description_kind": "plain",
                "computed": true
              },
              "software_version": {
                "type": "string",
                "description": "Software version of the gateway.",
                "description_kind": "plain",
                "computed": true
              },
              "spot_price": {
                "type": "string",
                "description": "Price for spot instance. NOT supported for production deployment.",
                "description_kind": "plain",
                "computed": true
              },
              "subnet": {
                "type": "string",
                "description": "Range of the subnet where the transit gateway is launched.",
                "description_kind": "plain",
                "computed": true
              },
              "tags": {
                "type": [
                  "map",
                  "string"
                ],
                "description": "A map of tags assigned to the transit gateway.",
                "description_kind": "plain",
                "computed": true
              },
              "tunnel_detection_time": {
                "type": "number",
                "description": "The IPSec tunnel down detection time for the transit gateway.",
                "description_kind": "plain",
                "computed": true
              },
              "vpc_id": {
                "type": "string",
                "description": "VPC ID.",
                "description_kind": "plain",
                "computed": true
              },
              "vpc_reg": {
                "type": "string",
                "description": "Region of cloud provider.",
                "description_kind": "plain",
                "computed": true
              },
              "zone": {
                "type": "string",
                "description": "Availability Zone. Only available for cloud_type = 8 (Azure). Must be in the form 'az-n', for example, 'az-2'.",
                "description_kind": "plain",
                "computed": true
              }
            },
            "description_kind": "plain"
          }
        },
        "aviatrix_transit_gateways": {
          "version": 0,
          "block": {
            "attributes": {
              "gateway_list": {
                "type": [
                  "list",
                  [
                    "object",
                    {
                      "account_name": "string",
                      "allocate_new_eip": "bool",
                      "availability_domain": "string",
                      "azure_eip_name_resource_group": "string",
                      "bgp_ecmp": "bool",
                      "bgp_hold_time": "number",
                      "bgp_lan_interfaces": [
                        "list",
                        [
                          "object",
                          {
                            "subnet": "string",
                            "vpc_id": "string"
                          }
                        ]
                      ],
                      "bgp_lan_ip_list": [
                        "list",
                        "string"
                      ],
                      "bgp_polling_time": "string",
                      "cloud_instance_id": "string",
                      "cloud_type": "number",
                      "connected_transit": "bool",
                      "customized_spoke_vpc_routes": "string",
                      "enable_active_standby": "bool",
                      "enable_active_standby_preemptive": "bool",
                      "enable_bgp_over_lan": "bool",
                      "enable_encrypt_volume": "bool",
                      "enable_gateway_load_balancer": "bool",
                      "enable_hybrid_connection": "bool",
                      "enable_jumbo_frame": "bool",
                      "enable_monitor_gateway_subnets": "bool",
                      "enable_multi_tier_transit": "bool",
                      "enable_private_oob": "bool",
                      "enable_segmentation": "bool",
                      "enable_spot_instance": "bool",
                      "enable_transit_summarize_cidr_to_tgw": "bool",
                      "enable_vpc_dns_server": "bool",
                      "excluded_advertised_spoke_routes": "string",
                      "fault_domain": "string",
                      "filtered_spoke_vpc_routes": "string",
                      "gw_name": "string",
                      "gw_size": "string",
                      "ha_bgp_lan_interfaces": [
                        "list",
                        [
                          "object",
                          {
                            "subnet": "string",
                            "vpc_id": "string"
                          }
                        ]
                      ],
                      "ha_bgp_lan_ip_list": [
                        "list",
                        "string"
                      ],
                      "image_version": "string",
                      "insane_mode": "bool",
                      "insane_mode_az": "string",
                      "lan_private_subnet": "string",
                      "lan_vpc_id": "string",
                      "learned_cidrs_approval_mode": "string",
                      "local_as_number": "string",
                      "monitor_exclude_list": [
                        "set",
                        "string"
                      ],
                      "oob_availability_zone": "string",
                      "oob_management_subnet": "string",
                      "prepend_as_path": [
                        "list",
                        "string"
                      ],
                      "private_ip": "string",
                      "public_ip": "string",
                      "security_group_id": "string",
                      "single_az_ha": "bool",
                      "single_ip_snat": "bool",
                      "software_version": "string",
                      "spot_price": "string",
                      "subnet": "string",
                      "tunnel_detection_time": "number",
                      "vpc_id": "string",
                      "vpc_reg": "string",
                      "zone": "string"
                    }
                  ]
                ],
                "description": "List of all Transit Gateways.",
                "description_kind": "plain",
                "computed": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              }
            },
            "description_kind": "plain"
          }
        },
        "aviatrix_vpc": {
          "version": 1,
          "block": {
            "attributes": {
              "account_name": {
                "type": "string",
                "description": "Account name of the VPC created.",
                "description_kind": "plain",
                "computed": true
              },
              "availability_domains": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "List of OCI availability domains.",
                "description_kind": "plain",
                "computed": true
              },
              "aviatrix_firenet_vpc": {
                "type": "bool",
                "description": "Switch if the VPC created is an Aviatrix FireNet VPC or not.",
                "description_kind": "plain",
                "computed": true
              },
              "aviatrix_transit_vpc": {
                "type": "bool",
                "description": "Switch if the VPC created is an Aviatrix Transit VPC or not.",
                "description_kind": "plain",
                "computed": true
              },
              "azure_vnet_resource_id": {
                "type": "string",
                "description": "Azure vnet resource ID.",
                "description_kind": "plain",
                "computed": true
              },
              "cidr": {
                "type": "string",
                "description": "Subnet of the VPC created.",
                "description_kind": "plain",
                "computed": true
              },
              "cloud_type": {
                "type": "number",
                "description": "Type of cloud service provider.",
                "description_kind": "plain",
                "computed": true
              },
              "fault_domains": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "List of OCI fault domains.",
                "description_kind": "plain",
                "computed": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "description": "Name of the VPC created.",
                "description_kind": "plain",
                "required": true
              },
              "num_of_subnet_pairs": {
                "type": "number",
                "description": "Number of public subnet and private subnet pair created.",
                "description_kind": "plain",
                "computed": true
              },
              "private_subnets": {
                "type": [
                  "list",
                  [
                    "object",
                    {
                      "cidr": "string",
                      "name": "string",
                      "subnet_id": "string"
                    }
                  ]
                ],
                "description": "List of private subnet of the VPC to be created.",
                "description_kind": "plain",
                "computed": true
              },
              "public_subnets": {
                "type": [
                  "list",
                  [
                    "object",
                    {
                      "cidr": "string",
                      "name": "string",
                      "subnet_id": "string"
                    }
                  ]
                ],
                "description": "List of public subnet of the VPC to be created.",
                "description_kind": "plain",
                "computed": true
              },
              "region": {
                "type": "string",
                "description": "Region of the VPC created.",
                "description_kind": "plain",
                "computed": true
              },
              "resource_group": {
                "type": "string",
                "description": "Resource group of the Azure VPC created.",
                "description_kind": "plain",
                "computed": true
              },
              "route_tables": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "List of AWS route table ids associated with this VPC. Only populated for AWS, AWSGov and Azure vpc.",
                "description_kind": "plain",
                "computed": true
              },
              "route_tables_filter": {
                "type": "string",
                "description": "Filters the route_tables list to contain only public or private route tables. Valid values are 'private' or 'public'. If not set then route_tables are not filtered.",
                "description_kind": "plain",
                "optional": true
              },
              "subnet_size": {
                "type": "number",
                "description": "Subnet size.",
                "description_kind": "plain",
                "computed": true
              },
              "subnets": {
                "type": [
                  "list",
                  [
                    "object",
                    {
                      "cidr": "string",
                      "name": "string",
                      "subnet_id": "string"
                    }
                  ]
                ],
                "description": "List of subnet of the VPC to be created.",
                "description_kind": "plain",
                "computed": true
              },
              "vpc_id": {
                "type": "string",
                "description": "ID of the VPC created.",
                "description_kind": "plain",
                "computed": true
              }
            },
            "description_kind": "plain"
          }
        },
        "aviatrix_vpc_tracker": {
          "version": 0,
          "block": {
            "attributes": {
              "account_name": {
                "type": "string",
                "description": "Get VPCs that match the given access account name.",
                "description_kind": "plain",
                "optional": true
              },
              "cidr": {
                "type": "string",
                "description": "Get VPCs that match the given CIDR.",
                "description_kind": "plain",
                "optional": true
              },
              "cloud_type": {
                "type": "number",
                "description": "Get VPCs from a single cloud provider. For example, if cloud_type = 4, only GCP VPCs will be returned.",
                "description_kind": "plain",
                "optional": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "region": {
                "type": "string",
                "description": "Get VPCs that match the given region.",
                "description_kind": "plain",
                "optional": true
              },
              "vpc_list": {
                "type": [
                  "list",
                  [
                    "object",
                    {
                      "account_name": "string",
                      "cidr": "string",
                      "cloud_type": "number",
                      "instance_count": "number",
                      "name": "string",
                      "region": "string",
                      "subnets": [
                        "list",
                        [
                          "object",
                          {
                            "cidr": "string",
                            "gw_ip": "string",
                            "name": "string",
                            "region": "string"
                          }
                        ]
                      ],
                      "vpc_id": "string"
                    }
                  ]
                ],
                "description": "List of VPCs",
                "description_kind": "plain",
                "computed": true
              }
            },
            "description_kind": "plain"
          }
        }
      }
    }
  }
}
