{
  "format_version": "1.0",
  "provider_schemas": {
    "registry.terraform.io/jfrog/project": {
      "provider": {
        "version": 0,
        "block": {
          "attributes": {
            "access_token": {
              "type": "string",
              "description": "This is a Bearer token that can be given to you by your admin under `Identity and Access`. This can also be sourced from the `PROJECT_ACCESS_TOKEN` or `JFROG_ACCESS_TOKEN` environment variable. Defauult to empty string if not set.",
              "description_kind": "plain",
              "optional": true,
              "sensitive": true
            },
            "check_license": {
              "type": "bool",
              "description": "Toggle for pre-flight checking of Artifactory Enterprise license. Default to `true`.",
              "description_kind": "plain",
              "optional": true
            },
            "url": {
              "type": "string",
              "description": "URL of Artifactory. This can also be sourced from the `PROJECT_URL` or `JFROG_URL` environment variable. Default to 'http://localhost:8081' if not set.",
              "description_kind": "plain",
              "optional": true
            }
          },
          "description_kind": "plain"
        }
      },
      "resource_schemas": {
        "project": {
          "version": 2,
          "block": {
            "attributes": {
              "block_deployments_on_limit": {
                "type": "bool",
                "description": "Block deployment of artifacts if storage quota is exceeded.\n\n~>This setting only applies to self-hosted environment. See [Manage Storage Quotas](https://jfrog.com/help/r/jfrog-platform-administration-documentation/manage-storage-quotas).",
                "description_kind": "plain",
                "optional": true
              },
              "description": {
                "type": "string",
                "description_kind": "plain",
                "optional": true
              },
              "display_name": {
                "type": "string",
                "description": "Also known as project name on the UI",
                "description_kind": "plain",
                "required": true
              },
              "email_notification": {
                "type": "bool",
                "description": "Alerts will be sent when reaching 75% and 95% of the storage quota. This serves as a notification only and is not a blocker",
                "description_kind": "plain",
                "optional": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "key": {
                "type": "string",
                "description": "The Project Key is added as a prefix to resources created within a Project. This field is mandatory and supports only 2 - 20 lowercase alphanumeric and hyphen characters. Must begin with a letter. For example: `us1a-test`.",
                "description_kind": "plain",
                "required": true
              },
              "max_storage_in_gibibytes": {
                "type": "number",
                "description": "Storage quota in GiB. Must be 1 or larger. Set to -1 for unlimited storage. This is translated to binary bytes for Artifactory API. So for a 1TB quota, this should be set to 1024 (vs 1000) which will translate to 1099511627776 bytes for the API.",
                "description_kind": "plain",
                "optional": true
              },
              "repos": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "(Optional) List of existing repo keys to be assigned to the project. **Note** We *strongly* recommend using this attribute to manage the list of repositories. If you wish to use the alternate method of setting `project_key` attribute in each `artifactory_*_repository` resource in the `artifactory` provider, you will need to use `lifecycle.ignore_changes` in the `project` resource to avoid state drift.\n\n```hcl\nlifecycle {\n\tignore_changes = [\n\t\trepos\n\t]\n}\n```",
                "description_kind": "plain",
                "optional": true
              },
              "use_project_role_resource": {
                "type": "bool",
                "description": "When set to true, this resource will ignore the `roles` attributes and allow roles to be managed by `project_role` resource instead. Default to false.",
                "description_kind": "plain",
                "optional": true
              }
            },
            "block_types": {
              "admin_privileges": {
                "nesting_mode": "set",
                "block": {
                  "attributes": {
                    "index_resources": {
                      "type": "bool",
                      "description": "Enables a project admin to define the resources to be indexed by Xray",
                      "description_kind": "plain",
                      "required": true
                    },
                    "manage_members": {
                      "type": "bool",
                      "description": "Allows the Project Admin to manage Platform users/groups as project members with different roles.",
                      "description_kind": "plain",
                      "required": true
                    },
                    "manage_resources": {
                      "type": "bool",
                      "description": "Allows the Project Admin to manage resources - repositories, builds and Pipelines resources on the project level.",
                      "description_kind": "plain",
                      "required": true
                    }
                  },
                  "description_kind": "plain"
                },
                "min_items": 1
              },
              "group": {
                "nesting_mode": "set",
                "block": {
                  "attributes": {
                    "name": {
                      "type": "string",
                      "description": "Must be existing Artifactory group",
                      "description_kind": "plain",
                      "required": true
                    },
                    "roles": {
                      "type": [
                        "set",
                        "string"
                      ],
                      "description": "List of pre-defined Project or custom roles",
                      "description_kind": "plain",
                      "required": true
                    }
                  },
                  "description": "Project group. Element has one to one mapping with the [JFrog Project Groups API](https://www.jfrog.com/confluence/display/JFROG/Artifactory+REST+API#ArtifactoryRESTAPI-UpdateGroupinProject)",
                  "description_kind": "plain"
                }
              },
              "member": {
                "nesting_mode": "set",
                "block": {
                  "attributes": {
                    "name": {
                      "type": "string",
                      "description": "Must be existing Artifactory user",
                      "description_kind": "plain",
                      "required": true
                    },
                    "roles": {
                      "type": [
                        "set",
                        "string"
                      ],
                      "description": "List of pre-defined Project or custom roles",
                      "description_kind": "plain",
                      "required": true
                    }
                  },
                  "description": "Member of the project. Element has one to one mapping with the [JFrog Project Users API](https://www.jfrog.com/confluence/display/JFROG/Artifactory+REST+API#ArtifactoryRESTAPI-UpdateUserinProject).",
                  "description_kind": "plain"
                }
              },
              "role": {
                "nesting_mode": "set",
                "block": {
                  "attributes": {
                    "actions": {
                      "type": [
                        "set",
                        "string"
                      ],
                      "description": "List of pre-defined actions (READ_REPOSITORY, ANNOTATE_REPOSITORY, DEPLOY_CACHE_REPOSITORY, DELETE_OVERWRITE_REPOSITORY, MANAGE_XRAY_MD_REPOSITORY, READ_RELEASE_BUNDLE, ANNOTATE_RELEASE_BUNDLE, CREATE_RELEASE_BUNDLE, DISTRIBUTE_RELEASE_BUNDLE, DELETE_RELEASE_BUNDLE, MANAGE_XRAY_MD_RELEASE_BUNDLE, READ_BUILD, ANNOTATE_BUILD, DEPLOY_BUILD, DELETE_BUILD, MANAGE_XRAY_MD_BUILD, READ_SOURCES_PIPELINE, TRIGGER_PIPELINE, READ_INTEGRATIONS_PIPELINE, READ_POOLS_PIPELINE, MANAGE_INTEGRATIONS_PIPELINE, MANAGE_SOURCES_PIPELINE, MANAGE_POOLS_PIPELINE, TRIGGER_SECURITY, ISSUES_SECURITY, LICENCES_SECURITY, REPORTS_SECURITY, WATCHES_SECURITY, POLICIES_SECURITY, RULES_SECURITY, MANAGE_MEMBERS, MANAGE_RESOURCES)",
                      "description_kind": "plain",
                      "required": true
                    },
                    "description": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "environments": {
                      "type": [
                        "set",
                        "string"
                      ],
                      "description": "A repository can be available in different environments. Members with roles defined in the set environment will have access to the repository. List of pre-defined environments (DEV, PROD)",
                      "description_kind": "plain",
                      "required": true
                    },
                    "name": {
                      "type": "string",
                      "description_kind": "plain",
                      "required": true
                    },
                    "type": {
                      "type": "string",
                      "description": "Type of role. Only \"CUSTOM\" is supported",
                      "description_kind": "plain",
                      "required": true
                    }
                  },
                  "description": "Project role. Element has one to one mapping with the [JFrog Project Roles API](https://www.jfrog.com/confluence/display/JFROG/Artifactory+REST+API#ArtifactoryRESTAPI-AddaNewRole)",
                  "description_kind": "plain",
                  "deprecated": true
                }
              }
            },
            "description": "Provides an Artifactory project resource. This can be used to create and manage Artifactory project, maintain users/groups/roles/repos.\n\n## Repository Configuration\n\nAfter the project configuration is applied, the repository's attributes `project_key` and `project_environments` would be updated with the project's data. This will generate a state drift in the next Terraform plan/apply for the repository resource. To avoid this, apply `lifecycle.ignore_changes`:\n```hcl\nresource \"artifactory_local_maven_repository\" \"my_maven_releases\" {\n\tkey = \"my-maven-releases\"\n\t...\n\n\tlifecycle {\n\t\tignore_changes = [\n\t\t\tproject_environments,\n\t\t\tproject_key\n\t\t]\n\t}\n}\n```\n~>We strongly recommend using the 'repos' attribute to manage the list of repositories. See below for additional details.",
            "description_kind": "plain"
          }
        },
        "project_environment": {
          "version": 1,
          "block": {
            "attributes": {
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "description": "Environment name. Must start with a letter and can contain letters, digits and `-` character.",
                "description_kind": "plain",
                "required": true
              },
              "project_key": {
                "type": "string",
                "description": "Project key for this environment. This field supports only 2 - 20 lowercase alphanumeric and hyphen characters. Must begin with a letter.",
                "description_kind": "plain",
                "required": true
              }
            },
            "description": "Creates a new environment for the specified project.\n\n~>The combined length of `project_key` and `name` (separated by '-') cannot not exceeds 32 characters.",
            "description_kind": "plain"
          }
        },
        "project_role": {
          "version": 1,
          "block": {
            "attributes": {
              "actions": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "List of pre-defined actions (READ_REPOSITORY, ANNOTATE_REPOSITORY, DEPLOY_CACHE_REPOSITORY, DELETE_OVERWRITE_REPOSITORY, MANAGE_XRAY_MD_REPOSITORY, READ_RELEASE_BUNDLE, ANNOTATE_RELEASE_BUNDLE, CREATE_RELEASE_BUNDLE, DISTRIBUTE_RELEASE_BUNDLE, DELETE_RELEASE_BUNDLE, MANAGE_XRAY_MD_RELEASE_BUNDLE, READ_BUILD, ANNOTATE_BUILD, DEPLOY_BUILD, DELETE_BUILD, MANAGE_XRAY_MD_BUILD, READ_SOURCES_PIPELINE, TRIGGER_PIPELINE, READ_INTEGRATIONS_PIPELINE, READ_POOLS_PIPELINE, MANAGE_INTEGRATIONS_PIPELINE, MANAGE_SOURCES_PIPELINE, MANAGE_POOLS_PIPELINE, TRIGGER_SECURITY, ISSUES_SECURITY, LICENCES_SECURITY, REPORTS_SECURITY, WATCHES_SECURITY, POLICIES_SECURITY, RULES_SECURITY, MANAGE_MEMBERS, MANAGE_RESOURCES)",
                "description_kind": "plain",
                "required": true
              },
              "environments": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "A repository can be available in different environments. Members with roles defined in the set environment will have access to the repository. List of pre-defined environments (DEV, PROD)",
                "description_kind": "plain",
                "required": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "description_kind": "plain",
                "required": true
              },
              "project_key": {
                "type": "string",
                "description": "Project key for this environment. This field supports only 2 - 20 lowercase alphanumeric and hyphen characters. Must begin with a letter.",
                "description_kind": "plain",
                "required": true
              },
              "type": {
                "type": "string",
                "description": "Type of role. Only \"CUSTOM\" is supported",
                "description_kind": "plain",
                "required": true
              }
            },
            "description": "Create a project role. Element has one to one mapping with the [JFrog Project Roles API](https://www.jfrog.com/confluence/display/JFROG/Artifactory+REST+API#ArtifactoryRESTAPI-AddaNewRole). Requires a user assigned with the 'Administer the Platform' role or Project Admin permissions if `admin_privileges.manage_resoures` is enabled.",
            "description_kind": "plain"
          }
        }
      }
    }
  }
}
