{
  "format_version": "1.0",
  "provider_schemas": {
    "registry.terraform.io/determinatesystems/hydra": {
      "provider": {
        "version": 0,
        "block": {
          "attributes": {
            "host": {
              "type": "string",
              "description": "The address of the Hydra instance.",
              "description_kind": "plain",
              "required": true
            },
            "password": {
              "type": "string",
              "description": "The password for the Hydra user specified in `username`.",
              "description_kind": "plain",
              "required": true,
              "sensitive": true
            },
            "username": {
              "type": "string",
              "description": "The user that Terraform will be logging in as.",
              "description_kind": "plain",
              "required": true
            }
          },
          "description_kind": "plain"
        }
      },
      "resource_schemas": {
        "hydra_jobset": {
          "version": 0,
          "block": {
            "attributes": {
              "check_interval": {
                "type": "number",
                "description": "How frequently to check the jobset in seconds (0 disables polling).",
                "description_kind": "plain",
                "required": true
              },
              "description": {
                "type": "string",
                "description": "Description of the jobset.",
                "description_kind": "plain",
                "optional": true
              },
              "email_notifications": {
                "type": "bool",
                "description": "Whether or not to send email notifications",
                "description_kind": "plain",
                "optional": true
              },
              "email_override": {
                "type": "string",
                "description": "An email, or a comma-separated list of emails, to send email notifications to.",
                "description_kind": "plain",
                "optional": true
              },
              "flake_uri": {
                "type": "string",
                "description": "(Mandatory when the `type` is `flake`, otherwise prohibited.) The jobset's flake URI.",
                "description_kind": "plain",
                "optional": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "keep_evaluations": {
                "type": "number",
                "description": "How many of the jobset's evaluations to keep.",
                "description_kind": "plain",
                "required": true
              },
              "name": {
                "type": "string",
                "description": "Name of the jobset.",
                "description_kind": "plain",
                "required": true
              },
              "project": {
                "type": "string",
                "description": "Name of the parent project.",
                "description_kind": "plain",
                "required": true
              },
              "scheduling_shares": {
                "type": "number",
                "description": "How many shares allocated to the jobset.",
                "description_kind": "plain",
                "required": true
              },
              "state": {
                "type": "string",
                "description": "State of the jobset.",
                "description_kind": "plain",
                "required": true
              },
              "type": {
                "type": "string",
                "description": "Type of jobset.",
                "description_kind": "plain",
                "required": true
              },
              "visible": {
                "type": "bool",
                "description": "Whether or not the jobset is visible.",
                "description_kind": "plain",
                "optional": true
              }
            },
            "block_types": {
              "input": {
                "nesting_mode": "set",
                "block": {
                  "attributes": {
                    "name": {
                      "type": "string",
                      "description": "The name of the input.",
                      "description_kind": "plain",
                      "required": true
                    },
                    "notify_committers": {
                      "type": "bool",
                      "description": "Whether or not to notify committers.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "type": {
                      "type": "string",
                      "description": "The type of the input.",
                      "description_kind": "plain",
                      "required": true
                    },
                    "value": {
                      "type": "string",
                      "description": "The value of the input.",
                      "description_kind": "plain",
                      "required": true
                    }
                  },
                  "description": "Input(s) provided to the jobset.",
                  "description_kind": "plain"
                }
              },
              "nix_expression": {
                "nesting_mode": "set",
                "block": {
                  "attributes": {
                    "file": {
                      "type": "string",
                      "description": "The file in `input` which contains the Nix expression. Relative to the root of `input`.",
                      "description_kind": "plain",
                      "required": true
                    },
                    "input": {
                      "type": "string",
                      "description": "The name of the `input` which contains `file`.",
                      "description_kind": "plain",
                      "required": true
                    }
                  },
                  "description": "(Mandatory when the `type` is `legacy`, otherwise prohibited.) The jobset's entrypoint Nix expression. The `file` must exist in an input which matches the name specified in `input`.",
                  "description_kind": "plain"
                },
                "max_items": 1
              }
            },
            "description": "Resource defining a Hydra jobset.",
            "description_kind": "plain"
          }
        },
        "hydra_project": {
          "version": 0,
          "block": {
            "attributes": {
              "description": {
                "type": "string",
                "description": "Description of the project.",
                "description_kind": "plain",
                "optional": true
              },
              "display_name": {
                "type": "string",
                "description": "Display name of the project.",
                "description_kind": "plain",
                "required": true
              },
              "enabled": {
                "type": "bool",
                "description": "Whether or not the project is enabled.",
                "description_kind": "plain",
                "optional": true
              },
              "homepage": {
                "type": "string",
                "description": "Homepage of the project.",
                "description_kind": "plain",
                "optional": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "description": "Name of the project.",
                "description_kind": "plain",
                "required": true
              },
              "owner": {
                "type": "string",
                "description": "Owner of the project.",
                "description_kind": "plain",
                "optional": true
              },
              "visible": {
                "type": "bool",
                "description": "Whether or not the project is visible.",
                "description_kind": "plain",
                "optional": true
              }
            },
            "block_types": {
              "declarative": {
                "nesting_mode": "set",
                "block": {
                  "attributes": {
                    "file": {
                      "type": "string",
                      "description": "The file in `value` which contains the declarative spec file. Relative to the root of `input`.",
                      "description_kind": "plain",
                      "required": true
                    },
                    "type": {
                      "type": "string",
                      "description": "The type of the declarative input.",
                      "description_kind": "plain",
                      "required": true
                    },
                    "value": {
                      "type": "string",
                      "description": "The value of the declarative input.",
                      "description_kind": "plain",
                      "required": true
                    }
                  },
                  "description": "Configuration of the declarative project.",
                  "description_kind": "plain"
                },
                "max_items": 1
              }
            },
            "description": "Resource defining a Hydra project.",
            "description_kind": "plain"
          }
        }
      }
    }
  }
}
