{
  "format_version": "1.0",
  "provider_schemas": {
    "registry.terraform.io/auth0/auth0": {
      "provider": {
        "version": 0,
        "block": {
          "attributes": {
            "api_token": {
              "type": "string",
              "description": "Your Auth0 [management api access token](https://auth0.com/docs/security/tokens/access-tokens/management-api-access-tokens). It can also be sourced from the `AUTH0_API_TOKEN` environment variable. It can be used instead of `client_id` + `client_secret`. If both are specified, `api_token` will be used over `client_id` + `client_secret` fields.",
              "description_kind": "markdown",
              "optional": true
            },
            "audience": {
              "type": "string",
              "description": "Your Auth0 audience when using a custom domain. It can also be sourced from the `AUTH0_AUDIENCE` environment variable.",
              "description_kind": "markdown",
              "optional": true
            },
            "client_id": {
              "type": "string",
              "description": "Your Auth0 client ID. It can also be sourced from the `AUTH0_CLIENT_ID` environment variable.",
              "description_kind": "markdown",
              "optional": true
            },
            "client_secret": {
              "type": "string",
              "description": "Your Auth0 client secret. It can also be sourced from the `AUTH0_CLIENT_SECRET` environment variable.",
              "description_kind": "markdown",
              "optional": true
            },
            "debug": {
              "type": "bool",
              "description": "Indicates whether to turn on debug mode.",
              "description_kind": "markdown",
              "optional": true
            },
            "domain": {
              "type": "string",
              "description": "Your Auth0 domain name. It can also be sourced from the `AUTH0_DOMAIN` environment variable.",
              "description_kind": "markdown",
              "required": true
            }
          },
          "description_kind": "plain"
        }
      },
      "resource_schemas": {
        "auth0_action": {
          "version": 0,
          "block": {
            "attributes": {
              "code": {
                "type": "string",
                "description": "The source code of the action.",
                "description_kind": "markdown",
                "required": true
              },
              "deploy": {
                "type": "bool",
                "description": "Deploying an action will create a new immutable version of the action. If the action is currently bound to a trigger, then the system will begin executing the newly deployed version of the action immediately.",
                "description_kind": "markdown",
                "optional": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "description": "The name of the action.",
                "description_kind": "markdown",
                "required": true
              },
              "runtime": {
                "type": "string",
                "description": "The Node runtime. Defaults to `node12`. Possible values are: `node12`, `node16` or `node18`.",
                "description_kind": "markdown",
                "optional": true,
                "computed": true
              },
              "version_id": {
                "type": "string",
                "description": "Version ID of the action. This value is available if `deploy` is set to true.",
                "description_kind": "markdown",
                "computed": true
              }
            },
            "block_types": {
              "dependencies": {
                "nesting_mode": "set",
                "block": {
                  "attributes": {
                    "name": {
                      "type": "string",
                      "description": "Dependency name, e.g. `lodash`.",
                      "description_kind": "markdown",
                      "required": true
                    },
                    "version": {
                      "type": "string",
                      "description": "Dependency version, e.g. `latest` or `4.17.21`.",
                      "description_kind": "markdown",
                      "required": true
                    }
                  },
                  "description": "List of third party npm modules, and their versions, that this action depends on.",
                  "description_kind": "markdown"
                }
              },
              "secrets": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "name": {
                      "type": "string",
                      "description": "Secret name.",
                      "description_kind": "markdown",
                      "required": true
                    },
                    "value": {
                      "type": "string",
                      "description": "Secret value.",
                      "description_kind": "markdown",
                      "required": true,
                      "sensitive": true
                    }
                  },
                  "description": "List of secrets that are included in an action or a version of an action.",
                  "description_kind": "markdown"
                }
              },
              "supported_triggers": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description": "The trigger ID.",
                      "description_kind": "markdown",
                      "required": true
                    },
                    "version": {
                      "type": "string",
                      "description": "The trigger version. This regulates which `runtime` versions are supported.",
                      "description_kind": "markdown",
                      "required": true
                    }
                  },
                  "description": "List of triggers that this action supports. At this time, an action can only target a single trigger at a time. Read [Retrieving the set of triggers available within actions](https://registry.terraform.io/providers/auth0/auth0/latest/docs/guides/action_triggers) to retrieve the latest trigger versions supported.",
                  "description_kind": "markdown"
                },
                "min_items": 1,
                "max_items": 1
              }
            },
            "description": "Actions are secure, tenant-specific, versioned functions written in Node.js that execute at certain points during the Auth0 runtime. Actions are used to customize and extend Auth0's capabilities with custom logic.",
            "description_kind": "markdown"
          }
        },
        "auth0_attack_protection": {
          "version": 0,
          "block": {
            "attributes": {
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              }
            },
            "block_types": {
              "breached_password_detection": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "admin_notification_frequency": {
                      "type": [
                        "set",
                        "string"
                      ],
                      "description": "When \"admin_notification\" is enabled, determines how often email notifications are sent. Possible values: `immediately`, `daily`, `weekly`, `monthly`.",
                      "description_kind": "markdown",
                      "optional": true,
                      "computed": true
                    },
                    "enabled": {
                      "type": "bool",
                      "description": "Whether breached password detection is active.",
                      "description_kind": "markdown",
                      "optional": true
                    },
                    "method": {
                      "type": "string",
                      "description": "The subscription level for breached password detection methods. Use \"enhanced\" to enable Credential Guard. Possible values: `standard`, `enhanced`.",
                      "description_kind": "markdown",
                      "optional": true,
                      "computed": true
                    },
                    "shields": {
                      "type": [
                        "set",
                        "string"
                      ],
                      "description": "Action to take when a breached password is detected.",
                      "description_kind": "markdown",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "block_types": {
                    "pre_user_registration": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "shields": {
                            "type": [
                              "set",
                              "string"
                            ],
                            "description": "Action to take when a breached password is detected during a signup. Possible values: `block`, `admin_notification`.",
                            "description_kind": "markdown",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "description": "Configuration options that apply before every user registration attempt. Only available on public tenants.",
                        "description_kind": "markdown"
                      },
                      "max_items": 1
                    }
                  },
                  "description": "Breached password detection protects your applications from bad actors logging in with stolen credentials.",
                  "description_kind": "markdown"
                },
                "max_items": 1
              },
              "brute_force_protection": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "allowlist": {
                      "type": [
                        "set",
                        "string"
                      ],
                      "description": "List of trusted IP addresses that will not have attack protection enforced against them.",
                      "description_kind": "markdown",
                      "optional": true,
                      "computed": true
                    },
                    "enabled": {
                      "type": "bool",
                      "description": "Whether brute force attack protections are active.",
                      "description_kind": "markdown",
                      "optional": true
                    },
                    "max_attempts": {
                      "type": "number",
                      "description": "Maximum number of unsuccessful attempts. Only available on public tenants.",
                      "description_kind": "markdown",
                      "optional": true,
                      "computed": true
                    },
                    "mode": {
                      "type": "string",
                      "description": "Determines whether the IP address is used when counting failed attempts. Possible values: `count_per_identifier_and_ip` or `count_per_identifier`.",
                      "description_kind": "markdown",
                      "optional": true,
                      "computed": true
                    },
                    "shields": {
                      "type": [
                        "set",
                        "string"
                      ],
                      "description": "Action to take when a brute force protection threshold is violated. Possible values: `block`, `user_notification`",
                      "description_kind": "markdown",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "description": "Brute-force protection safeguards against a single IP address attacking a single user account.",
                  "description_kind": "markdown"
                },
                "max_items": 1
              },
              "suspicious_ip_throttling": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "allowlist": {
                      "type": [
                        "set",
                        "string"
                      ],
                      "description": "List of trusted IP addresses that will not have attack protection enforced against them.",
                      "description_kind": "markdown",
                      "optional": true,
                      "computed": true
                    },
                    "enabled": {
                      "type": "bool",
                      "description": "Whether suspicious IP throttling attack protections are active.",
                      "description_kind": "markdown",
                      "optional": true
                    },
                    "shields": {
                      "type": [
                        "set",
                        "string"
                      ],
                      "description": "Action to take when a suspicious IP throttling threshold is violated. Possible values: `block`, `admin_notification`",
                      "description_kind": "markdown",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "block_types": {
                    "pre_login": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "max_attempts": {
                            "type": "number",
                            "description": "Total number of attempts allowed per day.",
                            "description_kind": "markdown",
                            "optional": true,
                            "computed": true
                          },
                          "rate": {
                            "type": "number",
                            "description": "Interval of time, given in milliseconds, at which new attempts are granted.",
                            "description_kind": "markdown",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "description": "Configuration options that apply before every login attempt. Only available on public tenants.",
                        "description_kind": "markdown"
                      },
                      "max_items": 1
                    },
                    "pre_user_registration": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "max_attempts": {
                            "type": "number",
                            "description": "Total number of attempts allowed.",
                            "description_kind": "markdown",
                            "optional": true,
                            "computed": true
                          },
                          "rate": {
                            "type": "number",
                            "description": "Interval of time, given in milliseconds, at which new attempts are granted.",
                            "description_kind": "markdown",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "description": "Configuration options that apply before every user registration attempt. Only available on public tenants.",
                        "description_kind": "markdown"
                      },
                      "max_items": 1
                    }
                  },
                  "description": "Suspicious IP throttling blocks traffic from any IP address that rapidly attempts too many logins or signups.",
                  "description_kind": "markdown"
                },
                "max_items": 1
              }
            },
            "description": "Auth0 can detect attacks and stop malicious attempts to access your application such as blocking traffic from certain IPs and displaying CAPTCHAs.",
            "description_kind": "markdown"
          }
        },
        "auth0_branding": {
          "version": 0,
          "block": {
            "attributes": {
              "favicon_url": {
                "type": "string",
                "description": "URL for the favicon.",
                "description_kind": "markdown",
                "optional": true,
                "computed": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "logo_url": {
                "type": "string",
                "description": "URL of logo for branding.",
                "description_kind": "markdown",
                "optional": true,
                "computed": true
              }
            },
            "block_types": {
              "colors": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "page_background": {
                      "type": "string",
                      "description": "Background color of login pages in hexadecimal.",
                      "description_kind": "markdown",
                      "optional": true,
                      "computed": true
                    },
                    "primary": {
                      "type": "string",
                      "description": "Primary button background color in hexadecimal.",
                      "description_kind": "markdown",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "description": "Configuration settings for colors for branding.",
                  "description_kind": "markdown"
                },
                "max_items": 1
              },
              "font": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "url": {
                      "type": "string",
                      "description": "URL for the custom font.",
                      "description_kind": "markdown",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "description": "Configuration settings to customize the font.",
                  "description_kind": "markdown"
                },
                "max_items": 1
              },
              "universal_login": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "body": {
                      "type": "string",
                      "description": "The body of login pages.",
                      "description_kind": "markdown",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "description": "Configuration settings for Universal Login.",
                  "description_kind": "markdown"
                },
                "max_items": 1
              }
            },
            "description": "This resource allows you to manage branding within your Auth0 tenant. Auth0 can be customized with a look and feel that aligns with your organization's brand requirements and user expectations.",
            "description_kind": "markdown"
          }
        },
        "auth0_branding_theme": {
          "version": 0,
          "block": {
            "attributes": {
              "display_name": {
                "type": "string",
                "description": "The display name for the branding theme.",
                "description_kind": "markdown",
                "optional": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              }
            },
            "block_types": {
              "borders": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "button_border_radius": {
                      "type": "number",
                      "description": "Button border radius. Value needs to be between `1` and `10`. Defaults to `3.0`.",
                      "description_kind": "markdown",
                      "optional": true
                    },
                    "button_border_weight": {
                      "type": "number",
                      "description": "Button border weight. Value needs to be between `0` and `10`. Defaults to `1.0`.",
                      "description_kind": "markdown",
                      "optional": true
                    },
                    "buttons_style": {
                      "type": "string",
                      "description": "Buttons style. Available options: `pill`, `rounded`, `sharp`. Defaults to `rounded`.",
                      "description_kind": "markdown",
                      "optional": true
                    },
                    "input_border_radius": {
                      "type": "number",
                      "description": "Input border radius. Value needs to be between `0` and `10`. Defaults to `3.0`.",
                      "description_kind": "markdown",
                      "optional": true
                    },
                    "input_border_weight": {
                      "type": "number",
                      "description": "Input border weight. Value needs to be between `0` and `3`. Defaults to `1.0`.",
                      "description_kind": "markdown",
                      "optional": true
                    },
                    "inputs_style": {
                      "type": "string",
                      "description": "Inputs style. Available options: `pill`, `rounded`, `sharp`. Defaults to `rounded`.",
                      "description_kind": "markdown",
                      "optional": true
                    },
                    "show_widget_shadow": {
                      "type": "bool",
                      "description": "Show widget shadow. Defaults to `true`.",
                      "description_kind": "markdown",
                      "optional": true
                    },
                    "widget_border_weight": {
                      "type": "number",
                      "description": "Widget border weight. Value needs to be between `0` and `10`. Defaults to `0.0`.",
                      "description_kind": "markdown",
                      "optional": true
                    },
                    "widget_corner_radius": {
                      "type": "number",
                      "description": "Widget corner radius. Value needs to be between `0` and `50`. Defaults to `5.0`.",
                      "description_kind": "markdown",
                      "optional": true
                    }
                  },
                  "description_kind": "plain"
                },
                "min_items": 1,
                "max_items": 1
              },
              "colors": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "base_focus_color": {
                      "type": "string",
                      "description": "Base focus color. Defaults to `#635dff`.",
                      "description_kind": "markdown",
                      "optional": true
                    },
                    "base_hover_color": {
                      "type": "string",
                      "description": "Base hover color. Defaults to `#000000`.",
                      "description_kind": "markdown",
                      "optional": true
                    },
                    "body_text": {
                      "type": "string",
                      "description": "Body text. Defaults to `#1e212a`.",
                      "description_kind": "markdown",
                      "optional": true
                    },
                    "error": {
                      "type": "string",
                      "description": "Error. Defaults to `#d03c38`.",
                      "description_kind": "markdown",
                      "optional": true
                    },
                    "header": {
                      "type": "string",
                      "description": "Header. Defaults to `#1e212a`.",
                      "description_kind": "markdown",
                      "optional": true
                    },
                    "icons": {
                      "type": "string",
                      "description": "Icons. Defaults to `#65676e`.",
                      "description_kind": "markdown",
                      "optional": true
                    },
                    "input_background": {
                      "type": "string",
                      "description": "Input background. Defaults to `#ffffff`.",
                      "description_kind": "markdown",
                      "optional": true
                    },
                    "input_border": {
                      "type": "string",
                      "description": "Input border. Defaults to `#c9cace`.",
                      "description_kind": "markdown",
                      "optional": true
                    },
                    "input_filled_text": {
                      "type": "string",
                      "description": "Input filled text. Defaults to `#000000`.",
                      "description_kind": "markdown",
                      "optional": true
                    },
                    "input_labels_placeholders": {
                      "type": "string",
                      "description": "Input labels & placeholders. Defaults to `#65676e`.",
                      "description_kind": "markdown",
                      "optional": true
                    },
                    "links_focused_components": {
                      "type": "string",
                      "description": "Links & focused components. Defaults to `#635dff`.",
                      "description_kind": "markdown",
                      "optional": true
                    },
                    "primary_button": {
                      "type": "string",
                      "description": "Primary button. Defaults to `#635dff`.",
                      "description_kind": "markdown",
                      "optional": true
                    },
                    "primary_button_label": {
                      "type": "string",
                      "description": "Primary button label. Defaults to `#ffffff`.",
                      "description_kind": "markdown",
                      "optional": true
                    },
                    "secondary_button_border": {
                      "type": "string",
                      "description": "Secondary button border. Defaults to `#c9cace`.",
                      "description_kind": "markdown",
                      "optional": true
                    },
                    "secondary_button_label": {
                      "type": "string",
                      "description": "Secondary button label. Defaults to `#1e212a`.",
                      "description_kind": "markdown",
                      "optional": true
                    },
                    "success": {
                      "type": "string",
                      "description": "Success. Defaults to `#13a688`.",
                      "description_kind": "markdown",
                      "optional": true
                    },
                    "widget_background": {
                      "type": "string",
                      "description": "Widget background. Defaults to `#ffffff`.",
                      "description_kind": "markdown",
                      "optional": true
                    },
                    "widget_border": {
                      "type": "string",
                      "description": "Widget border. Defaults to `#c9cace`.",
                      "description_kind": "markdown",
                      "optional": true
                    }
                  },
                  "description_kind": "plain"
                },
                "min_items": 1,
                "max_items": 1
              },
              "fonts": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "font_url": {
                      "type": "string",
                      "description": "Font URL. Defaults to an empty string.",
                      "description_kind": "markdown",
                      "optional": true
                    },
                    "links_style": {
                      "type": "string",
                      "description": "Links style. Defaults to `normal`.",
                      "description_kind": "markdown",
                      "optional": true
                    },
                    "reference_text_size": {
                      "type": "number",
                      "description": "Reference text size. Value needs to be between `12` and `24`. Defaults to `16.0`.",
                      "description_kind": "markdown",
                      "optional": true
                    }
                  },
                  "block_types": {
                    "body_text": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "bold": {
                            "type": "bool",
                            "description": "Body text bold. Defaults to `false`.",
                            "description_kind": "markdown",
                            "optional": true
                          },
                          "size": {
                            "type": "number",
                            "description": "Body text size. Value needs to be between `0` and `150`. Defaults to `87.5`.",
                            "description_kind": "markdown",
                            "optional": true
                          }
                        },
                        "description": "Body text.",
                        "description_kind": "markdown"
                      },
                      "min_items": 1,
                      "max_items": 1
                    },
                    "buttons_text": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "bold": {
                            "type": "bool",
                            "description": "Buttons text bold. Defaults to `false`.",
                            "description_kind": "markdown",
                            "optional": true
                          },
                          "size": {
                            "type": "number",
                            "description": "Buttons text size. Value needs to be between `0` and `150`. Defaults to `100.0`.",
                            "description_kind": "markdown",
                            "optional": true
                          }
                        },
                        "description": "Buttons text.",
                        "description_kind": "markdown"
                      },
                      "min_items": 1,
                      "max_items": 1
                    },
                    "input_labels": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "bold": {
                            "type": "bool",
                            "description": "Input labels bold. Defaults to `false`.",
                            "description_kind": "markdown",
                            "optional": true
                          },
                          "size": {
                            "type": "number",
                            "description": "Input labels size. Value needs to be between `0` and `150`. Defaults to `100.0`.",
                            "description_kind": "markdown",
                            "optional": true
                          }
                        },
                        "description": "Input labels.",
                        "description_kind": "markdown"
                      },
                      "min_items": 1,
                      "max_items": 1
                    },
                    "links": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "bold": {
                            "type": "bool",
                            "description": "Links bold. Defaults to `true`.",
                            "description_kind": "markdown",
                            "optional": true
                          },
                          "size": {
                            "type": "number",
                            "description": "Links size. Value needs to be between `0` and `150`. Defaults to `87.5`.",
                            "description_kind": "markdown",
                            "optional": true
                          }
                        },
                        "description": "Links.",
                        "description_kind": "markdown"
                      },
                      "min_items": 1,
                      "max_items": 1
                    },
                    "subtitle": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "bold": {
                            "type": "bool",
                            "description": "Subtitle bold. Defaults to `false`.",
                            "description_kind": "markdown",
                            "optional": true
                          },
                          "size": {
                            "type": "number",
                            "description": "Subtitle size. Value needs to be between `0` and `150`. Defaults to `87.5`.",
                            "description_kind": "markdown",
                            "optional": true
                          }
                        },
                        "description": "Subtitle.",
                        "description_kind": "markdown"
                      },
                      "min_items": 1,
                      "max_items": 1
                    },
                    "title": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "bold": {
                            "type": "bool",
                            "description": "Title bold. Defaults to `false`.",
                            "description_kind": "markdown",
                            "optional": true
                          },
                          "size": {
                            "type": "number",
                            "description": "Title size. Value needs to be between `75` and `150`. Defaults to `150.0`.",
                            "description_kind": "markdown",
                            "optional": true
                          }
                        },
                        "description": "Title.",
                        "description_kind": "markdown"
                      },
                      "min_items": 1,
                      "max_items": 1
                    }
                  },
                  "description_kind": "plain"
                },
                "min_items": 1,
                "max_items": 1
              },
              "page_background": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "background_color": {
                      "type": "string",
                      "description": "Background color. Defaults to `#000000`.",
                      "description_kind": "markdown",
                      "optional": true
                    },
                    "background_image_url": {
                      "type": "string",
                      "description": "Background image url. Defaults to an empty string.",
                      "description_kind": "markdown",
                      "optional": true
                    },
                    "page_layout": {
                      "type": "string",
                      "description": "Page layout. Available options: `center`, `left`, `right`. Defaults to `center`.",
                      "description_kind": "markdown",
                      "optional": true
                    }
                  },
                  "description_kind": "plain"
                },
                "min_items": 1,
                "max_items": 1
              },
              "widget": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "header_text_alignment": {
                      "type": "string",
                      "description": "Header text alignment. Available options: `center`, `left`, `right`. Defaults to `center`.",
                      "description_kind": "markdown",
                      "optional": true
                    },
                    "logo_height": {
                      "type": "number",
                      "description": "Logo height. Value needs to be between `1` and `100`. Defaults to `52.0`.",
                      "description_kind": "markdown",
                      "optional": true
                    },
                    "logo_position": {
                      "type": "string",
                      "description": "Logo position. Available options: `center`, `left`, `right`, `none`. Defaults to `center`.",
                      "description_kind": "markdown",
                      "optional": true
                    },
                    "logo_url": {
                      "type": "string",
                      "description": "Logo url. Defaults to an empty string.",
                      "description_kind": "markdown",
                      "optional": true
                    },
                    "social_buttons_layout": {
                      "type": "string",
                      "description": "Social buttons layout. Available options: `bottom`, `top`. Defaults to `bottom`.",
                      "description_kind": "markdown",
                      "optional": true
                    }
                  },
                  "description_kind": "plain"
                },
                "min_items": 1,
                "max_items": 1
              }
            },
            "description": "This resource allows you to manage branding themes for your Universal Login page within your Auth0 tenant.",
            "description_kind": "markdown"
          }
        },
        "auth0_client": {
          "version": 0,
          "block": {
            "attributes": {
              "allowed_clients": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "List of applications ID's that will be allowed to make delegation request. By default, all applications will be allowed.",
                "description_kind": "markdown",
                "optional": true
              },
              "allowed_logout_urls": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "URLs that Auth0 may redirect to after logout.",
                "description_kind": "markdown",
                "optional": true
              },
              "allowed_origins": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "URLs that represent valid origins for cross-origin resource sharing. By default, all your callback URLs will be allowed.",
                "description_kind": "markdown",
                "optional": true
              },
              "app_type": {
                "type": "string",
                "description": "Type of application the client represents. Possible values are: `native`, `spa`, `regular_web`, `non_interactive`, `sso_integration`. Specific SSO integrations types accepted as well are: `rms`, `box`, `cloudbees`, `concur`, `dropbox`, `mscrm`, `echosign`, `egnyte`, `newrelic`, `office365`, `salesforce`, `sentry`, `sharepoint`, `slack`, `springcm`, `zendesk`, `zoom`.",
                "description_kind": "markdown",
                "optional": true
              },
              "callbacks": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "URLs that Auth0 may call back to after a user authenticates for the client. Make sure to specify the protocol (https://) otherwise the callback may fail in some cases. With the exception of custom URI schemes for native clients, all callbacks should use protocol https://.",
                "description_kind": "markdown",
                "optional": true
              },
              "client_aliases": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "List of audiences/realms for SAML protocol. Used by the wsfed addon.",
                "description_kind": "markdown",
                "optional": true
              },
              "client_id": {
                "type": "string",
                "description": "The ID of the client.",
                "description_kind": "markdown",
                "computed": true
              },
              "client_metadata": {
                "type": [
                  "map",
                  "string"
                ],
                "description": "Metadata associated with the client, in the form of an object with string values (max 255 chars). Maximum of 10 metadata properties allowed. Field names (max 255 chars) are alphanumeric and may only include the following special characters: `:,-+=_*?\"/\\()<>@ [Tab] [Space]`.",
                "description_kind": "markdown",
                "optional": true
              },
              "client_secret": {
                "type": "string",
                "description": "Secret for the client. Keep this private. To access this attribute you need to add the `read:client_keys` scope to the Terraform client. Otherwise, the attribute will contain an empty string.",
                "description_kind": "markdown",
                "computed": true,
                "sensitive": true
              },
              "client_secret_rotation_trigger": {
                "type": [
                  "map",
                  "string"
                ],
                "description": "Custom metadata for the rotation. The contents of this map are arbitrary and are hashed by the provider. When the hash changes, a rotation is triggered. For example, the map could contain the user making the change, the date of the change, and a text reason for the change. For more info: [rotate-client-secret](https://auth0.com/docs/get-started/applications/rotate-client-secret).",
                "description_kind": "markdown",
                "optional": true
              },
              "cross_origin_auth": {
                "type": "bool",
                "description": "Whether this client can be used to make cross-origin authentication requests (`true`) or it is not allowed to make such requests (`false`). Requires the `coa_toggle_enabled` feature flag to be enabled on the tenant by the support team.",
                "description_kind": "markdown",
                "optional": true
              },
              "cross_origin_loc": {
                "type": "string",
                "description": "URL of the location in your site where the cross-origin verification takes place for the cross-origin auth flow when performing authentication in your own domain instead of Auth0 Universal Login page.",
                "description_kind": "markdown",
                "optional": true
              },
              "custom_login_page": {
                "type": "string",
                "description": "The content (HTML, CSS, JS) of the custom login page.",
                "description_kind": "markdown",
                "optional": true
              },
              "custom_login_page_on": {
                "type": "bool",
                "description": "Indicates whether a custom login page is to be used.",
                "description_kind": "markdown",
                "optional": true,
                "computed": true
              },
              "description": {
                "type": "string",
                "description": "Description of the purpose of the client.",
                "description_kind": "markdown",
                "optional": true
              },
              "encryption_key": {
                "type": [
                  "map",
                  "string"
                ],
                "description": "Encryption used for WS-Fed responses with this client.",
                "description_kind": "markdown",
                "optional": true
              },
              "form_template": {
                "type": "string",
                "description": "HTML form template to be used for WS-Federation.",
                "description_kind": "markdown",
                "optional": true
              },
              "grant_types": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "Types of grants that this client is authorized to use.",
                "description_kind": "markdown",
                "optional": true,
                "computed": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "initiate_login_uri": {
                "type": "string",
                "description": "Initiate login URI. Must be HTTPS or an empty string.",
                "description_kind": "markdown",
                "optional": true
              },
              "is_first_party": {
                "type": "bool",
                "description": "Indicates whether this client is a first-party client.",
                "description_kind": "markdown",
                "optional": true,
                "computed": true
              },
              "is_token_endpoint_ip_header_trusted": {
                "type": "bool",
                "description": "Indicates whether the token endpoint IP header is trusted.",
                "description_kind": "markdown",
                "optional": true,
                "computed": true
              },
              "logo_uri": {
                "type": "string",
                "description": "URL of the logo for the client. Recommended size is 150px x 150px. If none is set, the default badge for the application type will be shown.",
                "description_kind": "markdown",
                "optional": true
              },
              "name": {
                "type": "string",
                "description": "Name of the client.",
                "description_kind": "markdown",
                "required": true
              },
              "oidc_conformant": {
                "type": "bool",
                "description": "Indicates whether this client will conform to strict OIDC specifications.",
                "description_kind": "markdown",
                "optional": true,
                "computed": true
              },
              "organization_require_behavior": {
                "type": "string",
                "description": "Defines how to proceed during an authentication transaction when `organization_usage = \"require\"`. Can be `no_prompt` (default) or `pre_login_prompt`.",
                "description_kind": "markdown",
                "optional": true
              },
              "organization_usage": {
                "type": "string",
                "description": "Defines how to proceed during an authentication transaction with regards to an organization. Can be `deny` (default), `allow` or `require`.",
                "description_kind": "markdown",
                "optional": true
              },
              "signing_keys": {
                "type": [
                  "list",
                  [
                    "map",
                    "string"
                  ]
                ],
                "description": "List containing a map of the public cert of the signing key and the public cert of the signing key in PKCS7.",
                "description_kind": "markdown",
                "computed": true,
                "sensitive": true
              },
              "sso": {
                "type": "bool",
                "description": "Applies only to SSO clients and determines whether Auth0 will handle Single Sign-On (true) or whether the identity provider will (false).",
                "description_kind": "markdown",
                "optional": true
              },
              "sso_disabled": {
                "type": "bool",
                "description": "Indicates whether or not SSO is disabled.",
                "description_kind": "markdown",
                "optional": true
              },
              "token_endpoint_auth_method": {
                "type": "string",
                "description": "Defines the requested authentication method for the token endpoint. Options include `none` (public client without a client secret), `client_secret_post` (client uses HTTP POST parameters), `client_secret_basic` (client uses HTTP Basic).",
                "description_kind": "markdown",
                "optional": true,
                "computed": true
              },
              "web_origins": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "URLs that represent valid web origins for use with web message response mode.",
                "description_kind": "markdown",
                "optional": true
              }
            },
            "block_types": {
              "addons": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "aws": {
                      "type": [
                        "map",
                        "string"
                      ],
                      "description_kind": "plain",
                      "optional": true
                    },
                    "azure_blob": {
                      "type": [
                        "map",
                        "string"
                      ],
                      "description_kind": "plain",
                      "optional": true
                    },
                    "azure_sb": {
                      "type": [
                        "map",
                        "string"
                      ],
                      "description_kind": "plain",
                      "optional": true
                    },
                    "box": {
                      "type": [
                        "map",
                        "string"
                      ],
                      "description_kind": "plain",
                      "optional": true
                    },
                    "cloudbees": {
                      "type": [
                        "map",
                        "string"
                      ],
                      "description_kind": "plain",
                      "optional": true
                    },
                    "concur": {
                      "type": [
                        "map",
                        "string"
                      ],
                      "description_kind": "plain",
                      "optional": true
                    },
                    "dropbox": {
                      "type": [
                        "map",
                        "string"
                      ],
                      "description_kind": "plain",
                      "optional": true
                    },
                    "echosign": {
                      "type": [
                        "map",
                        "string"
                      ],
                      "description_kind": "plain",
                      "optional": true
                    },
                    "egnyte": {
                      "type": [
                        "map",
                        "string"
                      ],
                      "description_kind": "plain",
                      "optional": true
                    },
                    "firebase": {
                      "type": [
                        "map",
                        "string"
                      ],
                      "description_kind": "plain",
                      "optional": true
                    },
                    "layer": {
                      "type": [
                        "map",
                        "string"
                      ],
                      "description_kind": "plain",
                      "optional": true
                    },
                    "mscrm": {
                      "type": [
                        "map",
                        "string"
                      ],
                      "description_kind": "plain",
                      "optional": true
                    },
                    "newrelic": {
                      "type": [
                        "map",
                        "string"
                      ],
                      "description_kind": "plain",
                      "optional": true
                    },
                    "office365": {
                      "type": [
                        "map",
                        "string"
                      ],
                      "description_kind": "plain",
                      "optional": true
                    },
                    "rms": {
                      "type": [
                        "map",
                        "string"
                      ],
                      "description_kind": "plain",
                      "optional": true
                    },
                    "salesforce": {
                      "type": [
                        "map",
                        "string"
                      ],
                      "description_kind": "plain",
                      "optional": true
                    },
                    "salesforce_api": {
                      "type": [
                        "map",
                        "string"
                      ],
                      "description_kind": "plain",
                      "optional": true
                    },
                    "salesforce_sandbox_api": {
                      "type": [
                        "map",
                        "string"
                      ],
                      "description_kind": "plain",
                      "optional": true
                    },
                    "sap_api": {
                      "type": [
                        "map",
                        "string"
                      ],
                      "description_kind": "plain",
                      "optional": true
                    },
                    "sentry": {
                      "type": [
                        "map",
                        "string"
                      ],
                      "description_kind": "plain",
                      "optional": true
                    },
                    "sharepoint": {
                      "type": [
                        "map",
                        "string"
                      ],
                      "description_kind": "plain",
                      "optional": true
                    },
                    "slack": {
                      "type": [
                        "map",
                        "string"
                      ],
                      "description_kind": "plain",
                      "optional": true
                    },
                    "springcm": {
                      "type": [
                        "map",
                        "string"
                      ],
                      "description_kind": "plain",
                      "optional": true
                    },
                    "wams": {
                      "type": [
                        "map",
                        "string"
                      ],
                      "description_kind": "plain",
                      "optional": true
                    },
                    "wsfed": {
                      "type": [
                        "map",
                        "string"
                      ],
                      "description": "WS-Fed (WIF) addon indicator. Actual configuration is stored in callback and `client_aliases` properties on the client.",
                      "description_kind": "markdown",
                      "optional": true
                    },
                    "zendesk": {
                      "type": [
                        "map",
                        "string"
                      ],
                      "description_kind": "plain",
                      "optional": true
                    },
                    "zoom": {
                      "type": [
                        "map",
                        "string"
                      ],
                      "description_kind": "plain",
                      "optional": true
                    }
                  },
                  "block_types": {
                    "samlp": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "audience": {
                            "type": "string",
                            "description": "Audience of the SAML Assertion. Default will be the Issuer on SAMLRequest.",
                            "description_kind": "markdown",
                            "optional": true
                          },
                          "authn_context_class_ref": {
                            "type": "string",
                            "description": "Class reference of the authentication context.",
                            "description_kind": "markdown",
                            "optional": true
                          },
                          "binding": {
                            "type": "string",
                            "description": "Protocol binding used for SAML logout responses.",
                            "description_kind": "markdown",
                            "optional": true
                          },
                          "create_upn_claim": {
                            "type": "bool",
                            "description": "Indicates whether a UPN claim should be created. Defaults to `true`.",
                            "description_kind": "markdown",
                            "optional": true
                          },
                          "destination": {
                            "type": "string",
                            "description": "Destination of the SAML Response. If not specified, it will be `AssertionConsumerUrl` of SAMLRequest or callback URL if there was no SAMLRequest.",
                            "description_kind": "markdown",
                            "optional": true
                          },
                          "digest_algorithm": {
                            "type": "string",
                            "description": "Algorithm used to calculate the digest of the SAML Assertion or response. Options include `sha1` and `sha256`. Defaults to `sha1`.",
                            "description_kind": "markdown",
                            "optional": true
                          },
                          "include_attribute_name_format": {
                            "type": "bool",
                            "description": "Indicates whether or not we should infer the NameFormat based on the attribute name. If set to false, the attribute NameFormat is not set in the assertion. Defaults to `true`.",
                            "description_kind": "markdown",
                            "optional": true
                          },
                          "issuer": {
                            "type": "string",
                            "description": "Issuer of the SAML Assertion.",
                            "description_kind": "markdown",
                            "optional": true
                          },
                          "lifetime_in_seconds": {
                            "type": "number",
                            "description": "Number of seconds during which the token is valid.",
                            "description_kind": "markdown",
                            "optional": true
                          },
                          "logout": {
                            "type": [
                              "map",
                              "string"
                            ],
                            "description": "Configuration settings for logout.",
                            "description_kind": "markdown",
                            "optional": true
                          },
                          "map_identities": {
                            "type": "bool",
                            "description": "Indicates whether or not to add additional identity information in the token, such as the provider used and the `access_token`, if available. Defaults to `true`.",
                            "description_kind": "markdown",
                            "optional": true
                          },
                          "map_unknown_claims_as_is": {
                            "type": "bool",
                            "description": "Indicates whether to add a prefix of `http://schema.auth0.com` to any claims that are not mapped to the common profile when passed through in the output assertion. Defaults to `false`.",
                            "description_kind": "markdown",
                            "optional": true
                          },
                          "mappings": {
                            "type": [
                              "map",
                              "string"
                            ],
                            "description": "Mappings between the Auth0 user profile property name (`name`) and the output attributes on the SAML attribute in the assertion (`value`).",
                            "description_kind": "markdown",
                            "optional": true
                          },
                          "name_identifier_format": {
                            "type": "string",
                            "description": "Format of the name identifier.",
                            "description_kind": "markdown",
                            "optional": true
                          },
                          "name_identifier_probes": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description": "Attributes that can be used for Subject/NameID. Auth0 will try each of the attributes of this array in order and use the first value it finds.",
                            "description_kind": "markdown",
                            "optional": true
                          },
                          "passthrough_claims_with_no_mapping": {
                            "type": "bool",
                            "description": "Indicates whether or not to passthrough claims that are not mapped to the common profile in the output assertion. Defaults to `true`.",
                            "description_kind": "markdown",
                            "optional": true
                          },
                          "recipient": {
                            "type": "string",
                            "description": "Recipient of the SAML Assertion (SubjectConfirmationData). Default is `AssertionConsumerUrl` on SAMLRequest or callback URL if no SAMLRequest was sent.",
                            "description_kind": "markdown",
                            "optional": true
                          },
                          "sign_response": {
                            "type": "bool",
                            "description": "Indicates whether or not the SAML Response should be signed instead of the SAML Assertion.",
                            "description_kind": "markdown",
                            "optional": true
                          },
                          "signature_algorithm": {
                            "type": "string",
                            "description": "Algorithm used to sign the SAML Assertion or response. Options include `rsa-sha1` and `rsa-sha256`. Defaults to `rsa-sha1`.",
                            "description_kind": "markdown",
                            "optional": true
                          },
                          "signing_cert": {
                            "type": "string",
                            "description": "Optionally indicates the public key certificate used to validate SAML requests. If set, SAML requests will be required to be signed. A sample value would be `-----BEGIN PUBLIC KEY-----\\nMIGf...bpP/t3\\n+JGNGIRMj1hF1rnb6QIDAQAB\\n-----END PUBLIC KEY-----\\n`.",
                            "description_kind": "markdown",
                            "optional": true
                          },
                          "typed_attributes": {
                            "type": "bool",
                            "description": "Indicates whether or not we should infer the `xs:type` of the element. Types include `xs:string`, `xs:boolean`, `xs:double`, and `xs:anyType`. When set to false, all `xs:type` are `xs:anyType`. Defaults to `true`.",
                            "description_kind": "markdown",
                            "optional": true
                          }
                        },
                        "description": "Configuration settings for a SAML add-on.",
                        "description_kind": "markdown"
                      },
                      "max_items": 1
                    }
                  },
                  "description": "Addons enabled for this client and their associated configurations.",
                  "description_kind": "markdown"
                },
                "max_items": 1
              },
              "jwt_configuration": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "alg": {
                      "type": "string",
                      "description": "Algorithm used to sign JWTs.",
                      "description_kind": "markdown",
                      "optional": true
                    },
                    "lifetime_in_seconds": {
                      "type": "number",
                      "description": "Number of seconds during which the JWT will be valid.",
                      "description_kind": "markdown",
                      "optional": true,
                      "computed": true
                    },
                    "scopes": {
                      "type": [
                        "map",
                        "string"
                      ],
                      "description": "Permissions (scopes) included in JWTs.",
                      "description_kind": "markdown",
                      "optional": true
                    },
                    "secret_encoded": {
                      "type": "bool",
                      "description": "Indicates whether the client secret is Base64-encoded.",
                      "description_kind": "markdown",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "description": "Configuration settings for the JWTs issued for this client.",
                  "description_kind": "markdown"
                },
                "max_items": 1
              },
              "mobile": {
                "nesting_mode": "list",
                "block": {
                  "block_types": {
                    "android": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "app_package_name": {
                            "type": "string",
                            "description_kind": "plain",
                            "optional": true
                          },
                          "sha256_cert_fingerprints": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description_kind": "plain",
                            "optional": true
                          }
                        },
                        "description": "Configuration settings for Android native apps.",
                        "description_kind": "markdown"
                      },
                      "max_items": 1
                    },
                    "ios": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "app_bundle_identifier": {
                            "type": "string",
                            "description_kind": "plain",
                            "optional": true
                          },
                          "team_id": {
                            "type": "string",
                            "description_kind": "plain",
                            "optional": true
                          }
                        },
                        "description": "Configuration settings for i0S native apps.",
                        "description_kind": "markdown"
                      },
                      "max_items": 1
                    }
                  },
                  "description": "Additional configuration for native mobile apps.",
                  "description_kind": "markdown"
                },
                "max_items": 1
              },
              "native_social_login": {
                "nesting_mode": "list",
                "block": {
                  "block_types": {
                    "apple": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "enabled": {
                            "type": "bool",
                            "description_kind": "plain",
                            "optional": true
                          }
                        },
                        "description_kind": "plain"
                      },
                      "max_items": 1
                    },
                    "facebook": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "enabled": {
                            "type": "bool",
                            "description_kind": "plain",
                            "optional": true
                          }
                        },
                        "description_kind": "plain"
                      },
                      "max_items": 1
                    }
                  },
                  "description": "Configuration settings to toggle native social login for mobile native applications. Once this is set it must stay set, with both resources set to `false` in order to change the `app_type`.",
                  "description_kind": "markdown"
                },
                "max_items": 1
              },
              "refresh_token": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "expiration_type": {
                      "type": "string",
                      "description": "Options include `expiring`, `non-expiring`. Whether a refresh token will expire based on an absolute lifetime, after which the token can no longer be used. If rotation is `rotating`, this must be set to `expiring`.",
                      "description_kind": "markdown",
                      "required": true
                    },
                    "idle_token_lifetime": {
                      "type": "number",
                      "description": "The time in seconds after which inactive refresh tokens will expire.",
                      "description_kind": "markdown",
                      "optional": true,
                      "computed": true
                    },
                    "infinite_idle_token_lifetime": {
                      "type": "bool",
                      "description": "Whether inactive refresh tokens should remain valid indefinitely.",
                      "description_kind": "markdown",
                      "optional": true,
                      "computed": true
                    },
                    "infinite_token_lifetime": {
                      "type": "bool",
                      "description": "Whether refresh tokens should remain valid indefinitely. If false, `token_lifetime` should also be set.",
                      "description_kind": "markdown",
                      "optional": true,
                      "computed": true
                    },
                    "leeway": {
                      "type": "number",
                      "description": "The amount of time in seconds in which a refresh token may be reused without triggering reuse detection.",
                      "description_kind": "markdown",
                      "optional": true,
                      "computed": true
                    },
                    "rotation_type": {
                      "type": "string",
                      "description": "Options include `rotating`, `non-rotating`. When `rotating`, exchanging a refresh token will cause a new refresh token to be issued and the existing token will be invalidated. This allows for automatic detection of token reuse if the token is leaked.",
                      "description_kind": "markdown",
                      "required": true
                    },
                    "token_lifetime": {
                      "type": "number",
                      "description": "The absolute lifetime of a refresh token in seconds.",
                      "description_kind": "markdown",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "description": "Configuration settings for the refresh tokens issued for this client.",
                  "description_kind": "markdown"
                },
                "max_items": 1
              }
            },
            "description": "With this resource, you can set up applications that use Auth0 for authentication and configure allowed callback URLs and secrets for these applications.",
            "description_kind": "markdown"
          }
        },
        "auth0_client_grant": {
          "version": 0,
          "block": {
            "attributes": {
              "audience": {
                "type": "string",
                "description": "Audience or API Identifier for this grant.",
                "description_kind": "markdown",
                "required": true
              },
              "client_id": {
                "type": "string",
                "description": "ID of the client for this grant.",
                "description_kind": "markdown",
                "required": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "scope": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "Permissions (scopes) included in this grant.",
                "description_kind": "markdown",
                "required": true
              }
            },
            "description": "Auth0 uses various grant types, or methods by which you grant limited access to your resources to another entity without exposing credentials. The OAuth 2.0 protocol supports several types of grants, which allow different types of access. This resource allows you to create and manage client grants used with configured Auth0 clients.",
            "description_kind": "markdown"
          }
        },
        "auth0_connection": {
          "version": 2,
          "block": {
            "attributes": {
              "display_name": {
                "type": "string",
                "description": "Name used in login screen.",
                "description_kind": "markdown",
                "optional": true
              },
              "enabled_clients": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "IDs of the clients for which the connection is enabled.",
                "description_kind": "markdown",
                "computed": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "is_domain_connection": {
                "type": "bool",
                "description": "Indicates whether the connection is domain level.",
                "description_kind": "markdown",
                "optional": true,
                "computed": true
              },
              "metadata": {
                "type": [
                  "map",
                  "string"
                ],
                "description": "Metadata associated with the connection, in the form of a map of string values (max 255 chars). Maximum of 10 metadata properties allowed.",
                "description_kind": "markdown",
                "optional": true
              },
              "name": {
                "type": "string",
                "description": "Name of the connection.",
                "description_kind": "markdown",
                "required": true
              },
              "realms": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "Defines the realms for which the connection will be used (e.g., email domains). If not specified, the connection name is added as the realm.",
                "description_kind": "markdown",
                "optional": true,
                "computed": true
              },
              "show_as_button": {
                "type": "bool",
                "description": "Display connection as a button. Only available on enterprise connections.",
                "description_kind": "markdown",
                "optional": true
              },
              "strategy": {
                "type": "string",
                "description": "Type of the connection, which indicates the identity provider.",
                "description_kind": "markdown",
                "required": true
              }
            },
            "block_types": {
              "options": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "adfs_server": {
                      "type": "string",
                      "description": "ADFS URL where to fetch the metadata source.",
                      "description_kind": "markdown",
                      "optional": true
                    },
                    "allowed_audiences": {
                      "type": [
                        "set",
                        "string"
                      ],
                      "description": "List of allowed audiences.",
                      "description_kind": "markdown",
                      "optional": true,
                      "computed": true
                    },
                    "api_enable_users": {
                      "type": "bool",
                      "description": "Enable API Access to users.",
                      "description_kind": "markdown",
                      "optional": true
                    },
                    "app_id": {
                      "type": "string",
                      "description": "App ID.",
                      "description_kind": "markdown",
                      "optional": true
                    },
                    "auth_params": {
                      "type": [
                        "map",
                        "string"
                      ],
                      "description": "Query string parameters to be included as part of the generated passwordless email link.",
                      "description_kind": "markdown",
                      "optional": true
                    },
                    "authorization_endpoint": {
                      "type": "string",
                      "description": "Authorization endpoint.",
                      "description_kind": "markdown",
                      "optional": true,
                      "computed": true
                    },
                    "brute_force_protection": {
                      "type": "bool",
                      "description": "Indicates whether to enable brute force protection, which will limit the number of signups and failed logins from a suspicious IP address.",
                      "description_kind": "markdown",
                      "optional": true
                    },
                    "client_id": {
                      "type": "string",
                      "description": "The strategy's client ID.",
                      "description_kind": "markdown",
                      "optional": true
                    },
                    "client_secret": {
                      "type": "string",
                      "description": "The strategy's client secret.",
                      "description_kind": "markdown",
                      "optional": true,
                      "sensitive": true
                    },
                    "community_base_url": {
                      "type": "string",
                      "description": "Salesforce community base URL.",
                      "description_kind": "markdown",
                      "optional": true
                    },
                    "configuration": {
                      "type": [
                        "map",
                        "string"
                      ],
                      "description": "A case-sensitive map of key value pairs used as configuration variables for the `custom_script`.",
                      "description_kind": "markdown",
                      "optional": true,
                      "sensitive": true
                    },
                    "custom_scripts": {
                      "type": [
                        "map",
                        "string"
                      ],
                      "description": "A map of scripts used to integrate with a custom database.",
                      "description_kind": "markdown",
                      "optional": true
                    },
                    "debug": {
                      "type": "bool",
                      "description": "When enabled, additional debug information will be generated.",
                      "description_kind": "markdown",
                      "optional": true
                    },
                    "digest_algorithm": {
                      "type": "string",
                      "description": "Sign Request Algorithm Digest.",
                      "description_kind": "markdown",
                      "optional": true
                    },
                    "disable_cache": {
                      "type": "bool",
                      "description": "Indicates whether to disable the cache or not.",
                      "description_kind": "markdown",
                      "optional": true
                    },
                    "disable_self_service_change_password": {
                      "type": "bool",
                      "description": "Indicates whether to remove the forgot password link within the New Universal Login.",
                      "description_kind": "markdown",
                      "optional": true
                    },
                    "disable_sign_out": {
                      "type": "bool",
                      "description": "When enabled, will disable sign out.",
                      "description_kind": "markdown",
                      "optional": true
                    },
                    "disable_signup": {
                      "type": "bool",
                      "description": "Indicates whether to allow user sign-ups to your application.",
                      "description_kind": "markdown",
                      "optional": true
                    },
                    "discovery_url": {
                      "type": "string",
                      "description": "OpenID discovery URL, e.g. `https://auth.example.com/.well-known/openid-configuration`.",
                      "description_kind": "markdown",
                      "optional": true
                    },
                    "domain": {
                      "type": "string",
                      "description": "Domain name.",
                      "description_kind": "markdown",
                      "optional": true
                    },
                    "domain_aliases": {
                      "type": [
                        "set",
                        "string"
                      ],
                      "description": "List of the domains that can be authenticated using the identity provider. Only needed for Identifier First authentication flows.",
                      "description_kind": "markdown",
                      "optional": true,
                      "computed": true
                    },
                    "enable_script_context": {
                      "type": "bool",
                      "description": "Set to `true` to inject context into custom DB scripts (warning: cannot be disabled once enabled).",
                      "description_kind": "markdown",
                      "optional": true
                    },
                    "enabled_database_customization": {
                      "type": "bool",
                      "description": "Set to `true` to use a legacy user store.",
                      "description_kind": "markdown",
                      "optional": true
                    },
                    "entity_id": {
                      "type": "string",
                      "description": "Custom Entity ID for the connection.",
                      "description_kind": "markdown",
                      "optional": true
                    },
                    "fed_metadata_xml": {
                      "type": "string",
                      "description": "Federation Metadata for the ADFS connection.",
                      "description_kind": "markdown",
                      "optional": true
                    },
                    "fields_map": {
                      "type": "string",
                      "description": "If you're configuring a SAML enterprise connection for a non-standard PingFederate Server, you must update the attribute mappings.",
                      "description_kind": "markdown",
                      "optional": true
                    },
                    "forward_request_info": {
                      "type": "bool",
                      "description": "Specifies whether or not request info should be forwarded to sms gateway.",
                      "description_kind": "markdown",
                      "optional": true
                    },
                    "from": {
                      "type": "string",
                      "description": "Address to use as the sender.",
                      "description_kind": "markdown",
                      "optional": true
                    },
                    "gateway_url": {
                      "type": "string",
                      "description": "Defines a custom sms gateway to use instead of Twilio.",
                      "description_kind": "markdown",
                      "optional": true
                    },
                    "icon_url": {
                      "type": "string",
                      "description": "Icon URL.",
                      "description_kind": "markdown",
                      "optional": true
                    },
                    "identity_api": {
                      "type": "string",
                      "description": "Azure AD Identity API. Available options are: `microsoft-identity-platform-v2.0` or `azure-active-directory-v1.0`.",
                      "description_kind": "markdown",
                      "optional": true
                    },
                    "import_mode": {
                      "type": "bool",
                      "description": "Indicates whether you have a legacy user store and want to gradually migrate those users to the Auth0 user store.",
                      "description_kind": "markdown",
                      "optional": true
                    },
                    "ips": {
                      "type": [
                        "set",
                        "string"
                      ],
                      "description": "A list of IPs.",
                      "description_kind": "markdown",
                      "optional": true,
                      "computed": true
                    },
                    "issuer": {
                      "type": "string",
                      "description": "Issuer URL, e.g. `https://auth.example.com`.",
                      "description_kind": "markdown",
                      "optional": true,
                      "computed": true
                    },
                    "jwks_uri": {
                      "type": "string",
                      "description": "JWKS URI.",
                      "description_kind": "markdown",
                      "optional": true,
                      "computed": true
                    },
                    "key_id": {
                      "type": "string",
                      "description": "Apple Key ID.",
                      "description_kind": "markdown",
                      "optional": true
                    },
                    "max_groups_to_retrieve": {
                      "type": "string",
                      "description": "Maximum number of groups to retrieve.",
                      "description_kind": "markdown",
                      "optional": true
                    },
                    "messaging_service_sid": {
                      "type": "string",
                      "description": "SID for Copilot. Used when SMS Source is Copilot.",
                      "description_kind": "markdown",
                      "optional": true
                    },
                    "metadata_url": {
                      "type": "string",
                      "description": "The URL of the SAML metadata document.",
                      "description_kind": "markdown",
                      "optional": true
                    },
                    "metadata_xml": {
                      "type": "string",
                      "description": "The XML content for the SAML metadata document.",
                      "description_kind": "markdown",
                      "optional": true
                    },
                    "name": {
                      "type": "string",
                      "description": "The public name of the email or SMS Connection. In most cases this is the same name as the connection name.",
                      "description_kind": "markdown",
                      "optional": true
                    },
                    "non_persistent_attrs": {
                      "type": [
                        "set",
                        "string"
                      ],
                      "description": "If there are user fields that should not be stored in Auth0 databases due to privacy reasons, you can add them to the DenyList here.",
                      "description_kind": "markdown",
                      "optional": true,
                      "computed": true
                    },
                    "password_policy": {
                      "type": "string",
                      "description": "Indicates level of password strength to enforce during authentication. A strong password policy will make it difficult, if not improbable, for someone to guess a password through either manual or automated means. Options include `none`, `low`, `fair`, `good`, `excellent`.",
                      "description_kind": "markdown",
                      "optional": true,
                      "computed": true
                    },
                    "ping_federate_base_url": {
                      "type": "string",
                      "description": "Ping Federate Server URL.",
                      "description_kind": "markdown",
                      "optional": true
                    },
                    "pkce_enabled": {
                      "type": "bool",
                      "description": "Enables Proof Key for Code Exchange (PKCE) functionality for OAuth2 connections.",
                      "description_kind": "markdown",
                      "optional": true
                    },
                    "protocol_binding": {
                      "type": "string",
                      "description": "The SAML Response Binding: how the SAML token is received by Auth0 from the IdP.",
                      "description_kind": "markdown",
                      "optional": true
                    },
                    "provider": {
                      "type": "string",
                      "description": "Defines the custom `sms_gateway` provider.",
                      "description_kind": "markdown",
                      "optional": true
                    },
                    "request_template": {
                      "type": "string",
                      "description": "Template that formats the SAML request.",
                      "description_kind": "markdown",
                      "optional": true
                    },
                    "requires_username": {
                      "type": "bool",
                      "description": "Indicates whether the user is required to provide a username in addition to an email address.",
                      "description_kind": "markdown",
                      "optional": true
                    },
                    "scopes": {
                      "type": [
                        "set",
                        "string"
                      ],
                      "description": "Permissions to grant to the connection. Within the Auth0 dashboard these appear under the \"Attributes\" and \"Extended Attributes\" sections. Some examples: `basic_profile`, `ext_profile`, `ext_nested_groups`, etc.",
                      "description_kind": "markdown",
                      "optional": true,
                      "computed": true
                    },
                    "scripts": {
                      "type": [
                        "map",
                        "string"
                      ],
                      "description": "A map of scripts used for an OAuth connection. Only accepts a `fetchUserProfile` script.",
                      "description_kind": "markdown",
                      "optional": true
                    },
                    "set_user_root_attributes": {
                      "type": "string",
                      "description": "Determines whether the 'name', 'given_name', 'family_name', 'nickname', and 'picture' attributes can be independently updated when using an external IdP. Possible values are 'on_each_login' (default value, it configures the connection to automatically update the root attributes from the external IdP with each user login. When this setting is used, root attributes cannot be independently updated), 'on_first_login' (configures the connection to only set the root attributes on first login, allowing them to be independently updated thereafter).",
                      "description_kind": "markdown",
                      "optional": true,
                      "computed": true
                    },
                    "should_trust_email_verified_connection": {
                      "type": "string",
                      "description": "Choose how Auth0 sets the email_verified field in the user profile.",
                      "description_kind": "markdown",
                      "optional": true
                    },
                    "sign_in_endpoint": {
                      "type": "string",
                      "description": "SAML single login URL for the connection.",
                      "description_kind": "markdown",
                      "optional": true,
                      "computed": true
                    },
                    "sign_out_endpoint": {
                      "type": "string",
                      "description": "SAML single logout URL for the connection.",
                      "description_kind": "markdown",
                      "optional": true,
                      "computed": true
                    },
                    "sign_saml_request": {
                      "type": "bool",
                      "description": "When enabled, the SAML authentication request will be signed.",
                      "description_kind": "markdown",
                      "optional": true
                    },
                    "signature_algorithm": {
                      "type": "string",
                      "description": "Sign Request Algorithm.",
                      "description_kind": "markdown",
                      "optional": true
                    },
                    "signing_cert": {
                      "type": "string",
                      "description": "X.509 signing certificate (encoded in PEM or CER) you retrieved from the IdP, Base64-encoded.",
                      "description_kind": "markdown",
                      "optional": true,
                      "computed": true
                    },
                    "strategy_version": {
                      "type": "number",
                      "description": "Version 1 is deprecated, use version 2.",
                      "description_kind": "markdown",
                      "optional": true,
                      "computed": true
                    },
                    "subject": {
                      "type": "string",
                      "description": "Subject line of the email.",
                      "description_kind": "markdown",
                      "optional": true
                    },
                    "syntax": {
                      "type": "string",
                      "description": "Syntax of the template body.",
                      "description_kind": "markdown",
                      "optional": true
                    },
                    "team_id": {
                      "type": "string",
                      "description": "Apple Team ID.",
                      "description_kind": "markdown",
                      "optional": true
                    },
                    "template": {
                      "type": "string",
                      "description": "Body of the template.",
                      "description_kind": "markdown",
                      "optional": true
                    },
                    "tenant_domain": {
                      "type": "string",
                      "description": "Tenant domain name.",
                      "description_kind": "markdown",
                      "optional": true
                    },
                    "token_endpoint": {
                      "type": "string",
                      "description": "Token endpoint.",
                      "description_kind": "markdown",
                      "optional": true,
                      "computed": true
                    },
                    "twilio_sid": {
                      "type": "string",
                      "description": "SID for your Twilio account.",
                      "description_kind": "markdown",
                      "optional": true
                    },
                    "twilio_token": {
                      "type": "string",
                      "description": "AuthToken for your Twilio account.",
                      "description_kind": "markdown",
                      "optional": true,
                      "sensitive": true
                    },
                    "type": {
                      "type": "string",
                      "description": "Value can be `back_channel` or `front_channel`.",
                      "description_kind": "markdown",
                      "optional": true
                    },
                    "upstream_params": {
                      "type": "string",
                      "description": "You can pass provider-specific parameters to an identity provider during authentication. The values can either be static per connection or dynamic per user.",
                      "description_kind": "markdown",
                      "optional": true
                    },
                    "use_cert_auth": {
                      "type": "bool",
                      "description": "Indicates whether to use cert auth or not.",
                      "description_kind": "markdown",
                      "optional": true
                    },
                    "use_kerberos": {
                      "type": "bool",
                      "description": "Indicates whether to use Kerberos or not.",
                      "description_kind": "markdown",
                      "optional": true
                    },
                    "use_wsfed": {
                      "type": "bool",
                      "description": "Whether to use WS-Fed.",
                      "description_kind": "markdown",
                      "optional": true
                    },
                    "user_id_attribute": {
                      "type": "string",
                      "description": "Attribute in the SAML token that will be mapped to the user_id property in Auth0.",
                      "description_kind": "markdown",
                      "optional": true
                    },
                    "userinfo_endpoint": {
                      "type": "string",
                      "description": "User info endpoint.",
                      "description_kind": "markdown",
                      "optional": true,
                      "computed": true
                    },
                    "waad_common_endpoint": {
                      "type": "bool",
                      "description": "Indicates whether to use the common endpoint rather than the default endpoint. Typically enabled if you're using this for a multi-tenant application in Azure AD.",
                      "description_kind": "markdown",
                      "optional": true
                    },
                    "waad_protocol": {
                      "type": "string",
                      "description": "Protocol to use.",
                      "description_kind": "markdown",
                      "optional": true
                    }
                  },
                  "block_types": {
                    "gateway_authentication": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "audience": {
                            "type": "string",
                            "description": "Audience claim for the HS256 token sent to `gateway_url`.",
                            "description_kind": "markdown",
                            "optional": true
                          },
                          "method": {
                            "type": "string",
                            "description": "Authentication method (default is `bearer` token).",
                            "description_kind": "markdown",
                            "optional": true
                          },
                          "secret": {
                            "type": "string",
                            "description": "Secret used to sign the HS256 token sent to `gateway_url`.",
                            "description_kind": "markdown",
                            "optional": true,
                            "sensitive": true
                          },
                          "secret_base64_encoded": {
                            "type": "bool",
                            "description": "Specifies whether or not the secret is Base64-encoded.",
                            "description_kind": "markdown",
                            "optional": true
                          },
                          "subject": {
                            "type": "string",
                            "description": "Subject claim for the HS256 token sent to `gateway_url`.",
                            "description_kind": "markdown",
                            "optional": true
                          }
                        },
                        "description": "Defines the parameters used to generate the auth token for the custom gateway.",
                        "description_kind": "markdown"
                      },
                      "max_items": 1
                    },
                    "idp_initiated": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "client_authorize_query": {
                            "type": "string",
                            "description_kind": "plain",
                            "optional": true
                          },
                          "client_id": {
                            "type": "string",
                            "description_kind": "plain",
                            "optional": true
                          },
                          "client_protocol": {
                            "type": "string",
                            "description_kind": "plain",
                            "optional": true
                          }
                        },
                        "description": "Configuration options for IDP Initiated Authentication. This is an object with the properties: `client_id`, `client_protocol`, and `client_authorize_query`.",
                        "description_kind": "markdown"
                      },
                      "max_items": 1
                    },
                    "mfa": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "active": {
                            "type": "bool",
                            "description": "Indicates whether multifactor authentication is enabled for this connection.",
                            "description_kind": "markdown",
                            "optional": true
                          },
                          "return_enroll_settings": {
                            "type": "bool",
                            "description": "Indicates whether multifactor authentication enrollment settings will be returned.",
                            "description_kind": "markdown",
                            "optional": true
                          }
                        },
                        "description": "Configuration options for multifactor authentication.",
                        "description_kind": "markdown"
                      },
                      "max_items": 1
                    },
                    "password_complexity_options": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "min_length": {
                            "type": "number",
                            "description": "Minimum number of characters allowed in passwords.",
                            "description_kind": "markdown",
                            "optional": true
                          }
                        },
                        "description": "Configuration settings for password complexity.",
                        "description_kind": "markdown"
                      },
                      "max_items": 1
                    },
                    "password_dictionary": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "dictionary": {
                            "type": [
                              "set",
                              "string"
                            ],
                            "description": "Customized contents of the password dictionary. By default, the password dictionary contains a list of the [10,000 most common passwords](https://github.com/danielmiessler/SecLists/blob/master/Passwords/Common-Credentials/10k-most-common.txt); your customized content is used in addition to the default password dictionary. Matching is not case-sensitive.",
                            "description_kind": "markdown",
                            "optional": true
                          },
                          "enable": {
                            "type": "bool",
                            "description": "Indicates whether the password dictionary check is enabled for this connection.",
                            "description_kind": "markdown",
                            "optional": true
                          }
                        },
                        "description": "Configuration settings for the password dictionary check, which does not allow passwords that are part of the password dictionary.",
                        "description_kind": "markdown"
                      },
                      "max_items": 1
                    },
                    "password_history": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "enable": {
                            "type": "bool",
                            "description_kind": "plain",
                            "optional": true
                          },
                          "size": {
                            "type": "number",
                            "description_kind": "plain",
                            "optional": true
                          }
                        },
                        "description": "Configuration settings for the password history that is maintained for each user to prevent the reuse of passwords.",
                        "description_kind": "markdown"
                      }
                    },
                    "password_no_personal_info": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "enable": {
                            "type": "bool",
                            "description_kind": "plain",
                            "optional": true
                          }
                        },
                        "description": "Configuration settings for the password personal info check, which does not allow passwords that contain any part of the user's personal data, including user's `name`, `username`, `nickname`, `user_metadata.name`, `user_metadata.first`, `user_metadata.last`, user's `email`, or first part of the user's `email`.",
                        "description_kind": "markdown"
                      },
                      "max_items": 1
                    },
                    "signing_key": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "cert": {
                            "type": "string",
                            "description_kind": "plain",
                            "required": true
                          },
                          "key": {
                            "type": "string",
                            "description_kind": "plain",
                            "required": true
                          }
                        },
                        "description": "The key used to sign requests in the connection. Uses the `key` and `cert` properties to provide the private key and certificate respectively.",
                        "description_kind": "markdown"
                      },
                      "max_items": 1
                    },
                    "totp": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "length": {
                            "type": "number",
                            "description": "Length of the one-time password.",
                            "description_kind": "markdown",
                            "optional": true
                          },
                          "time_step": {
                            "type": "number",
                            "description": "Seconds between allowed generation of new passwords.",
                            "description_kind": "markdown",
                            "optional": true
                          }
                        },
                        "description": "Configuration options for one-time passwords.",
                        "description_kind": "markdown"
                      },
                      "max_items": 1
                    },
                    "validation": {
                      "nesting_mode": "list",
                      "block": {
                        "block_types": {
                          "username": {
                            "nesting_mode": "list",
                            "block": {
                              "attributes": {
                                "max": {
                                  "type": "number",
                                  "description_kind": "plain",
                                  "optional": true
                                },
                                "min": {
                                  "type": "number",
                                  "description_kind": "plain",
                                  "optional": true
                                }
                              },
                              "description": "Specifies the `min` and `max` values of username length.",
                              "description_kind": "markdown"
                            },
                            "max_items": 1
                          }
                        },
                        "description": "Validation of the minimum and maximum values allowed for a user to have as username.",
                        "description_kind": "markdown"
                      },
                      "max_items": 1
                    }
                  },
                  "description": "Configuration settings for connection options.",
                  "description_kind": "markdown"
                },
                "max_items": 1
              }
            },
            "description": "With Auth0, you can define sources of users, otherwise known as connections, which may include identity providers (such as Google or LinkedIn), databases, or passwordless authentication methods. This resource allows you to configure and manage connections to be used with your clients and users.",
            "description_kind": "markdown"
          }
        },
        "auth0_connection_client": {
          "version": 0,
          "block": {
            "attributes": {
              "client_id": {
                "type": "string",
                "description": "ID of the client for which the connection is enabled.",
                "description_kind": "markdown",
                "required": true
              },
              "connection_id": {
                "type": "string",
                "description": "ID of the connection on which to enable the client.",
                "description_kind": "markdown",
                "required": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "description": "The name of the connection on which to enable the client.",
                "description_kind": "markdown",
                "computed": true
              },
              "strategy": {
                "type": "string",
                "description": "The strategy of the connection on which to enable the client.",
                "description_kind": "markdown",
                "computed": true
              }
            },
            "description": "With this resource, you can manage enabled clients on a connection.",
            "description_kind": "markdown"
          }
        },
        "auth0_custom_domain": {
          "version": 0,
          "block": {
            "attributes": {
              "custom_client_ip_header": {
                "type": "string",
                "description": "The HTTP header to fetch the client's IP address. Cannot be set on auth0_managed domains.",
                "description_kind": "markdown",
                "optional": true
              },
              "domain": {
                "type": "string",
                "description": "Name of the custom domain.",
                "description_kind": "markdown",
                "required": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "origin_domain_name": {
                "type": "string",
                "description": "Once the configuration status is `ready`, the DNS name of the Auth0 origin server that handles traffic for the custom domain.",
                "description_kind": "markdown",
                "computed": true
              },
              "primary": {
                "type": "bool",
                "description": "Indicates whether this is a primary domain.",
                "description_kind": "markdown",
                "computed": true
              },
              "status": {
                "type": "string",
                "description": "Configuration status for the custom domain. Options include `disabled`, `pending`, `pending_verification`, and `ready`.",
                "description_kind": "markdown",
                "computed": true
              },
              "tls_policy": {
                "type": "string",
                "description": "TLS policy for the custom domain. Available options are: `compatible` or `recommended`. Compatible includes TLS 1.0, 1.1, 1.2, and recommended only includes TLS 1.2. Cannot be set on self_managed domains.",
                "description_kind": "markdown",
                "optional": true,
                "computed": true
              },
              "type": {
                "type": "string",
                "description": "Provisioning type for the custom domain. Options include `auth0_managed_certs` and `self_managed_certs`.",
                "description_kind": "markdown",
                "required": true
              },
              "verification": {
                "type": [
                  "list",
                  [
                    "object",
                    {
                      "methods": [
                        "list",
                        [
                          "map",
                          "string"
                        ]
                      ]
                    }
                  ]
                ],
                "description": "Configuration settings for verification.",
                "description_kind": "markdown",
                "computed": true
              }
            },
            "description": "With Auth0, you can use a custom domain to maintain a consistent user experience. This resource allows you to create and manage a custom domain within your Auth0 tenant.",
            "description_kind": "markdown"
          }
        },
        "auth0_custom_domain_verification": {
          "version": 0,
          "block": {
            "attributes": {
              "cname_api_key": {
                "type": "string",
                "description": "The value of the `cname-api-key` header to send when forwarding requests. Only present if the type of the custom domain is `self_managed_certs` and Terraform originally managed the domain's verification.",
                "description_kind": "markdown",
                "computed": true,
                "sensitive": true
              },
              "custom_domain_id": {
                "type": "string",
                "description": "ID of the custom domain resource.",
                "description_kind": "markdown",
                "required": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "origin_domain_name": {
                "type": "string",
                "description": "The DNS name of the Auth0 origin server that handles traffic for the custom domain.",
                "description_kind": "markdown",
                "computed": true
              }
            },
            "block_types": {
              "timeouts": {
                "nesting_mode": "single",
                "block": {
                  "attributes": {
                    "create": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true
                    }
                  },
                  "description_kind": "plain"
                }
              }
            },
            "description": "With Auth0, you can use a custom domain to maintain a consistent user experience. This is a three-step process; you must configure the custom domain in Auth0, then create a DNS record for the domain, then verify the DNS record in Auth0. This resource allows for automating the verification part of the process.",
            "description_kind": "markdown"
          }
        },
        "auth0_email": {
          "version": 0,
          "block": {
            "attributes": {
              "default_from_address": {
                "type": "string",
                "description": "Email address to use as the sender when no other \"from\" address is specified.",
                "description_kind": "markdown",
                "required": true
              },
              "enabled": {
                "type": "bool",
                "description": "Indicates whether the email provider is enabled.",
                "description_kind": "markdown",
                "optional": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "description": "Name of the email provider. Options include `mailgun`, `mandrill`, `sendgrid`, `ses`, `smtp`, and `sparkpost`.",
                "description_kind": "markdown",
                "required": true
              }
            },
            "block_types": {
              "credentials": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "access_key_id": {
                      "type": "string",
                      "description": "AWS Access Key ID. Used only for AWS.",
                      "description_kind": "markdown",
                      "optional": true,
                      "sensitive": true
                    },
                    "api_key": {
                      "type": "string",
                      "description": "API Key for your email service. Will always be encrypted in our database.",
                      "description_kind": "markdown",
                      "optional": true,
                      "sensitive": true
                    },
                    "api_user": {
                      "type": "string",
                      "description": "API User for your email service.",
                      "description_kind": "markdown",
                      "deprecated": true,
                      "optional": true
                    },
                    "domain": {
                      "type": "string",
                      "description": "Domain name.",
                      "description_kind": "markdown",
                      "optional": true
                    },
                    "region": {
                      "type": "string",
                      "description": "Default region. Used only for AWS, Mailgun, and SparkPost.",
                      "description_kind": "markdown",
                      "optional": true
                    },
                    "secret_access_key": {
                      "type": "string",
                      "description": "AWS Secret Key. Will always be encrypted in our database. Used only for AWS.",
                      "description_kind": "markdown",
                      "optional": true,
                      "sensitive": true
                    },
                    "smtp_host": {
                      "type": "string",
                      "description": "Hostname or IP address of your SMTP server. Used only for SMTP.",
                      "description_kind": "markdown",
                      "optional": true
                    },
                    "smtp_pass": {
                      "type": "string",
                      "description": "SMTP password. Used only for SMTP.",
                      "description_kind": "markdown",
                      "optional": true,
                      "sensitive": true
                    },
                    "smtp_port": {
                      "type": "number",
                      "description": "Port used by your SMTP server. Please avoid using port 25 if possible because many providers have limitations on this port. Used only for SMTP.",
                      "description_kind": "markdown",
                      "optional": true
                    },
                    "smtp_user": {
                      "type": "string",
                      "description": "SMTP username. Used only for SMTP.",
                      "description_kind": "markdown",
                      "optional": true
                    }
                  },
                  "description": "Configuration settings for the credentials for the email provider.",
                  "description_kind": "markdown"
                },
                "min_items": 1,
                "max_items": 1
              },
              "settings": {
                "nesting_mode": "list",
                "block": {
                  "block_types": {
                    "headers": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "x_mc_view_content_link": {
                            "type": "string",
                            "description": "Disable or enable the default View Content Link for sensitive emails.",
                            "description_kind": "markdown",
                            "optional": true
                          },
                          "x_ses_configuration_set": {
                            "type": "string",
                            "description": "SES Configuration set to include when sending emails.",
                            "description_kind": "markdown",
                            "optional": true
                          }
                        },
                        "description": "Headers settings for the `smtp` email provider.",
                        "description_kind": "markdown"
                      },
                      "max_items": 1
                    },
                    "message": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "configuration_set_name": {
                            "type": "string",
                            "description": "Setting for the `ses` email provider. The name of the configuration set to apply to the sent emails.",
                            "description_kind": "markdown",
                            "optional": true
                          },
                          "view_content_link": {
                            "type": "bool",
                            "description": "Setting for the `mandrill` email provider. Set to `true` to see the content of individual emails sent to users.",
                            "description_kind": "markdown",
                            "optional": true
                          }
                        },
                        "description": "Message settings for the `mandrill` or `ses` email provider.",
                        "description_kind": "markdown"
                      },
                      "max_items": 1
                    }
                  },
                  "description": "Specific email provider settings.",
                  "description_kind": "markdown"
                },
                "max_items": 1
              }
            },
            "description": "With Auth0, you can have standard welcome, password reset, and account verification email-based workflows built right into Auth0. This resource allows you to configure email providers, so you can route all emails that are part of Auth0's authentication workflows through the supported high-volume email service of your choice.",
            "description_kind": "markdown"
          }
        },
        "auth0_email_template": {
          "version": 0,
          "block": {
            "attributes": {
              "body": {
                "type": "string",
                "description": "Body of the email template. You can include [common variables](https://auth0.com/docs/customize/email/email-templates#common-variables).",
                "description_kind": "markdown",
                "required": true
              },
              "enabled": {
                "type": "bool",
                "description": "Indicates whether the template is enabled.",
                "description_kind": "markdown",
                "required": true
              },
              "from": {
                "type": "string",
                "description": "Email address to use as the sender. You can include [common variables](https://auth0.com/docs/customize/email/email-templates#common-variables).",
                "description_kind": "markdown",
                "required": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "include_email_in_redirect": {
                "type": "bool",
                "description": "Whether the `reset_email` and `verify_email` templates should include the user's email address as the email parameter in the `returnUrl` (true) or whether no email address should be included in the redirect (false). Defaults to `true`.",
                "description_kind": "markdown",
                "optional": true,
                "computed": true
              },
              "result_url": {
                "type": "string",
                "description": "URL to redirect the user to after a successful action. [Learn more](https://auth0.com/docs/customize/email/email-templates#configure-template-fields).",
                "description_kind": "markdown",
                "optional": true
              },
              "subject": {
                "type": "string",
                "description": "Subject line of the email. You can include [common variables](https://auth0.com/docs/customize/email/email-templates#common-variables).",
                "description_kind": "markdown",
                "required": true
              },
              "syntax": {
                "type": "string",
                "description": "Syntax of the template body. You can use either text or HTML with Liquid syntax.",
                "description_kind": "markdown",
                "required": true
              },
              "template": {
                "type": "string",
                "description": "Template name. Options include `verify_email`, `verify_email_by_code`, `reset_email`, `welcome_email`, `blocked_account`, `stolen_credentials`, `enrollment_email`, `mfa_oob_code`, `user_invitation`, `change_password` (legacy), or `password_reset` (legacy).",
                "description_kind": "markdown",
                "required": true
              },
              "url_lifetime_in_seconds": {
                "type": "number",
                "description": "Number of seconds during which the link within the email will be valid.",
                "description_kind": "markdown",
                "optional": true
              }
            },
            "description": "With Auth0, you can have standard welcome, password reset, and account verification email-based workflows built right into Auth0. This resource allows you to configure email templates to customize the look, feel, and sender identities of emails sent by Auth0. Used in conjunction with configured email providers.",
            "description_kind": "markdown"
          }
        },
        "auth0_global_client": {
          "version": 0,
          "block": {
            "attributes": {
              "allowed_clients": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "List of applications ID's that will be allowed to make delegation request. By default, all applications will be allowed.",
                "description_kind": "markdown",
                "optional": true,
                "computed": true
              },
              "allowed_logout_urls": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "URLs that Auth0 may redirect to after logout.",
                "description_kind": "markdown",
                "optional": true,
                "computed": true
              },
              "allowed_origins": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "URLs that represent valid origins for cross-origin resource sharing. By default, all your callback URLs will be allowed.",
                "description_kind": "markdown",
                "optional": true,
                "computed": true
              },
              "app_type": {
                "type": "string",
                "description": "Type of application the client represents. Possible values are: `native`, `spa`, `regular_web`, `non_interactive`, `sso_integration`. Specific SSO integrations types accepted as well are: `rms`, `box`, `cloudbees`, `concur`, `dropbox`, `mscrm`, `echosign`, `egnyte`, `newrelic`, `office365`, `salesforce`, `sentry`, `sharepoint`, `slack`, `springcm`, `zendesk`, `zoom`.",
                "description_kind": "markdown",
                "optional": true,
                "computed": true
              },
              "callbacks": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "URLs that Auth0 may call back to after a user authenticates for the client. Make sure to specify the protocol (https://) otherwise the callback may fail in some cases. With the exception of custom URI schemes for native clients, all callbacks should use protocol https://.",
                "description_kind": "markdown",
                "optional": true,
                "computed": true
              },
              "client_aliases": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "List of audiences/realms for SAML protocol. Used by the wsfed addon.",
                "description_kind": "markdown",
                "optional": true,
                "computed": true
              },
              "client_id": {
                "type": "string",
                "description": "The ID of the client.",
                "description_kind": "markdown",
                "optional": true,
                "computed": true
              },
              "client_metadata": {
                "type": [
                  "map",
                  "string"
                ],
                "description": "Metadata associated with the client, in the form of an object with string values (max 255 chars). Maximum of 10 metadata properties allowed. Field names (max 255 chars) are alphanumeric and may only include the following special characters: `:,-+=_*?\"/\\()<>@ [Tab] [Space]`.",
                "description_kind": "markdown",
                "optional": true,
                "computed": true
              },
              "client_secret": {
                "type": "string",
                "description": "Secret for the client. Keep this private. To access this attribute you need to add the `read:client_keys` scope to the Terraform client. Otherwise, the attribute will contain an empty string.",
                "description_kind": "markdown",
                "optional": true,
                "computed": true,
                "sensitive": true
              },
              "client_secret_rotation_trigger": {
                "type": [
                  "map",
                  "string"
                ],
                "description": "Custom metadata for the rotation. The contents of this map are arbitrary and are hashed by the provider. When the hash changes, a rotation is triggered. For example, the map could contain the user making the change, the date of the change, and a text reason for the change. For more info: [rotate-client-secret](https://auth0.com/docs/get-started/applications/rotate-client-secret).",
                "description_kind": "markdown",
                "optional": true
              },
              "cross_origin_auth": {
                "type": "bool",
                "description": "Whether this client can be used to make cross-origin authentication requests (`true`) or it is not allowed to make such requests (`false`). Requires the `coa_toggle_enabled` feature flag to be enabled on the tenant by the support team.",
                "description_kind": "markdown",
                "optional": true,
                "computed": true
              },
              "cross_origin_loc": {
                "type": "string",
                "description": "URL of the location in your site where the cross-origin verification takes place for the cross-origin auth flow when performing authentication in your own domain instead of Auth0 Universal Login page.",
                "description_kind": "markdown",
                "optional": true,
                "computed": true
              },
              "custom_login_page": {
                "type": "string",
                "description": "The content (HTML, CSS, JS) of the custom login page.",
                "description_kind": "markdown",
                "optional": true,
                "computed": true
              },
              "custom_login_page_on": {
                "type": "bool",
                "description": "Indicates whether a custom login page is to be used.",
                "description_kind": "markdown",
                "optional": true,
                "computed": true
              },
              "description": {
                "type": "string",
                "description": "Description of the purpose of the client.",
                "description_kind": "markdown",
                "optional": true,
                "computed": true
              },
              "encryption_key": {
                "type": [
                  "map",
                  "string"
                ],
                "description": "Encryption used for WS-Fed responses with this client.",
                "description_kind": "markdown",
                "optional": true,
                "computed": true
              },
              "form_template": {
                "type": "string",
                "description": "HTML form template to be used for WS-Federation.",
                "description_kind": "markdown",
                "optional": true,
                "computed": true
              },
              "grant_types": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "Types of grants that this client is authorized to use.",
                "description_kind": "markdown",
                "optional": true,
                "computed": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "initiate_login_uri": {
                "type": "string",
                "description": "Initiate login URI. Must be HTTPS or an empty string.",
                "description_kind": "markdown",
                "optional": true,
                "computed": true
              },
              "is_first_party": {
                "type": "bool",
                "description": "Indicates whether this client is a first-party client.",
                "description_kind": "markdown",
                "optional": true,
                "computed": true
              },
              "is_token_endpoint_ip_header_trusted": {
                "type": "bool",
                "description": "Indicates whether the token endpoint IP header is trusted.",
                "description_kind": "markdown",
                "optional": true,
                "computed": true
              },
              "logo_uri": {
                "type": "string",
                "description": "URL of the logo for the client. Recommended size is 150px x 150px. If none is set, the default badge for the application type will be shown.",
                "description_kind": "markdown",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "description": "Name of the client.",
                "description_kind": "markdown",
                "optional": true,
                "computed": true
              },
              "oidc_conformant": {
                "type": "bool",
                "description": "Indicates whether this client will conform to strict OIDC specifications.",
                "description_kind": "markdown",
                "optional": true,
                "computed": true
              },
              "organization_require_behavior": {
                "type": "string",
                "description": "Defines how to proceed during an authentication transaction when `organization_usage = \"require\"`. Can be `no_prompt` (default) or `pre_login_prompt`.",
                "description_kind": "markdown",
                "optional": true,
                "computed": true
              },
              "organization_usage": {
                "type": "string",
                "description": "Defines how to proceed during an authentication transaction with regards to an organization. Can be `deny` (default), `allow` or `require`.",
                "description_kind": "markdown",
                "optional": true,
                "computed": true
              },
              "signing_keys": {
                "type": [
                  "list",
                  [
                    "map",
                    "string"
                  ]
                ],
                "description": "List containing a map of the public cert of the signing key and the public cert of the signing key in PKCS7.",
                "description_kind": "markdown",
                "optional": true,
                "computed": true,
                "sensitive": true
              },
              "sso": {
                "type": "bool",
                "description": "Applies only to SSO clients and determines whether Auth0 will handle Single Sign-On (true) or whether the identity provider will (false).",
                "description_kind": "markdown",
                "optional": true,
                "computed": true
              },
              "sso_disabled": {
                "type": "bool",
                "description": "Indicates whether or not SSO is disabled.",
                "description_kind": "markdown",
                "optional": true,
                "computed": true
              },
              "token_endpoint_auth_method": {
                "type": "string",
                "description": "Defines the requested authentication method for the token endpoint. Options include `none` (public client without a client secret), `client_secret_post` (client uses HTTP POST parameters), `client_secret_basic` (client uses HTTP Basic).",
                "description_kind": "markdown",
                "optional": true,
                "computed": true
              },
              "web_origins": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "URLs that represent valid web origins for use with web message response mode.",
                "description_kind": "markdown",
                "optional": true,
                "computed": true
              }
            },
            "block_types": {
              "addons": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "aws": {
                      "type": [
                        "map",
                        "string"
                      ],
                      "description_kind": "plain",
                      "optional": true
                    },
                    "azure_blob": {
                      "type": [
                        "map",
                        "string"
                      ],
                      "description_kind": "plain",
                      "optional": true
                    },
                    "azure_sb": {
                      "type": [
                        "map",
                        "string"
                      ],
                      "description_kind": "plain",
                      "optional": true
                    },
                    "box": {
                      "type": [
                        "map",
                        "string"
                      ],
                      "description_kind": "plain",
                      "optional": true
                    },
                    "cloudbees": {
                      "type": [
                        "map",
                        "string"
                      ],
                      "description_kind": "plain",
                      "optional": true
                    },
                    "concur": {
                      "type": [
                        "map",
                        "string"
                      ],
                      "description_kind": "plain",
                      "optional": true
                    },
                    "dropbox": {
                      "type": [
                        "map",
                        "string"
                      ],
                      "description_kind": "plain",
                      "optional": true
                    },
                    "echosign": {
                      "type": [
                        "map",
                        "string"
                      ],
                      "description_kind": "plain",
                      "optional": true
                    },
                    "egnyte": {
                      "type": [
                        "map",
                        "string"
                      ],
                      "description_kind": "plain",
                      "optional": true
                    },
                    "firebase": {
                      "type": [
                        "map",
                        "string"
                      ],
                      "description_kind": "plain",
                      "optional": true
                    },
                    "layer": {
                      "type": [
                        "map",
                        "string"
                      ],
                      "description_kind": "plain",
                      "optional": true
                    },
                    "mscrm": {
                      "type": [
                        "map",
                        "string"
                      ],
                      "description_kind": "plain",
                      "optional": true
                    },
                    "newrelic": {
                      "type": [
                        "map",
                        "string"
                      ],
                      "description_kind": "plain",
                      "optional": true
                    },
                    "office365": {
                      "type": [
                        "map",
                        "string"
                      ],
                      "description_kind": "plain",
                      "optional": true
                    },
                    "rms": {
                      "type": [
                        "map",
                        "string"
                      ],
                      "description_kind": "plain",
                      "optional": true
                    },
                    "salesforce": {
                      "type": [
                        "map",
                        "string"
                      ],
                      "description_kind": "plain",
                      "optional": true
                    },
                    "salesforce_api": {
                      "type": [
                        "map",
                        "string"
                      ],
                      "description_kind": "plain",
                      "optional": true
                    },
                    "salesforce_sandbox_api": {
                      "type": [
                        "map",
                        "string"
                      ],
                      "description_kind": "plain",
                      "optional": true
                    },
                    "sap_api": {
                      "type": [
                        "map",
                        "string"
                      ],
                      "description_kind": "plain",
                      "optional": true
                    },
                    "sentry": {
                      "type": [
                        "map",
                        "string"
                      ],
                      "description_kind": "plain",
                      "optional": true
                    },
                    "sharepoint": {
                      "type": [
                        "map",
                        "string"
                      ],
                      "description_kind": "plain",
                      "optional": true
                    },
                    "slack": {
                      "type": [
                        "map",
                        "string"
                      ],
                      "description_kind": "plain",
                      "optional": true
                    },
                    "springcm": {
                      "type": [
                        "map",
                        "string"
                      ],
                      "description_kind": "plain",
                      "optional": true
                    },
                    "wams": {
                      "type": [
                        "map",
                        "string"
                      ],
                      "description_kind": "plain",
                      "optional": true
                    },
                    "wsfed": {
                      "type": [
                        "map",
                        "string"
                      ],
                      "description": "WS-Fed (WIF) addon indicator. Actual configuration is stored in callback and `client_aliases` properties on the client.",
                      "description_kind": "markdown",
                      "optional": true
                    },
                    "zendesk": {
                      "type": [
                        "map",
                        "string"
                      ],
                      "description_kind": "plain",
                      "optional": true
                    },
                    "zoom": {
                      "type": [
                        "map",
                        "string"
                      ],
                      "description_kind": "plain",
                      "optional": true
                    }
                  },
                  "block_types": {
                    "samlp": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "audience": {
                            "type": "string",
                            "description": "Audience of the SAML Assertion. Default will be the Issuer on SAMLRequest.",
                            "description_kind": "markdown",
                            "optional": true
                          },
                          "authn_context_class_ref": {
                            "type": "string",
                            "description": "Class reference of the authentication context.",
                            "description_kind": "markdown",
                            "optional": true
                          },
                          "binding": {
                            "type": "string",
                            "description": "Protocol binding used for SAML logout responses.",
                            "description_kind": "markdown",
                            "optional": true
                          },
                          "create_upn_claim": {
                            "type": "bool",
                            "description": "Indicates whether a UPN claim should be created. Defaults to `true`.",
                            "description_kind": "markdown",
                            "optional": true
                          },
                          "destination": {
                            "type": "string",
                            "description": "Destination of the SAML Response. If not specified, it will be `AssertionConsumerUrl` of SAMLRequest or callback URL if there was no SAMLRequest.",
                            "description_kind": "markdown",
                            "optional": true
                          },
                          "digest_algorithm": {
                            "type": "string",
                            "description": "Algorithm used to calculate the digest of the SAML Assertion or response. Options include `sha1` and `sha256`. Defaults to `sha1`.",
                            "description_kind": "markdown",
                            "optional": true
                          },
                          "include_attribute_name_format": {
                            "type": "bool",
                            "description": "Indicates whether or not we should infer the NameFormat based on the attribute name. If set to false, the attribute NameFormat is not set in the assertion. Defaults to `true`.",
                            "description_kind": "markdown",
                            "optional": true
                          },
                          "issuer": {
                            "type": "string",
                            "description": "Issuer of the SAML Assertion.",
                            "description_kind": "markdown",
                            "optional": true
                          },
                          "lifetime_in_seconds": {
                            "type": "number",
                            "description": "Number of seconds during which the token is valid.",
                            "description_kind": "markdown",
                            "optional": true
                          },
                          "logout": {
                            "type": [
                              "map",
                              "string"
                            ],
                            "description": "Configuration settings for logout.",
                            "description_kind": "markdown",
                            "optional": true
                          },
                          "map_identities": {
                            "type": "bool",
                            "description": "Indicates whether or not to add additional identity information in the token, such as the provider used and the `access_token`, if available. Defaults to `true`.",
                            "description_kind": "markdown",
                            "optional": true
                          },
                          "map_unknown_claims_as_is": {
                            "type": "bool",
                            "description": "Indicates whether to add a prefix of `http://schema.auth0.com` to any claims that are not mapped to the common profile when passed through in the output assertion. Defaults to `false`.",
                            "description_kind": "markdown",
                            "optional": true
                          },
                          "mappings": {
                            "type": [
                              "map",
                              "string"
                            ],
                            "description": "Mappings between the Auth0 user profile property name (`name`) and the output attributes on the SAML attribute in the assertion (`value`).",
                            "description_kind": "markdown",
                            "optional": true
                          },
                          "name_identifier_format": {
                            "type": "string",
                            "description": "Format of the name identifier.",
                            "description_kind": "markdown",
                            "optional": true
                          },
                          "name_identifier_probes": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description": "Attributes that can be used for Subject/NameID. Auth0 will try each of the attributes of this array in order and use the first value it finds.",
                            "description_kind": "markdown",
                            "optional": true
                          },
                          "passthrough_claims_with_no_mapping": {
                            "type": "bool",
                            "description": "Indicates whether or not to passthrough claims that are not mapped to the common profile in the output assertion. Defaults to `true`.",
                            "description_kind": "markdown",
                            "optional": true
                          },
                          "recipient": {
                            "type": "string",
                            "description": "Recipient of the SAML Assertion (SubjectConfirmationData). Default is `AssertionConsumerUrl` on SAMLRequest or callback URL if no SAMLRequest was sent.",
                            "description_kind": "markdown",
                            "optional": true
                          },
                          "sign_response": {
                            "type": "bool",
                            "description": "Indicates whether or not the SAML Response should be signed instead of the SAML Assertion.",
                            "description_kind": "markdown",
                            "optional": true
                          },
                          "signature_algorithm": {
                            "type": "string",
                            "description": "Algorithm used to sign the SAML Assertion or response. Options include `rsa-sha1` and `rsa-sha256`. Defaults to `rsa-sha1`.",
                            "description_kind": "markdown",
                            "optional": true
                          },
                          "signing_cert": {
                            "type": "string",
                            "description": "Optionally indicates the public key certificate used to validate SAML requests. If set, SAML requests will be required to be signed. A sample value would be `-----BEGIN PUBLIC KEY-----\\nMIGf...bpP/t3\\n+JGNGIRMj1hF1rnb6QIDAQAB\\n-----END PUBLIC KEY-----\\n`.",
                            "description_kind": "markdown",
                            "optional": true
                          },
                          "typed_attributes": {
                            "type": "bool",
                            "description": "Indicates whether or not we should infer the `xs:type` of the element. Types include `xs:string`, `xs:boolean`, `xs:double`, and `xs:anyType`. When set to false, all `xs:type` are `xs:anyType`. Defaults to `true`.",
                            "description_kind": "markdown",
                            "optional": true
                          }
                        },
                        "description": "Configuration settings for a SAML add-on.",
                        "description_kind": "markdown"
                      },
                      "max_items": 1
                    }
                  },
                  "description": "Addons enabled for this client and their associated configurations.",
                  "description_kind": "markdown"
                },
                "max_items": 1
              },
              "jwt_configuration": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "alg": {
                      "type": "string",
                      "description": "Algorithm used to sign JWTs.",
                      "description_kind": "markdown",
                      "optional": true
                    },
                    "lifetime_in_seconds": {
                      "type": "number",
                      "description": "Number of seconds during which the JWT will be valid.",
                      "description_kind": "markdown",
                      "optional": true,
                      "computed": true
                    },
                    "scopes": {
                      "type": [
                        "map",
                        "string"
                      ],
                      "description": "Permissions (scopes) included in JWTs.",
                      "description_kind": "markdown",
                      "optional": true
                    },
                    "secret_encoded": {
                      "type": "bool",
                      "description": "Indicates whether the client secret is Base64-encoded.",
                      "description_kind": "markdown",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "description": "Configuration settings for the JWTs issued for this client.",
                  "description_kind": "markdown"
                },
                "max_items": 1
              },
              "mobile": {
                "nesting_mode": "list",
                "block": {
                  "block_types": {
                    "android": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "app_package_name": {
                            "type": "string",
                            "description_kind": "plain",
                            "optional": true
                          },
                          "sha256_cert_fingerprints": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description_kind": "plain",
                            "optional": true
                          }
                        },
                        "description": "Configuration settings for Android native apps.",
                        "description_kind": "markdown"
                      },
                      "max_items": 1
                    },
                    "ios": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "app_bundle_identifier": {
                            "type": "string",
                            "description_kind": "plain",
                            "optional": true
                          },
                          "team_id": {
                            "type": "string",
                            "description_kind": "plain",
                            "optional": true
                          }
                        },
                        "description": "Configuration settings for i0S native apps.",
                        "description_kind": "markdown"
                      },
                      "max_items": 1
                    }
                  },
                  "description": "Additional configuration for native mobile apps.",
                  "description_kind": "markdown"
                },
                "max_items": 1
              },
              "native_social_login": {
                "nesting_mode": "list",
                "block": {
                  "block_types": {
                    "apple": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "enabled": {
                            "type": "bool",
                            "description_kind": "plain",
                            "optional": true
                          }
                        },
                        "description_kind": "plain"
                      },
                      "max_items": 1
                    },
                    "facebook": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "enabled": {
                            "type": "bool",
                            "description_kind": "plain",
                            "optional": true
                          }
                        },
                        "description_kind": "plain"
                      },
                      "max_items": 1
                    }
                  },
                  "description": "Configuration settings to toggle native social login for mobile native applications. Once this is set it must stay set, with both resources set to `false` in order to change the `app_type`.",
                  "description_kind": "markdown"
                },
                "max_items": 1
              },
              "refresh_token": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "expiration_type": {
                      "type": "string",
                      "description": "Options include `expiring`, `non-expiring`. Whether a refresh token will expire based on an absolute lifetime, after which the token can no longer be used. If rotation is `rotating`, this must be set to `expiring`.",
                      "description_kind": "markdown",
                      "required": true
                    },
                    "idle_token_lifetime": {
                      "type": "number",
                      "description": "The time in seconds after which inactive refresh tokens will expire.",
                      "description_kind": "markdown",
                      "optional": true,
                      "computed": true
                    },
                    "infinite_idle_token_lifetime": {
                      "type": "bool",
                      "description": "Whether inactive refresh tokens should remain valid indefinitely.",
                      "description_kind": "markdown",
                      "optional": true,
                      "computed": true
                    },
                    "infinite_token_lifetime": {
                      "type": "bool",
                      "description": "Whether refresh tokens should remain valid indefinitely. If false, `token_lifetime` should also be set.",
                      "description_kind": "markdown",
                      "optional": true,
                      "computed": true
                    },
                    "leeway": {
                      "type": "number",
                      "description": "The amount of time in seconds in which a refresh token may be reused without triggering reuse detection.",
                      "description_kind": "markdown",
                      "optional": true,
                      "computed": true
                    },
                    "rotation_type": {
                      "type": "string",
                      "description": "Options include `rotating`, `non-rotating`. When `rotating`, exchanging a refresh token will cause a new refresh token to be issued and the existing token will be invalidated. This allows for automatic detection of token reuse if the token is leaked.",
                      "description_kind": "markdown",
                      "required": true
                    },
                    "token_lifetime": {
                      "type": "number",
                      "description": "The absolute lifetime of a refresh token in seconds.",
                      "description_kind": "markdown",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "description": "Configuration settings for the refresh tokens issued for this client.",
                  "description_kind": "markdown"
                },
                "max_items": 1
              }
            },
            "description": "Use a tenant's global Auth0 Application client.",
            "description_kind": "markdown"
          }
        },
        "auth0_guardian": {
          "version": 0,
          "block": {
            "attributes": {
              "email": {
                "type": "bool",
                "description": "Indicates whether email MFA is enabled.",
                "description_kind": "markdown",
                "optional": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "otp": {
                "type": "bool",
                "description": "Indicates whether one time password MFA is enabled.",
                "description_kind": "markdown",
                "optional": true
              },
              "policy": {
                "type": "string",
                "description": "Policy to use. Available options are `never`, `all-applications` and `confidence-score`.",
                "description_kind": "markdown",
                "required": true
              },
              "recovery_code": {
                "type": "bool",
                "description": "Indicates whether recovery code MFA is enabled.",
                "description_kind": "markdown",
                "optional": true
              }
            },
            "block_types": {
              "duo": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "enabled": {
                      "type": "bool",
                      "description": "Indicates whether Duo MFA is enabled.",
                      "description_kind": "markdown",
                      "required": true
                    },
                    "hostname": {
                      "type": "string",
                      "description": "Duo API Hostname, see the Duo documentation for more details on Duo setup.",
                      "description_kind": "markdown",
                      "optional": true
                    },
                    "integration_key": {
                      "type": "string",
                      "description": "Duo client ID, see the Duo documentation for more details on Duo setup.",
                      "description_kind": "markdown",
                      "optional": true
                    },
                    "secret_key": {
                      "type": "string",
                      "description": "Duo client secret, see the Duo documentation for more details on Duo setup.",
                      "description_kind": "markdown",
                      "optional": true,
                      "sensitive": true
                    }
                  },
                  "description": "Configuration settings for the Duo MFA. If this block is present, Duo MFA will be enabled, and disabled otherwise.",
                  "description_kind": "markdown"
                },
                "max_items": 1
              },
              "phone": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "enabled": {
                      "type": "bool",
                      "description": "Indicates whether Phone MFA is enabled.",
                      "description_kind": "markdown",
                      "required": true
                    },
                    "message_types": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "description": "Message types to use, array of `sms` and/or `voice`. Adding both to the array should enable the user to choose.",
                      "description_kind": "markdown",
                      "optional": true
                    },
                    "provider": {
                      "type": "string",
                      "description": "Provider to use, one of `auth0`, `twilio` or `phone-message-hook`. Selecting `phone-message-hook` will require a Phone Message Action to be created before. [Learn how](https://auth0.com/docs/customize/actions/flows-and-triggers/send-phone-message-flow).",
                      "description_kind": "markdown",
                      "optional": true
                    }
                  },
                  "block_types": {
                    "options": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "auth_token": {
                            "type": "string",
                            "description": "AuthToken for your Twilio account.",
                            "description_kind": "markdown",
                            "optional": true,
                            "sensitive": true
                          },
                          "enrollment_message": {
                            "type": "string",
                            "description": "This message will be sent whenever a user enrolls a new device for the first time using MFA. Supports Liquid syntax, see [Auth0 docs](https://auth0.com/docs/customize/customize-sms-or-voice-messages).",
                            "description_kind": "markdown",
                            "optional": true
                          },
                          "from": {
                            "type": "string",
                            "description": "Phone number to use as the sender.",
                            "description_kind": "markdown",
                            "optional": true
                          },
                          "messaging_service_sid": {
                            "type": "string",
                            "description": "Messaging service SID.",
                            "description_kind": "markdown",
                            "optional": true
                          },
                          "sid": {
                            "type": "string",
                            "description": "SID for your Twilio account.",
                            "description_kind": "markdown",
                            "optional": true
                          },
                          "verification_message": {
                            "type": "string",
                            "description": "This message will be sent whenever a user logs in after the enrollment. Supports Liquid syntax, see [Auth0 docs](https://auth0.com/docs/customize/customize-sms-or-voice-messages).",
                            "description_kind": "markdown",
                            "optional": true
                          }
                        },
                        "description": "Options for the various providers.",
                        "description_kind": "markdown"
                      },
                      "max_items": 1
                    }
                  },
                  "description": "Configuration settings for the phone MFA. If this block is present, Phone MFA will be enabled, and disabled otherwise.",
                  "description_kind": "markdown"
                },
                "max_items": 1
              },
              "push": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "enabled": {
                      "type": "bool",
                      "description": "Indicates whether Push MFA is enabled.",
                      "description_kind": "markdown",
                      "required": true
                    },
                    "provider": {
                      "type": "string",
                      "description": "Provider to use, one of `direct`, `guardian`, `sns`.",
                      "description_kind": "markdown",
                      "optional": true
                    }
                  },
                  "block_types": {
                    "amazon_sns": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "aws_access_key_id": {
                            "type": "string",
                            "description": "Your AWS Access Key ID.",
                            "description_kind": "markdown",
                            "required": true
                          },
                          "aws_region": {
                            "type": "string",
                            "description": "Your AWS application's region.",
                            "description_kind": "markdown",
                            "required": true
                          },
                          "aws_secret_access_key": {
                            "type": "string",
                            "description": "Your AWS Secret Access Key.",
                            "description_kind": "markdown",
                            "required": true,
                            "sensitive": true
                          },
                          "sns_apns_platform_application_arn": {
                            "type": "string",
                            "description": "The Amazon Resource Name for your Apple Push Notification Service.",
                            "description_kind": "markdown",
                            "required": true
                          },
                          "sns_gcm_platform_application_arn": {
                            "type": "string",
                            "description": "The Amazon Resource Name for your Firebase Cloud Messaging Service.",
                            "description_kind": "markdown",
                            "required": true
                          }
                        },
                        "description": "Configuration for Amazon SNS.",
                        "description_kind": "markdown"
                      },
                      "max_items": 1
                    },
                    "custom_app": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "app_name": {
                            "type": "string",
                            "description": "Custom Application Name.",
                            "description_kind": "markdown",
                            "optional": true
                          },
                          "apple_app_link": {
                            "type": "string",
                            "description": "Apple App Store URL. Must be HTTPS or an empty string.",
                            "description_kind": "markdown",
                            "optional": true
                          },
                          "google_app_link": {
                            "type": "string",
                            "description": "Google Store URL. Must be HTTPS or an empty string.",
                            "description_kind": "markdown",
                            "optional": true
                          }
                        },
                        "description": "Configuration for the Guardian Custom App.",
                        "description_kind": "markdown"
                      },
                      "max_items": 1
                    },
                    "direct_apns": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "bundle_id": {
                            "type": "string",
                            "description": "The Apple Push Notification service Bundle ID.",
                            "description_kind": "markdown",
                            "required": true
                          },
                          "enabled": {
                            "type": "bool",
                            "description": "Indicates whether the Apple Push Notification service is enabled.",
                            "description_kind": "markdown",
                            "optional": true,
                            "computed": true
                          },
                          "p12": {
                            "type": "string",
                            "description": "The base64 encoded certificate in P12 format.",
                            "description_kind": "markdown",
                            "required": true,
                            "sensitive": true
                          },
                          "sandbox": {
                            "type": "bool",
                            "description": "Set to true to use the sandbox iOS app environment, otherwise set to false to use the production iOS app environment.",
                            "description_kind": "markdown",
                            "required": true
                          }
                        },
                        "description": "Configuration for the Apple Push Notification service (APNs) settings.",
                        "description_kind": "markdown"
                      },
                      "max_items": 1
                    },
                    "direct_fcm": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "server_key": {
                            "type": "string",
                            "description": "The Firebase Cloud Messaging Server Key. For security purposes, we don’t retrieve your existing FCM server key to check for drift.",
                            "description_kind": "markdown",
                            "required": true,
                            "sensitive": true
                          }
                        },
                        "description": "Configuration for Firebase Cloud Messaging (FCM) settings.",
                        "description_kind": "markdown"
                      },
                      "max_items": 1
                    }
                  },
                  "description": "Configuration settings for the Push MFA. If this block is present, Push MFA will be enabled, and disabled otherwise.",
                  "description_kind": "markdown"
                },
                "max_items": 1
              },
              "webauthn_platform": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "enabled": {
                      "type": "bool",
                      "description": "Indicates whether WebAuthn with FIDO Device Biometrics MFA is enabled.",
                      "description_kind": "markdown",
                      "required": true
                    },
                    "override_relying_party": {
                      "type": "bool",
                      "description": "The Relying Party is the domain for which the WebAuthn keys will be issued, set to `true` if you are customizing the identifier.",
                      "description_kind": "markdown",
                      "optional": true,
                      "computed": true
                    },
                    "relying_party_identifier": {
                      "type": "string",
                      "description": "The Relying Party should be a suffix of the custom domain.",
                      "description_kind": "markdown",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "description": "Configuration settings for the WebAuthn with FIDO Device Biometrics MFA. If this block is present, WebAuthn with FIDO Device Biometrics MFA will be enabled, and disabled otherwise.",
                  "description_kind": "markdown"
                },
                "max_items": 1
              },
              "webauthn_roaming": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "enabled": {
                      "type": "bool",
                      "description": "Indicates whether WebAuthn with FIDO Security Keys MFA is enabled.",
                      "description_kind": "markdown",
                      "required": true
                    },
                    "override_relying_party": {
                      "type": "bool",
                      "description": "The Relying Party is the domain for which the WebAuthn keys will be issued, set to `true` if you are customizing the identifier.",
                      "description_kind": "markdown",
                      "optional": true,
                      "computed": true
                    },
                    "relying_party_identifier": {
                      "type": "string",
                      "description": "The Relying Party should be a suffix of the custom domain.",
                      "description_kind": "markdown",
                      "optional": true,
                      "computed": true
                    },
                    "user_verification": {
                      "type": "string",
                      "description": "User verification, one of `discouraged`, `preferred` or `required`.",
                      "description_kind": "markdown",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "description": "Configuration settings for the WebAuthn with FIDO Security Keys MFA. If this block is present, WebAuthn with FIDO Security Keys MFA will be enabled, and disabled otherwise.",
                  "description_kind": "markdown"
                },
                "max_items": 1
              }
            },
            "description": "Multi-Factor Authentication works by requiring additional factors during the login process to prevent unauthorized access. With this resource you can configure some options available for MFA.",
            "description_kind": "markdown"
          }
        },
        "auth0_hook": {
          "version": 0,
          "block": {
            "attributes": {
              "dependencies": {
                "type": [
                  "map",
                  "string"
                ],
                "description": "Dependencies of this hook used by the WebTask server.",
                "description_kind": "markdown",
                "optional": true
              },
              "enabled": {
                "type": "bool",
                "description": "Whether the hook is enabled, or disabled.",
                "description_kind": "markdown",
                "optional": true,
                "computed": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "description": "Name of this hook.",
                "description_kind": "markdown",
                "required": true
              },
              "script": {
                "type": "string",
                "description": "Code to be executed when this hook runs.",
                "description_kind": "markdown",
                "required": true
              },
              "secrets": {
                "type": [
                  "map",
                  "string"
                ],
                "description": "The secrets associated with the hook.",
                "description_kind": "markdown",
                "optional": true,
                "sensitive": true
              },
              "trigger_id": {
                "type": "string",
                "description": "Execution stage of this rule. Can be credentials-exchange, pre-user-registration, post-user-registration, post-change-password, or send-phone-message.",
                "description_kind": "markdown",
                "required": true
              }
            },
            "description": "Hooks are secure, self-contained functions that allow you to customize the behavior of Auth0 when executed for selected extensibility points of the Auth0 platform. Auth0 invokes Hooks during runtime to execute your custom Node.js code. Depending on the extensibility point, you can use Hooks with Database Connections and/or Passwordless Connections.",
            "description_kind": "markdown"
          }
        },
        "auth0_log_stream": {
          "version": 0,
          "block": {
            "attributes": {
              "filters": {
                "type": [
                  "list",
                  [
                    "map",
                    "string"
                  ]
                ],
                "description": "Only logs events matching these filters will be delivered by the stream. If omitted or empty, all events will be delivered.",
                "description_kind": "markdown",
                "optional": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "description": "Name of the log stream.",
                "description_kind": "markdown",
                "required": true
              },
              "status": {
                "type": "string",
                "description": "The current status of the log stream. Options are \"active\", \"paused\", \"suspended\".",
                "description_kind": "markdown",
                "optional": true,
                "computed": true
              },
              "type": {
                "type": "string",
                "description": "Type of the log stream, which indicates the sink provider. Options include: `eventbridge`, `eventgrid`, `http`, `datadog`, `splunk`, `sumo`, `mixpanel`, `segment`.",
                "description_kind": "markdown",
                "required": true
              }
            },
            "block_types": {
              "sink": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "aws_account_id": {
                      "type": "string",
                      "description": "The AWS Account ID.",
                      "description_kind": "markdown",
                      "optional": true
                    },
                    "aws_partner_event_source": {
                      "type": "string",
                      "description": "Name of the Partner Event Source to be used with AWS. Generally generated by Auth0 and passed to AWS, so this should be an output attribute.",
                      "description_kind": "markdown",
                      "optional": true,
                      "computed": true
                    },
                    "aws_region": {
                      "type": "string",
                      "description": "The AWS Region, e.g. \"us-east-2\").",
                      "description_kind": "markdown",
                      "optional": true
                    },
                    "azure_partner_topic": {
                      "type": "string",
                      "description": "Name of the Partner Topic to be used with Azure. Generally should not be specified.",
                      "description_kind": "markdown",
                      "optional": true,
                      "computed": true
                    },
                    "azure_region": {
                      "type": "string",
                      "description": "The Azure region code, e.g. \"ne\")",
                      "description_kind": "markdown",
                      "optional": true
                    },
                    "azure_resource_group": {
                      "type": "string",
                      "description": "The Azure EventGrid resource group which allows you to manage all Azure assets within one subscription.",
                      "description_kind": "markdown",
                      "optional": true
                    },
                    "azure_subscription_id": {
                      "type": "string",
                      "description": "The unique alphanumeric string that identifies your Azure subscription.",
                      "description_kind": "markdown",
                      "optional": true
                    },
                    "datadog_api_key": {
                      "type": "string",
                      "description": "The Datadog API key.",
                      "description_kind": "markdown",
                      "optional": true,
                      "sensitive": true
                    },
                    "datadog_region": {
                      "type": "string",
                      "description": "The Datadog region. Options are [\"us\", \"eu\", \"us3\", \"us5\"].",
                      "description_kind": "markdown",
                      "optional": true
                    },
                    "http_authorization": {
                      "type": "string",
                      "description": "Sent in the HTTP \"Authorization\" header with each request.",
                      "description_kind": "markdown",
                      "optional": true,
                      "sensitive": true
                    },
                    "http_content_format": {
                      "type": "string",
                      "description": "The format of data sent over HTTP. Options are \"JSONLINES\", \"JSONARRAY\" or \"JSONOBJECT\"",
                      "description_kind": "markdown",
                      "optional": true
                    },
                    "http_content_type": {
                      "type": "string",
                      "description": "The \"Content-Type\" header to send over HTTP. Common value is \"application/json\".",
                      "description_kind": "markdown",
                      "optional": true
                    },
                    "http_custom_headers": {
                      "type": [
                        "list",
                        [
                          "map",
                          "string"
                        ]
                      ],
                      "description": "Additional HTTP headers to be included as part of the HTTP request.",
                      "description_kind": "markdown",
                      "optional": true
                    },
                    "http_endpoint": {
                      "type": "string",
                      "description": "The HTTP endpoint to send streaming logs.",
                      "description_kind": "markdown",
                      "optional": true
                    },
                    "mixpanel_project_id": {
                      "type": "string",
                      "description": "The Mixpanel project ID, found on the Project Settings page.",
                      "description_kind": "markdown",
                      "optional": true
                    },
                    "mixpanel_region": {
                      "type": "string",
                      "description": "The Mixpanel region. Options are [\"us\", \"eu\"]. EU is required for customers with EU data residency requirements.",
                      "description_kind": "markdown",
                      "optional": true
                    },
                    "mixpanel_service_account_password": {
                      "type": "string",
                      "description": "The Mixpanel Service Account password.",
                      "description_kind": "markdown",
                      "optional": true,
                      "sensitive": true
                    },
                    "mixpanel_service_account_username": {
                      "type": "string",
                      "description": "The Mixpanel Service Account username. Services Accounts can be created in the Project Settings page.",
                      "description_kind": "markdown",
                      "optional": true
                    },
                    "segment_write_key": {
                      "type": "string",
                      "description": "The [Segment Write Key](https://segment.com/docs/connections/find-writekey/).",
                      "description_kind": "markdown",
                      "optional": true,
                      "sensitive": true
                    },
                    "splunk_domain": {
                      "type": "string",
                      "description": "The Splunk domain name.",
                      "description_kind": "markdown",
                      "optional": true
                    },
                    "splunk_port": {
                      "type": "string",
                      "description": "The Splunk port.",
                      "description_kind": "markdown",
                      "optional": true
                    },
                    "splunk_secure": {
                      "type": "bool",
                      "description": "This toggle should be turned off when using self-signed certificates.",
                      "description_kind": "markdown",
                      "optional": true
                    },
                    "splunk_token": {
                      "type": "string",
                      "description": "The Splunk access token.",
                      "description_kind": "markdown",
                      "optional": true,
                      "sensitive": true
                    },
                    "sumo_source_address": {
                      "type": "string",
                      "description": "Generated URL for your defined HTTP source in Sumo Logic for collecting streaming data from Auth0.",
                      "description_kind": "markdown",
                      "optional": true
                    }
                  },
                  "description": "The sink configuration for the log stream.",
                  "description_kind": "markdown"
                },
                "min_items": 1,
                "max_items": 1
              }
            },
            "description": "With this resource, you can manage your Auth0 log streams.",
            "description_kind": "markdown"
          }
        },
        "auth0_organization": {
          "version": 0,
          "block": {
            "attributes": {
              "display_name": {
                "type": "string",
                "description": "Friendly name of this organization.",
                "description_kind": "markdown",
                "optional": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "metadata": {
                "type": [
                  "map",
                  "string"
                ],
                "description": "Metadata associated with the organization. Maximum of 10 metadata properties allowed.",
                "description_kind": "markdown",
                "optional": true
              },
              "name": {
                "type": "string",
                "description": "The name of this organization.",
                "description_kind": "markdown",
                "required": true
              }
            },
            "block_types": {
              "branding": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "colors": {
                      "type": [
                        "map",
                        "string"
                      ],
                      "description": "Color scheme used to customize the login pages.",
                      "description_kind": "markdown",
                      "optional": true
                    },
                    "logo_url": {
                      "type": "string",
                      "description": "URL of logo to display on login page.",
                      "description_kind": "markdown",
                      "optional": true
                    }
                  },
                  "description": "Defines how to style the login pages.",
                  "description_kind": "markdown"
                },
                "max_items": 1
              }
            },
            "description": "The Organizations feature represents a broad update to the Auth0 platform that allows our business-to-business (B2B) customers to better manage their partners and customers, and to customize the ways that end-users access their applications. Auth0 customers can use Organizations to:\n\n  - Represent their business customers and partners in Auth0 and manage their\n    membership.\n  - Configure branded, federated login flows for each business.\n  - Build administration capabilities into their products, using Organizations\n    APIs, so that those businesses can manage their own organizations.",
            "description_kind": "markdown"
          }
        },
        "auth0_organization_connection": {
          "version": 0,
          "block": {
            "attributes": {
              "assign_membership_on_login": {
                "type": "bool",
                "description": "When true, all users that log in with this connection will be automatically granted membership in the organization. When false, users must be granted membership in the organization before logging in with this connection.",
                "description_kind": "markdown",
                "optional": true
              },
              "connection_id": {
                "type": "string",
                "description": "The ID of the connection to enable for the organization.",
                "description_kind": "markdown",
                "required": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "description": "The name of the enabled connection.",
                "description_kind": "markdown",
                "computed": true
              },
              "organization_id": {
                "type": "string",
                "description": "The ID of the organization to enable the connection for.",
                "description_kind": "markdown",
                "required": true
              },
              "strategy": {
                "type": "string",
                "description": "The strategy of the enabled connection.",
                "description_kind": "markdown",
                "computed": true
              }
            },
            "description": "With this resource, you can manage enabled connections on an organization.",
            "description_kind": "markdown"
          }
        },
        "auth0_organization_member": {
          "version": 0,
          "block": {
            "attributes": {
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "organization_id": {
                "type": "string",
                "description": "The ID of the organization to assign the member to.",
                "description_kind": "markdown",
                "required": true
              },
              "roles": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "The role ID(s) to assign to the organization member.",
                "description_kind": "markdown",
                "optional": true
              },
              "user_id": {
                "type": "string",
                "description": "ID of the user to add as an organization member.",
                "description_kind": "markdown",
                "required": true
              }
            },
            "description": "This resource is used to manage the assignment of members and their roles within an organization.",
            "description_kind": "markdown"
          }
        },
        "auth0_prompt": {
          "version": 0,
          "block": {
            "attributes": {
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "identifier_first": {
                "type": "bool",
                "description": "Indicates whether the identifier first is used when using the new Universal Login experience.",
                "description_kind": "markdown",
                "optional": true
              },
              "universal_login_experience": {
                "type": "string",
                "description": "Which login experience to use. Options include `classic` and `new`.",
                "description_kind": "markdown",
                "optional": true,
                "computed": true
              },
              "webauthn_platform_first_factor": {
                "type": "bool",
                "description": "Determines if the login screen uses identifier and biometrics first.",
                "description_kind": "markdown",
                "optional": true,
                "computed": true
              }
            },
            "description": "With this resource, you can manage your Auth0 prompts, including choosing the login experience version.",
            "description_kind": "markdown"
          }
        },
        "auth0_prompt_custom_text": {
          "version": 0,
          "block": {
            "attributes": {
              "body": {
                "type": "string",
                "description": "JSON containing the custom texts. You can check the options for each prompt [here](https://auth0.com/docs/customize/universal-login-pages/customize-login-text-prompts#prompt-values).",
                "description_kind": "markdown",
                "required": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "language": {
                "type": "string",
                "description": "Language of the custom text. Options include: `ar`, `bg`, `bs`, `cs`, `da`, `de`, `el`, `en`, `es`, `et`, `fi`, `fr`, `fr-CA`, `fr-FR`, `he`, `hi`, `hr`, `hu`, `id`, `is`, `it`, `ja`, `ko`, `lt`, `lv`, `nb`, `nl`, `pl`, `pt`, `pt-BR`, `pt-PT`, `ro`, `ru`, `sk`, `sl`, `sr`, `sv`, `th`, `tr`, `uk`, `vi`, `zh-CN`, `zh-TW`.",
                "description_kind": "markdown",
                "required": true
              },
              "prompt": {
                "type": "string",
                "description": "The term `prompt` is used to refer to a specific step in the login flow. Options include: `common`, `consent`, `device-flow`, `email-otp-challenge`, `email-verification`, `invitation`, `login`, `login-id`, `login-password`, `login-passwordless`, `login-email-verification`, `logout`, `mfa`, `mfa-email`, `mfa-otp`, `mfa-phone`, `mfa-push`, `mfa-recovery-code`, `mfa-sms`, `mfa-voice`, `mfa-webauthn`, `organizations`, `reset-password`, `signup`, `signup-id`, `signup-password`, `status`.",
                "description_kind": "markdown",
                "required": true
              }
            },
            "description": "With this resource, you can manage custom text on your Auth0 prompts. You can read more about custom texts [here](https://auth0.com/docs/customize/universal-login-pages/customize-login-text-prompts).",
            "description_kind": "markdown"
          }
        },
        "auth0_resource_server": {
          "version": 0,
          "block": {
            "attributes": {
              "allow_offline_access": {
                "type": "bool",
                "description": "Indicates whether refresh tokens can be issued for this resource server.",
                "description_kind": "markdown",
                "optional": true
              },
              "enforce_policies": {
                "type": "bool",
                "description": "If this setting is enabled, RBAC authorization policies will be enforced for this API. Role and permission assignments will be evaluated during the login transaction.",
                "description_kind": "markdown",
                "optional": true,
                "computed": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "identifier": {
                "type": "string",
                "description": "Unique identifier for the resource server. Used as the audience parameter for authorization calls. Cannot be changed once set.",
                "description_kind": "markdown",
                "required": true
              },
              "name": {
                "type": "string",
                "description": "Friendly name for the resource server. Cannot include `<` or `>` characters.",
                "description_kind": "markdown",
                "optional": true
              },
              "signing_alg": {
                "type": "string",
                "description": "Algorithm used to sign JWTs. Options include `HS256` and `RS256`.",
                "description_kind": "markdown",
                "optional": true,
                "computed": true
              },
              "signing_secret": {
                "type": "string",
                "description": "Secret used to sign tokens when using symmetric algorithms (HS256).",
                "description_kind": "markdown",
                "optional": true,
                "computed": true
              },
              "skip_consent_for_verifiable_first_party_clients": {
                "type": "bool",
                "description": "Indicates whether to skip user consent for applications flagged as first party.",
                "description_kind": "markdown",
                "optional": true,
                "computed": true
              },
              "token_dialect": {
                "type": "string",
                "description": "Dialect of access tokens that should be issued for this resource server. Options include `access_token` or `access_token_authz`. If this setting is set to `access_token_authz`, the Permissions claim will be added to the access token. Only available if RBAC (`enforce_policies`) is enabled for this API.",
                "description_kind": "markdown",
                "optional": true
              },
              "token_lifetime": {
                "type": "number",
                "description": "Number of seconds during which access tokens issued for this resource server from the token endpoint remain valid.",
                "description_kind": "markdown",
                "optional": true,
                "computed": true
              },
              "token_lifetime_for_web": {
                "type": "number",
                "description": "Number of seconds during which access tokens issued for this resource server via implicit or hybrid flows remain valid. Cannot be greater than the `token_lifetime` value.",
                "description_kind": "markdown",
                "optional": true,
                "computed": true
              },
              "verification_location": {
                "type": "string",
                "description": "URL from which to retrieve JWKs for this resource server. Used for verifying the JWT sent to Auth0 for token introspection.",
                "description_kind": "markdown",
                "optional": true
              }
            },
            "block_types": {
              "scopes": {
                "nesting_mode": "set",
                "block": {
                  "attributes": {
                    "description": {
                      "type": "string",
                      "description": "Description of the permission (scope).",
                      "description_kind": "markdown",
                      "optional": true
                    },
                    "value": {
                      "type": "string",
                      "description": "Name of the permission (scope). Examples include `read:appointments` or `delete:appointments`.",
                      "description_kind": "markdown",
                      "required": true
                    }
                  },
                  "description": "List of permissions (scopes) used by this resource server.",
                  "description_kind": "markdown"
                }
              }
            },
            "description": "With this resource, you can set up APIs that can be consumed from your authorized applications.",
            "description_kind": "markdown"
          }
        },
        "auth0_role": {
          "version": 0,
          "block": {
            "attributes": {
              "description": {
                "type": "string",
                "description": "Description of the role.",
                "description_kind": "markdown",
                "optional": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "description": "Name for this role.",
                "description_kind": "markdown",
                "required": true
              }
            },
            "block_types": {
              "permissions": {
                "nesting_mode": "set",
                "block": {
                  "attributes": {
                    "name": {
                      "type": "string",
                      "description": "Name of the permission (scope) configured on the resource server. If referencing a scope from an `auth0_resource_server` resource, use the `value` property, for example `auth0_resource_server.my_resource_server.scopes[0].value`.",
                      "description_kind": "markdown",
                      "required": true
                    },
                    "resource_server_identifier": {
                      "type": "string",
                      "description": "Unique identifier for the resource server.",
                      "description_kind": "markdown",
                      "required": true
                    }
                  },
                  "description": "Configuration settings for permissions (scopes) attached to the role.",
                  "description_kind": "markdown"
                }
              }
            },
            "description": "With this resource, you can create and manage collections of permissions that can be assigned to users, which are otherwise known as roles. Permissions (scopes) are created on `auth0_resource_server`, then associated with roles and optionally, users using this resource.",
            "description_kind": "markdown"
          }
        },
        "auth0_rule": {
          "version": 0,
          "block": {
            "attributes": {
              "enabled": {
                "type": "bool",
                "description": "Indicates whether the rule is enabled.",
                "description_kind": "markdown",
                "optional": true,
                "computed": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "description": "Name of the rule. May only contain alphanumeric characters, spaces, and hyphens. May neither start nor end with hyphens or spaces.",
                "description_kind": "markdown",
                "required": true
              },
              "order": {
                "type": "number",
                "description": "Order in which the rule executes relative to other rules. Lower-valued rules execute first.",
                "description_kind": "markdown",
                "optional": true,
                "computed": true
              },
              "script": {
                "type": "string",
                "description": "Code to be executed when the rule runs.",
                "description_kind": "markdown",
                "required": true
              }
            },
            "description": "With Auth0, you can create custom Javascript snippets that run in a secure, isolated sandbox as part of your authentication pipeline, which are otherwise known as rules. This resource allows you to create and manage rules. You can create global variable for use with rules by using the `auth0_rule_config` resource.",
            "description_kind": "markdown"
          }
        },
        "auth0_rule_config": {
          "version": 0,
          "block": {
            "attributes": {
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "key": {
                "type": "string",
                "description": "Key for a rules configuration variable.",
                "description_kind": "markdown",
                "required": true
              },
              "value": {
                "type": "string",
                "description": "Value for a rules configuration variable.",
                "description_kind": "markdown",
                "required": true,
                "sensitive": true
              }
            },
            "description": "With Auth0, you can create custom Javascript snippets that run in a secure, isolated sandbox as part of your authentication pipeline, which are otherwise known as rules. This resource allows you to create and manage variables that are available to all rules via Auth0's global configuration object. Used in conjunction with configured rules.",
            "description_kind": "markdown"
          }
        },
        "auth0_tenant": {
          "version": 0,
          "block": {
            "attributes": {
              "allowed_logout_urls": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "URLs that Auth0 may redirect to after logout.",
                "description_kind": "markdown",
                "optional": true,
                "computed": true
              },
              "default_audience": {
                "type": "string",
                "description": "API Audience to use by default for API Authorization flows. This setting is equivalent to appending the audience to every authorization request made to the tenant for every application.",
                "description_kind": "markdown",
                "optional": true,
                "computed": true
              },
              "default_directory": {
                "type": "string",
                "description": "Name of the connection to be used for Password Grant exchanges. Options include `auth0-adldap`, `ad`, `auth0`, `email`, `sms`, `waad`, and `adfs`.",
                "description_kind": "markdown",
                "optional": true,
                "computed": true
              },
              "default_redirection_uri": {
                "type": "string",
                "description": "The default absolute redirection URI. Must be HTTPS or an empty string.",
                "description_kind": "markdown",
                "optional": true,
                "computed": true
              },
              "enabled_locales": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "Supported locales for the user interface. The first locale in the list will be used to set the default locale.",
                "description_kind": "markdown",
                "optional": true,
                "computed": true
              },
              "friendly_name": {
                "type": "string",
                "description": "Friendly name for the tenant.",
                "description_kind": "markdown",
                "optional": true,
                "computed": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "idle_session_lifetime": {
                "type": "number",
                "description": "Number of hours during which a session can be inactive before the user must log in again.",
                "description_kind": "markdown",
                "optional": true
              },
              "picture_url": {
                "type": "string",
                "description": "URL of logo to be shown for the tenant. Recommended size is 150px x 150px. If no URL is provided, the Auth0 logo will be used.",
                "description_kind": "markdown",
                "optional": true,
                "computed": true
              },
              "sandbox_version": {
                "type": "string",
                "description": "Selected sandbox version for the extensibility environment, which allows you to use custom scripts to extend parts of Auth0's functionality.",
                "description_kind": "markdown",
                "optional": true,
                "computed": true
              },
              "session_lifetime": {
                "type": "number",
                "description": "Number of hours during which a session will stay valid.",
                "description_kind": "markdown",
                "optional": true
              },
              "support_email": {
                "type": "string",
                "description": "Support email address for authenticating users.",
                "description_kind": "markdown",
                "optional": true,
                "computed": true
              },
              "support_url": {
                "type": "string",
                "description": "Support URL for authenticating users.",
                "description_kind": "markdown",
                "optional": true,
                "computed": true
              }
            },
            "block_types": {
              "change_password": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "enabled": {
                      "type": "bool",
                      "description": "Indicates whether to use the custom change password page.",
                      "description_kind": "markdown",
                      "required": true
                    },
                    "html": {
                      "type": "string",
                      "description": "HTML format with supported Liquid syntax. Customized content of the change password page.",
                      "description_kind": "markdown",
                      "required": true
                    }
                  },
                  "description": "Configuration settings for change password page.",
                  "description_kind": "markdown"
                },
                "max_items": 1
              },
              "error_page": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "html": {
                      "type": "string",
                      "description": "HTML format with supported Liquid syntax. Customized content of the error page.",
                      "description_kind": "markdown",
                      "required": true
                    },
                    "show_log_link": {
                      "type": "bool",
                      "description": "Indicates whether to show the link to logs as part of the default error page.",
                      "description_kind": "markdown",
                      "required": true
                    },
                    "url": {
                      "type": "string",
                      "description": "URL to redirect to when an error occurs rather than showing the default error page.",
                      "description_kind": "markdown",
                      "required": true
                    }
                  },
                  "description": "Configuration settings for error pages.",
                  "description_kind": "markdown"
                },
                "max_items": 1
              },
              "flags": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "allow_legacy_delegation_grant_types": {
                      "type": "bool",
                      "description": "Whether the legacy delegation endpoint will be enabled for your account (true) or not available (false).",
                      "description_kind": "markdown",
                      "optional": true,
                      "computed": true
                    },
                    "allow_legacy_ro_grant_types": {
                      "type": "bool",
                      "description": "Whether the legacy `auth/ro` endpoint (used with resource owner password and passwordless features) will be enabled for your account (true) or not available (false).",
                      "description_kind": "markdown",
                      "optional": true,
                      "computed": true
                    },
                    "allow_legacy_tokeninfo_endpoint": {
                      "type": "bool",
                      "description": "If enabled, customers can use Tokeninfo Endpoint, otherwise they can not use it.",
                      "description_kind": "markdown",
                      "optional": true,
                      "computed": true
                    },
                    "dashboard_insights_view": {
                      "type": "bool",
                      "description": "Enables new insights activity page view.",
                      "description_kind": "markdown",
                      "optional": true,
                      "computed": true
                    },
                    "dashboard_log_streams_next": {
                      "type": "bool",
                      "description": "Enables beta access to log streaming changes.",
                      "description_kind": "markdown",
                      "optional": true,
                      "computed": true
                    },
                    "disable_clickjack_protection_headers": {
                      "type": "bool",
                      "description": "Indicates whether classic Universal Login prompts include additional security headers to prevent clickjacking.",
                      "description_kind": "markdown",
                      "optional": true,
                      "computed": true
                    },
                    "disable_fields_map_fix": {
                      "type": "bool",
                      "description": "Disables SAML fields map fix for bad mappings with repeated attributes.",
                      "description_kind": "markdown",
                      "optional": true,
                      "computed": true
                    },
                    "disable_management_api_sms_obfuscation": {
                      "type": "bool",
                      "description": "If true, SMS phone numbers will not be obfuscated in Management API GET calls.",
                      "description_kind": "markdown",
                      "optional": true,
                      "computed": true
                    },
                    "enable_adfs_waad_email_verification": {
                      "type": "bool",
                      "description": "If enabled, users will be presented with an email verification prompt during their first login when using Azure AD or ADFS connections.",
                      "description_kind": "markdown",
                      "optional": true,
                      "computed": true
                    },
                    "enable_apis_section": {
                      "type": "bool",
                      "description": "Indicates whether the APIs section is enabled for the tenant.",
                      "description_kind": "markdown",
                      "optional": true,
                      "computed": true
                    },
                    "enable_client_connections": {
                      "type": "bool",
                      "description": "Indicates whether all current connections should be enabled when a new client is created.",
                      "description_kind": "markdown",
                      "optional": true,
                      "computed": true
                    },
                    "enable_custom_domain_in_emails": {
                      "type": "bool",
                      "description": "Indicates whether the tenant allows custom domains in emails.",
                      "description_kind": "markdown",
                      "optional": true,
                      "computed": true
                    },
                    "enable_dynamic_client_registration": {
                      "type": "bool",
                      "description": "Indicates whether the tenant allows dynamic client registration.",
                      "description_kind": "markdown",
                      "optional": true,
                      "computed": true
                    },
                    "enable_idtoken_api2": {
                      "type": "bool",
                      "description": "Whether ID tokens can be used to authorize some types of requests to API v2 (true) or not (false).",
                      "description_kind": "markdown",
                      "optional": true,
                      "computed": true
                    },
                    "enable_legacy_logs_search_v2": {
                      "type": "bool",
                      "description": "Indicates whether to use the older v2 legacy logs search.",
                      "description_kind": "markdown",
                      "optional": true,
                      "computed": true
                    },
                    "enable_legacy_profile": {
                      "type": "bool",
                      "description": "Whether ID tokens and the userinfo endpoint includes a complete user profile (true) or only OpenID Connect claims (false).",
                      "description_kind": "markdown",
                      "optional": true,
                      "computed": true
                    },
                    "enable_pipeline2": {
                      "type": "bool",
                      "description": "Indicates whether advanced API Authorization scenarios are enabled.",
                      "description_kind": "markdown",
                      "optional": true,
                      "computed": true
                    },
                    "enable_public_signup_user_exists_error": {
                      "type": "bool",
                      "description": "Indicates whether the public sign up process shows a `user_exists` error if the user already exists.",
                      "description_kind": "markdown",
                      "optional": true,
                      "computed": true
                    },
                    "mfa_show_factor_list_on_enrollment": {
                      "type": "bool",
                      "description": "Used to allow users to pick which factor to enroll with from the list of available MFA factors.",
                      "description_kind": "markdown",
                      "optional": true,
                      "computed": true
                    },
                    "no_disclose_enterprise_connections": {
                      "type": "bool",
                      "description": "Do not Publish Enterprise Connections Information with IdP domains on the lock configuration file.",
                      "description_kind": "markdown",
                      "optional": true,
                      "computed": true
                    },
                    "revoke_refresh_token_grant": {
                      "type": "bool",
                      "description": "Delete underlying grant when a refresh token is revoked via the Authentication API.",
                      "description_kind": "markdown",
                      "optional": true,
                      "computed": true
                    },
                    "universal_login": {
                      "type": "bool",
                      "description": "Indicates whether the New Universal Login Experience is enabled.",
                      "description_kind": "markdown",
                      "deprecated": true,
                      "optional": true,
                      "computed": true
                    },
                    "use_scope_descriptions_for_consent": {
                      "type": "bool",
                      "description": "Indicates whether to use scope descriptions for consent.",
                      "description_kind": "markdown",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "description": "Configuration settings for tenant flags.",
                  "description_kind": "markdown"
                },
                "max_items": 1
              },
              "guardian_mfa_page": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "enabled": {
                      "type": "bool",
                      "description": "Indicates whether to use the custom Guardian page.",
                      "description_kind": "markdown",
                      "required": true
                    },
                    "html": {
                      "type": "string",
                      "description": "HTML format with supported Liquid syntax. Customized content of the Guardian page.",
                      "description_kind": "markdown",
                      "required": true
                    }
                  },
                  "description": "Configuration settings for the Guardian MFA page.",
                  "description_kind": "markdown"
                },
                "max_items": 1
              },
              "session_cookie": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "mode": {
                      "type": "string",
                      "description": "Behavior of tenant session cookie. Accepts either \"persistent\" or \"non-persistent\".",
                      "description_kind": "markdown",
                      "optional": true
                    }
                  },
                  "description": "Alters behavior of tenant's session cookie. Contains a single `mode` property.",
                  "description_kind": "markdown"
                },
                "max_items": 1
              },
              "universal_login": {
                "nesting_mode": "list",
                "block": {
                  "block_types": {
                    "colors": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "page_background": {
                            "type": "string",
                            "description": "Background color of login pages in hexadecimal.",
                            "description_kind": "markdown",
                            "optional": true,
                            "computed": true
                          },
                          "primary": {
                            "type": "string",
                            "description": "Primary button background color in hexadecimal.",
                            "description_kind": "markdown",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "description": "Configuration settings for Universal Login colors.",
                        "description_kind": "markdown"
                      },
                      "max_items": 1
                    }
                  },
                  "description": "Configuration settings for Universal Login.",
                  "description_kind": "markdown"
                },
                "max_items": 1
              }
            },
            "description": "With this resource, you can manage Auth0 tenants, including setting logos and support contact information, setting error pages, and configuring default tenant behaviors.",
            "description_kind": "markdown"
          }
        },
        "auth0_trigger_binding": {
          "version": 0,
          "block": {
            "attributes": {
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "trigger": {
                "type": "string",
                "description": "The ID of the trigger to bind with.",
                "description_kind": "markdown",
                "required": true
              }
            },
            "block_types": {
              "actions": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "display_name": {
                      "type": "string",
                      "description": "The name of an action.",
                      "description_kind": "markdown",
                      "required": true
                    },
                    "id": {
                      "type": "string",
                      "description": "Action ID.",
                      "description_kind": "markdown",
                      "required": true
                    }
                  },
                  "description": "The actions bound to this trigger",
                  "description_kind": "markdown"
                },
                "min_items": 1
              }
            },
            "description": "With this resource, you can bind an action to a trigger. Once an action is created and deployed, it can be attached (i.e. bound) to a trigger so that it will be executed as part of a flow. The list of actions reflects the order in which they will be executed during the appropriate flow.",
            "description_kind": "markdown"
          }
        },
        "auth0_user": {
          "version": 0,
          "block": {
            "attributes": {
              "app_metadata": {
                "type": "string",
                "description": "Custom fields that store info about the user that impact the user's core functionality, such as how an application functions or what the user can access. Examples include support plans and IDs for external accounts.",
                "description_kind": "markdown",
                "optional": true
              },
              "blocked": {
                "type": "bool",
                "description": "Indicates whether the user is blocked or not.",
                "description_kind": "markdown",
                "optional": true
              },
              "connection_name": {
                "type": "string",
                "description": "Name of the connection from which the user information was sourced.",
                "description_kind": "markdown",
                "required": true
              },
              "email": {
                "type": "string",
                "description": "Email address of the user.",
                "description_kind": "markdown",
                "optional": true
              },
              "email_verified": {
                "type": "bool",
                "description": "Indicates whether the email address has been verified.",
                "description_kind": "markdown",
                "optional": true
              },
              "family_name": {
                "type": "string",
                "description": "Family name of the user. This value can only be updated if the connection is a database connection (using the Auth0 store), a passwordless connection (email or sms) or has disabled 'Sync user profile attributes at each login'. For more information, see: [Configure Identity Provider Connection for User Profile Updates](https://auth0.com/docs/manage-users/user-accounts/user-profiles/configure-connection-sync-with-auth0).",
                "description_kind": "markdown",
                "optional": true
              },
              "given_name": {
                "type": "string",
                "description": "Given name of the user. This value can only be updated if the connection is a database connection (using the Auth0 store), a passwordless connection (email or sms) or has disabled 'Sync user profile attributes at each login'. For more information, see: [Configure Identity Provider Connection for User Profile Updates](https://auth0.com/docs/manage-users/user-accounts/user-profiles/configure-connection-sync-with-auth0).",
                "description_kind": "markdown",
                "optional": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "description": "Name of the user. This value can only be updated if the connection is a database connection (using the Auth0 store), a passwordless connection (email or sms) or has disabled 'Sync user profile attributes at each login'. For more information, see: [Configure Identity Provider Connection for User Profile Updates](https://auth0.com/docs/manage-users/user-accounts/user-profiles/configure-connection-sync-with-auth0).",
                "description_kind": "markdown",
                "optional": true,
                "computed": true
              },
              "nickname": {
                "type": "string",
                "description": "Preferred nickname or alias of the user. This value can only be updated if the connection is a database connection (using the Auth0 store), a passwordless connection (email or sms) or has disabled 'Sync user profile attributes at each login'. For more information, see: [Configure Identity Provider Connection for User Profile Updates](https://auth0.com/docs/manage-users/user-accounts/user-profiles/configure-connection-sync-with-auth0).",
                "description_kind": "markdown",
                "optional": true,
                "computed": true
              },
              "password": {
                "type": "string",
                "description": "Initial password for this user. Required for non-passwordless connections (SMS and email).",
                "description_kind": "markdown",
                "optional": true,
                "sensitive": true
              },
              "phone_number": {
                "type": "string",
                "description": "Phone number for the user; follows the E.164 recommendation. Used for SMS connections. ",
                "description_kind": "markdown",
                "optional": true
              },
              "phone_verified": {
                "type": "bool",
                "description": "Indicates whether the phone number has been verified.",
                "description_kind": "markdown",
                "optional": true
              },
              "picture": {
                "type": "string",
                "description": "Picture of the user. This value can only be updated if the connection is a database connection (using the Auth0 store), a passwordless connection (email or sms) or has disabled 'Sync user profile attributes at each login'. For more information, see: [Configure Identity Provider Connection for User Profile Updates](https://auth0.com/docs/manage-users/user-accounts/user-profiles/configure-connection-sync-with-auth0).",
                "description_kind": "markdown",
                "optional": true,
                "computed": true
              },
              "roles": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "Set of IDs of roles assigned to the user.",
                "description_kind": "markdown",
                "optional": true
              },
              "user_id": {
                "type": "string",
                "description": "ID of the user.",
                "description_kind": "markdown",
                "optional": true,
                "computed": true
              },
              "user_metadata": {
                "type": "string",
                "description": "Custom fields that store info about the user that does not impact a user's core functionality. Examples include work address, home address, and user preferences.",
                "description_kind": "markdown",
                "optional": true
              },
              "username": {
                "type": "string",
                "description": "Username of the user. Only valid if the connection requires a username.",
                "description_kind": "markdown",
                "optional": true
              },
              "verify_email": {
                "type": "bool",
                "description": "Indicates whether the user will receive a verification email after creation. Overrides behavior of `email_verified` parameter.",
                "description_kind": "markdown",
                "optional": true
              }
            },
            "description": "With this resource, you can manage user identities, including resetting passwords, and creating, provisioning, blocking, and deleting users.",
            "description_kind": "markdown"
          }
        }
      },
      "data_source_schemas": {
        "auth0_attack_protection": {
          "version": 0,
          "block": {
            "attributes": {
              "breached_password_detection": {
                "type": [
                  "list",
                  [
                    "object",
                    {
                      "admin_notification_frequency": [
                        "set",
                        "string"
                      ],
                      "enabled": "bool",
                      "method": "string",
                      "pre_user_registration": [
                        "list",
                        [
                          "object",
                          {
                            "shields": [
                              "set",
                              "string"
                            ]
                          }
                        ]
                      ],
                      "shields": [
                        "set",
                        "string"
                      ]
                    }
                  ]
                ],
                "description": "Breached password detection protects your applications from bad actors logging in with stolen credentials.",
                "description_kind": "markdown",
                "computed": true
              },
              "brute_force_protection": {
                "type": [
                  "list",
                  [
                    "object",
                    {
                      "allowlist": [
                        "set",
                        "string"
                      ],
                      "enabled": "bool",
                      "max_attempts": "number",
                      "mode": "string",
                      "shields": [
                        "set",
                        "string"
                      ]
                    }
                  ]
                ],
                "description": "Brute-force protection safeguards against a single IP address attacking a single user account.",
                "description_kind": "markdown",
                "computed": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "suspicious_ip_throttling": {
                "type": [
                  "list",
                  [
                    "object",
                    {
                      "allowlist": [
                        "set",
                        "string"
                      ],
                      "enabled": "bool",
                      "pre_login": [
                        "list",
                        [
                          "object",
                          {
                            "max_attempts": "number",
                            "rate": "number"
                          }
                        ]
                      ],
                      "pre_user_registration": [
                        "list",
                        [
                          "object",
                          {
                            "max_attempts": "number",
                            "rate": "number"
                          }
                        ]
                      ],
                      "shields": [
                        "set",
                        "string"
                      ]
                    }
                  ]
                ],
                "description": "Suspicious IP throttling blocks traffic from any IP address that rapidly attempts too many logins or signups.",
                "description_kind": "markdown",
                "computed": true
              }
            },
            "description": "Use this data source to access information about the tenant's attack protection settings.",
            "description_kind": "markdown"
          }
        },
        "auth0_branding": {
          "version": 0,
          "block": {
            "attributes": {
              "colors": {
                "type": [
                  "list",
                  [
                    "object",
                    {
                      "page_background": "string",
                      "primary": "string"
                    }
                  ]
                ],
                "description": "Configuration settings for colors for branding.",
                "description_kind": "markdown",
                "computed": true
              },
              "favicon_url": {
                "type": "string",
                "description": "URL for the favicon.",
                "description_kind": "markdown",
                "computed": true
              },
              "font": {
                "type": [
                  "list",
                  [
                    "object",
                    {
                      "url": "string"
                    }
                  ]
                ],
                "description": "Configuration settings to customize the font.",
                "description_kind": "markdown",
                "computed": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "logo_url": {
                "type": "string",
                "description": "URL of logo for branding.",
                "description_kind": "markdown",
                "computed": true
              },
              "universal_login": {
                "type": [
                  "list",
                  [
                    "object",
                    {
                      "body": "string"
                    }
                  ]
                ],
                "description": "Configuration settings for Universal Login.",
                "description_kind": "markdown",
                "computed": true
              }
            },
            "description": "Use this data source to access information about the tenant's branding settings.",
            "description_kind": "markdown"
          }
        },
        "auth0_branding_theme": {
          "version": 0,
          "block": {
            "attributes": {
              "borders": {
                "type": [
                  "list",
                  [
                    "object",
                    {
                      "button_border_radius": "number",
                      "button_border_weight": "number",
                      "buttons_style": "string",
                      "input_border_radius": "number",
                      "input_border_weight": "number",
                      "inputs_style": "string",
                      "show_widget_shadow": "bool",
                      "widget_border_weight": "number",
                      "widget_corner_radius": "number"
                    }
                  ]
                ],
                "description_kind": "plain",
                "computed": true
              },
              "colors": {
                "type": [
                  "list",
                  [
                    "object",
                    {
                      "base_focus_color": "string",
                      "base_hover_color": "string",
                      "body_text": "string",
                      "error": "string",
                      "header": "string",
                      "icons": "string",
                      "input_background": "string",
                      "input_border": "string",
                      "input_filled_text": "string",
                      "input_labels_placeholders": "string",
                      "links_focused_components": "string",
                      "primary_button": "string",
                      "primary_button_label": "string",
                      "secondary_button_border": "string",
                      "secondary_button_label": "string",
                      "success": "string",
                      "widget_background": "string",
                      "widget_border": "string"
                    }
                  ]
                ],
                "description_kind": "plain",
                "computed": true
              },
              "display_name": {
                "type": "string",
                "description": "The display name for the branding theme.",
                "description_kind": "markdown",
                "computed": true
              },
              "fonts": {
                "type": [
                  "list",
                  [
                    "object",
                    {
                      "body_text": [
                        "list",
                        [
                          "object",
                          {
                            "bold": "bool",
                            "size": "number"
                          }
                        ]
                      ],
                      "buttons_text": [
                        "list",
                        [
                          "object",
                          {
                            "bold": "bool",
                            "size": "number"
                          }
                        ]
                      ],
                      "font_url": "string",
                      "input_labels": [
                        "list",
                        [
                          "object",
                          {
                            "bold": "bool",
                            "size": "number"
                          }
                        ]
                      ],
                      "links": [
                        "list",
                        [
                          "object",
                          {
                            "bold": "bool",
                            "size": "number"
                          }
                        ]
                      ],
                      "links_style": "string",
                      "reference_text_size": "number",
                      "subtitle": [
                        "list",
                        [
                          "object",
                          {
                            "bold": "bool",
                            "size": "number"
                          }
                        ]
                      ],
                      "title": [
                        "list",
                        [
                          "object",
                          {
                            "bold": "bool",
                            "size": "number"
                          }
                        ]
                      ]
                    }
                  ]
                ],
                "description_kind": "plain",
                "computed": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "page_background": {
                "type": [
                  "list",
                  [
                    "object",
                    {
                      "background_color": "string",
                      "background_image_url": "string",
                      "page_layout": "string"
                    }
                  ]
                ],
                "description_kind": "plain",
                "computed": true
              },
              "widget": {
                "type": [
                  "list",
                  [
                    "object",
                    {
                      "header_text_alignment": "string",
                      "logo_height": "number",
                      "logo_position": "string",
                      "logo_url": "string",
                      "social_buttons_layout": "string"
                    }
                  ]
                ],
                "description_kind": "plain",
                "computed": true
              }
            },
            "description": "Use this data source to access information about the tenant's branding theme settings.",
            "description_kind": "markdown"
          }
        },
        "auth0_client": {
          "version": 0,
          "block": {
            "attributes": {
              "addons": {
                "type": [
                  "list",
                  [
                    "object",
                    {
                      "aws": [
                        "map",
                        "string"
                      ],
                      "azure_blob": [
                        "map",
                        "string"
                      ],
                      "azure_sb": [
                        "map",
                        "string"
                      ],
                      "box": [
                        "map",
                        "string"
                      ],
                      "cloudbees": [
                        "map",
                        "string"
                      ],
                      "concur": [
                        "map",
                        "string"
                      ],
                      "dropbox": [
                        "map",
                        "string"
                      ],
                      "echosign": [
                        "map",
                        "string"
                      ],
                      "egnyte": [
                        "map",
                        "string"
                      ],
                      "firebase": [
                        "map",
                        "string"
                      ],
                      "layer": [
                        "map",
                        "string"
                      ],
                      "mscrm": [
                        "map",
                        "string"
                      ],
                      "newrelic": [
                        "map",
                        "string"
                      ],
                      "office365": [
                        "map",
                        "string"
                      ],
                      "rms": [
                        "map",
                        "string"
                      ],
                      "salesforce": [
                        "map",
                        "string"
                      ],
                      "salesforce_api": [
                        "map",
                        "string"
                      ],
                      "salesforce_sandbox_api": [
                        "map",
                        "string"
                      ],
                      "samlp": [
                        "list",
                        [
                          "object",
                          {
                            "audience": "string",
                            "authn_context_class_ref": "string",
                            "binding": "string",
                            "create_upn_claim": "bool",
                            "destination": "string",
                            "digest_algorithm": "string",
                            "include_attribute_name_format": "bool",
                            "issuer": "string",
                            "lifetime_in_seconds": "number",
                            "logout": [
                              "map",
                              "string"
                            ],
                            "map_identities": "bool",
                            "map_unknown_claims_as_is": "bool",
                            "mappings": [
                              "map",
                              "string"
                            ],
                            "name_identifier_format": "string",
                            "name_identifier_probes": [
                              "list",
                              "string"
                            ],
                            "passthrough_claims_with_no_mapping": "bool",
                            "recipient": "string",
                            "sign_response": "bool",
                            "signature_algorithm": "string",
                            "signing_cert": "string",
                            "typed_attributes": "bool"
                          }
                        ]
                      ],
                      "sap_api": [
                        "map",
                        "string"
                      ],
                      "sentry": [
                        "map",
                        "string"
                      ],
                      "sharepoint": [
                        "map",
                        "string"
                      ],
                      "slack": [
                        "map",
                        "string"
                      ],
                      "springcm": [
                        "map",
                        "string"
                      ],
                      "wams": [
                        "map",
                        "string"
                      ],
                      "wsfed": [
                        "map",
                        "string"
                      ],
                      "zendesk": [
                        "map",
                        "string"
                      ],
                      "zoom": [
                        "map",
                        "string"
                      ]
                    }
                  ]
                ],
                "description": "Addons enabled for this client and their associated configurations.",
                "description_kind": "markdown",
                "computed": true
              },
              "allowed_clients": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "List of applications ID's that will be allowed to make delegation request. By default, all applications will be allowed.",
                "description_kind": "markdown",
                "computed": true
              },
              "allowed_logout_urls": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "URLs that Auth0 may redirect to after logout.",
                "description_kind": "markdown",
                "computed": true
              },
              "allowed_origins": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "URLs that represent valid origins for cross-origin resource sharing. By default, all your callback URLs will be allowed.",
                "description_kind": "markdown",
                "computed": true
              },
              "app_type": {
                "type": "string",
                "description": "Type of application the client represents. Possible values are: `native`, `spa`, `regular_web`, `non_interactive`, `sso_integration`. Specific SSO integrations types accepted as well are: `rms`, `box`, `cloudbees`, `concur`, `dropbox`, `mscrm`, `echosign`, `egnyte`, `newrelic`, `office365`, `salesforce`, `sentry`, `sharepoint`, `slack`, `springcm`, `zendesk`, `zoom`.",
                "description_kind": "markdown",
                "computed": true
              },
              "callbacks": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "URLs that Auth0 may call back to after a user authenticates for the client. Make sure to specify the protocol (https://) otherwise the callback may fail in some cases. With the exception of custom URI schemes for native clients, all callbacks should use protocol https://.",
                "description_kind": "markdown",
                "computed": true
              },
              "client_aliases": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "List of audiences/realms for SAML protocol. Used by the wsfed addon.",
                "description_kind": "markdown",
                "computed": true
              },
              "client_id": {
                "type": "string",
                "description": "The ID of the client. If not provided, `name` must be set.",
                "description_kind": "markdown",
                "optional": true
              },
              "client_metadata": {
                "type": [
                  "map",
                  "string"
                ],
                "description": "Metadata associated with the client, in the form of an object with string values (max 255 chars). Maximum of 10 metadata properties allowed. Field names (max 255 chars) are alphanumeric and may only include the following special characters: `:,-+=_*?\"/\\()<>@ [Tab] [Space]`.",
                "description_kind": "markdown",
                "computed": true
              },
              "client_secret": {
                "type": "string",
                "description": "Secret for the client. Keep this private. To access this attribute you need to add the `read:client_keys` scope to the Terraform client. Otherwise, the attribute will contain an empty string.",
                "description_kind": "markdown",
                "computed": true
              },
              "cross_origin_auth": {
                "type": "bool",
                "description": "Whether this client can be used to make cross-origin authentication requests (`true`) or it is not allowed to make such requests (`false`). Requires the `coa_toggle_enabled` feature flag to be enabled on the tenant by the support team.",
                "description_kind": "markdown",
                "computed": true
              },
              "cross_origin_loc": {
                "type": "string",
                "description": "URL of the location in your site where the cross-origin verification takes place for the cross-origin auth flow when performing authentication in your own domain instead of Auth0 Universal Login page.",
                "description_kind": "markdown",
                "computed": true
              },
              "custom_login_page": {
                "type": "string",
                "description": "The content (HTML, CSS, JS) of the custom login page.",
                "description_kind": "markdown",
                "computed": true
              },
              "custom_login_page_on": {
                "type": "bool",
                "description": "Indicates whether a custom login page is to be used.",
                "description_kind": "markdown",
                "computed": true
              },
              "description": {
                "type": "string",
                "description": "Description of the purpose of the client.",
                "description_kind": "markdown",
                "computed": true
              },
              "encryption_key": {
                "type": [
                  "map",
                  "string"
                ],
                "description": "Encryption used for WS-Fed responses with this client.",
                "description_kind": "markdown",
                "computed": true
              },
              "form_template": {
                "type": "string",
                "description": "HTML form template to be used for WS-Federation.",
                "description_kind": "markdown",
                "computed": true
              },
              "grant_types": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "Types of grants that this client is authorized to use.",
                "description_kind": "markdown",
                "computed": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "initiate_login_uri": {
                "type": "string",
                "description": "Initiate login URI. Must be HTTPS or an empty string.",
                "description_kind": "markdown",
                "computed": true
              },
              "is_first_party": {
                "type": "bool",
                "description": "Indicates whether this client is a first-party client.",
                "description_kind": "markdown",
                "computed": true
              },
              "is_token_endpoint_ip_header_trusted": {
                "type": "bool",
                "description": "Indicates whether the token endpoint IP header is trusted.",
                "description_kind": "markdown",
                "computed": true
              },
              "jwt_configuration": {
                "type": [
                  "list",
                  [
                    "object",
                    {
                      "alg": "string",
                      "lifetime_in_seconds": "number",
                      "scopes": [
                        "map",
                        "string"
                      ],
                      "secret_encoded": "bool"
                    }
                  ]
                ],
                "description": "Configuration settings for the JWTs issued for this client.",
                "description_kind": "markdown",
                "computed": true
              },
              "logo_uri": {
                "type": "string",
                "description": "URL of the logo for the client. Recommended size is 150px x 150px. If none is set, the default badge for the application type will be shown.",
                "description_kind": "markdown",
                "computed": true
              },
              "mobile": {
                "type": [
                  "list",
                  [
                    "object",
                    {
                      "android": [
                        "list",
                        [
                          "object",
                          {
                            "app_package_name": "string",
                            "sha256_cert_fingerprints": [
                              "list",
                              "string"
                            ]
                          }
                        ]
                      ],
                      "ios": [
                        "list",
                        [
                          "object",
                          {
                            "app_bundle_identifier": "string",
                            "team_id": "string"
                          }
                        ]
                      ]
                    }
                  ]
                ],
                "description": "Additional configuration for native mobile apps.",
                "description_kind": "markdown",
                "computed": true
              },
              "name": {
                "type": "string",
                "description": "The name of the client. If not provided, `client_id` must be set.",
                "description_kind": "markdown",
                "optional": true
              },
              "native_social_login": {
                "type": [
                  "list",
                  [
                    "object",
                    {
                      "apple": [
                        "list",
                        [
                          "object",
                          {
                            "enabled": "bool"
                          }
                        ]
                      ],
                      "facebook": [
                        "list",
                        [
                          "object",
                          {
                            "enabled": "bool"
                          }
                        ]
                      ]
                    }
                  ]
                ],
                "description": "Configuration settings to toggle native social login for mobile native applications. Once this is set it must stay set, with both resources set to `false` in order to change the `app_type`.",
                "description_kind": "markdown",
                "computed": true
              },
              "oidc_conformant": {
                "type": "bool",
                "description": "Indicates whether this client will conform to strict OIDC specifications.",
                "description_kind": "markdown",
                "computed": true
              },
              "organization_require_behavior": {
                "type": "string",
                "description": "Defines how to proceed during an authentication transaction when `organization_usage = \"require\"`. Can be `no_prompt` (default) or `pre_login_prompt`.",
                "description_kind": "markdown",
                "computed": true
              },
              "organization_usage": {
                "type": "string",
                "description": "Defines how to proceed during an authentication transaction with regards to an organization. Can be `deny` (default), `allow` or `require`.",
                "description_kind": "markdown",
                "computed": true
              },
              "refresh_token": {
                "type": [
                  "list",
                  [
                    "object",
                    {
                      "expiration_type": "string",
                      "idle_token_lifetime": "number",
                      "infinite_idle_token_lifetime": "bool",
                      "infinite_token_lifetime": "bool",
                      "leeway": "number",
                      "rotation_type": "string",
                      "token_lifetime": "number"
                    }
                  ]
                ],
                "description": "Configuration settings for the refresh tokens issued for this client.",
                "description_kind": "markdown",
                "computed": true
              },
              "signing_keys": {
                "type": [
                  "list",
                  [
                    "map",
                    "string"
                  ]
                ],
                "description": "List containing a map of the public cert of the signing key and the public cert of the signing key in PKCS7.",
                "description_kind": "markdown",
                "computed": true
              },
              "sso": {
                "type": "bool",
                "description": "Applies only to SSO clients and determines whether Auth0 will handle Single Sign-On (true) or whether the identity provider will (false).",
                "description_kind": "markdown",
                "computed": true
              },
              "sso_disabled": {
                "type": "bool",
                "description": "Indicates whether or not SSO is disabled.",
                "description_kind": "markdown",
                "computed": true
              },
              "token_endpoint_auth_method": {
                "type": "string",
                "description": "Defines the requested authentication method for the token endpoint. Options include `none` (public client without a client secret), `client_secret_post` (client uses HTTP POST parameters), `client_secret_basic` (client uses HTTP Basic).",
                "description_kind": "markdown",
                "computed": true
              },
              "web_origins": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "URLs that represent valid web origins for use with web message response mode.",
                "description_kind": "markdown",
                "computed": true
              }
            },
            "description": "Data source to retrieve a specific Auth0 application client by `client_id` or `name`.",
            "description_kind": "markdown"
          }
        },
        "auth0_connection": {
          "version": 2,
          "block": {
            "attributes": {
              "connection_id": {
                "type": "string",
                "description": "The ID of the connection. If not provided, `name` must be set.",
                "description_kind": "markdown",
                "optional": true
              },
              "display_name": {
                "type": "string",
                "description": "Name used in login screen.",
                "description_kind": "markdown",
                "computed": true
              },
              "enabled_clients": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "IDs of the clients for which the connection is enabled.",
                "description_kind": "markdown",
                "computed": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "is_domain_connection": {
                "type": "bool",
                "description": "Indicates whether the connection is domain level.",
                "description_kind": "markdown",
                "computed": true
              },
              "metadata": {
                "type": [
                  "map",
                  "string"
                ],
                "description": "Metadata associated with the connection, in the form of a map of string values (max 255 chars). Maximum of 10 metadata properties allowed.",
                "description_kind": "markdown",
                "computed": true
              },
              "name": {
                "type": "string",
                "description": "The name of the connection. If not provided, `connection_id` must be set.",
                "description_kind": "markdown",
                "optional": true
              },
              "options": {
                "type": [
                  "list",
                  [
                    "object",
                    {
                      "adfs_server": "string",
                      "allowed_audiences": [
                        "set",
                        "string"
                      ],
                      "api_enable_users": "bool",
                      "app_id": "string",
                      "auth_params": [
                        "map",
                        "string"
                      ],
                      "authorization_endpoint": "string",
                      "brute_force_protection": "bool",
                      "client_id": "string",
                      "client_secret": "string",
                      "community_base_url": "string",
                      "configuration": [
                        "map",
                        "string"
                      ],
                      "custom_scripts": [
                        "map",
                        "string"
                      ],
                      "debug": "bool",
                      "digest_algorithm": "string",
                      "disable_cache": "bool",
                      "disable_self_service_change_password": "bool",
                      "disable_sign_out": "bool",
                      "disable_signup": "bool",
                      "discovery_url": "string",
                      "domain": "string",
                      "domain_aliases": [
                        "set",
                        "string"
                      ],
                      "enable_script_context": "bool",
                      "enabled_database_customization": "bool",
                      "entity_id": "string",
                      "fed_metadata_xml": "string",
                      "fields_map": "string",
                      "forward_request_info": "bool",
                      "from": "string",
                      "gateway_authentication": [
                        "list",
                        [
                          "object",
                          {
                            "audience": "string",
                            "method": "string",
                            "secret": "string",
                            "secret_base64_encoded": "bool",
                            "subject": "string"
                          }
                        ]
                      ],
                      "gateway_url": "string",
                      "icon_url": "string",
                      "identity_api": "string",
                      "idp_initiated": [
                        "list",
                        [
                          "object",
                          {
                            "client_authorize_query": "string",
                            "client_id": "string",
                            "client_protocol": "string"
                          }
                        ]
                      ],
                      "import_mode": "bool",
                      "ips": [
                        "set",
                        "string"
                      ],
                      "issuer": "string",
                      "jwks_uri": "string",
                      "key_id": "string",
                      "max_groups_to_retrieve": "string",
                      "messaging_service_sid": "string",
                      "metadata_url": "string",
                      "metadata_xml": "string",
                      "mfa": [
                        "list",
                        [
                          "object",
                          {
                            "active": "bool",
                            "return_enroll_settings": "bool"
                          }
                        ]
                      ],
                      "name": "string",
                      "non_persistent_attrs": [
                        "set",
                        "string"
                      ],
                      "password_complexity_options": [
                        "list",
                        [
                          "object",
                          {
                            "min_length": "number"
                          }
                        ]
                      ],
                      "password_dictionary": [
                        "list",
                        [
                          "object",
                          {
                            "dictionary": [
                              "set",
                              "string"
                            ],
                            "enable": "bool"
                          }
                        ]
                      ],
                      "password_history": [
                        "list",
                        [
                          "object",
                          {
                            "enable": "bool",
                            "size": "number"
                          }
                        ]
                      ],
                      "password_no_personal_info": [
                        "list",
                        [
                          "object",
                          {
                            "enable": "bool"
                          }
                        ]
                      ],
                      "password_policy": "string",
                      "ping_federate_base_url": "string",
                      "pkce_enabled": "bool",
                      "protocol_binding": "string",
                      "provider": "string",
                      "request_template": "string",
                      "requires_username": "bool",
                      "scopes": [
                        "set",
                        "string"
                      ],
                      "scripts": [
                        "map",
                        "string"
                      ],
                      "set_user_root_attributes": "string",
                      "should_trust_email_verified_connection": "string",
                      "sign_in_endpoint": "string",
                      "sign_out_endpoint": "string",
                      "sign_saml_request": "bool",
                      "signature_algorithm": "string",
                      "signing_cert": "string",
                      "signing_key": [
                        "list",
                        [
                          "object",
                          {
                            "cert": "string",
                            "key": "string"
                          }
                        ]
                      ],
                      "strategy_version": "number",
                      "subject": "string",
                      "syntax": "string",
                      "team_id": "string",
                      "template": "string",
                      "tenant_domain": "string",
                      "token_endpoint": "string",
                      "totp": [
                        "list",
                        [
                          "object",
                          {
                            "length": "number",
                            "time_step": "number"
                          }
                        ]
                      ],
                      "twilio_sid": "string",
                      "twilio_token": "string",
                      "type": "string",
                      "upstream_params": "string",
                      "use_cert_auth": "bool",
                      "use_kerberos": "bool",
                      "use_wsfed": "bool",
                      "user_id_attribute": "string",
                      "userinfo_endpoint": "string",
                      "validation": [
                        "list",
                        [
                          "object",
                          {
                            "username": [
                              "list",
                              [
                                "object",
                                {
                                  "max": "number",
                                  "min": "number"
                                }
                              ]
                            ]
                          }
                        ]
                      ],
                      "waad_common_endpoint": "bool",
                      "waad_protocol": "string"
                    }
                  ]
                ],
                "description": "Configuration settings for connection options.",
                "description_kind": "markdown",
                "computed": true
              },
              "realms": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "Defines the realms for which the connection will be used (e.g., email domains). If not specified, the connection name is added as the realm.",
                "description_kind": "markdown",
                "computed": true
              },
              "show_as_button": {
                "type": "bool",
                "description": "Display connection as a button. Only available on enterprise connections.",
                "description_kind": "markdown",
                "computed": true
              },
              "strategy": {
                "type": "string",
                "description": "Type of the connection, which indicates the identity provider.",
                "description_kind": "markdown",
                "computed": true
              }
            },
            "description": "Data source to retrieve a specific Auth0 connection by `connection_id` or `name`.",
            "description_kind": "markdown"
          }
        },
        "auth0_custom_domain": {
          "version": 0,
          "block": {
            "attributes": {
              "custom_client_ip_header": {
                "type": "string",
                "description": "The HTTP header to fetch the client's IP address. Cannot be set on auth0_managed domains.",
                "description_kind": "markdown",
                "computed": true
              },
              "domain": {
                "type": "string",
                "description": "Name of the custom domain.",
                "description_kind": "markdown",
                "computed": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "origin_domain_name": {
                "type": "string",
                "description": "Once the configuration status is `ready`, the DNS name of the Auth0 origin server that handles traffic for the custom domain.",
                "description_kind": "markdown",
                "computed": true
              },
              "primary": {
                "type": "bool",
                "description": "Indicates whether this is a primary domain.",
                "description_kind": "markdown",
                "computed": true
              },
              "status": {
                "type": "string",
                "description": "Configuration status for the custom domain. Options include `disabled`, `pending`, `pending_verification`, and `ready`.",
                "description_kind": "markdown",
                "computed": true
              },
              "tls_policy": {
                "type": "string",
                "description": "TLS policy for the custom domain. Available options are: `compatible` or `recommended`. Compatible includes TLS 1.0, 1.1, 1.2, and recommended only includes TLS 1.2. Cannot be set on self_managed domains.",
                "description_kind": "markdown",
                "computed": true
              },
              "type": {
                "type": "string",
                "description": "Provisioning type for the custom domain. Options include `auth0_managed_certs` and `self_managed_certs`.",
                "description_kind": "markdown",
                "computed": true
              },
              "verification": {
                "type": [
                  "list",
                  [
                    "object",
                    {
                      "methods": [
                        "list",
                        [
                          "map",
                          "string"
                        ]
                      ]
                    }
                  ]
                ],
                "description": "Configuration settings for verification.",
                "description_kind": "markdown",
                "computed": true
              }
            },
            "description": "Data source to retrieve the custom domain configuration.",
            "description_kind": "markdown"
          }
        },
        "auth0_global_client": {
          "version": 0,
          "block": {
            "attributes": {
              "addons": {
                "type": [
                  "list",
                  [
                    "object",
                    {
                      "aws": [
                        "map",
                        "string"
                      ],
                      "azure_blob": [
                        "map",
                        "string"
                      ],
                      "azure_sb": [
                        "map",
                        "string"
                      ],
                      "box": [
                        "map",
                        "string"
                      ],
                      "cloudbees": [
                        "map",
                        "string"
                      ],
                      "concur": [
                        "map",
                        "string"
                      ],
                      "dropbox": [
                        "map",
                        "string"
                      ],
                      "echosign": [
                        "map",
                        "string"
                      ],
                      "egnyte": [
                        "map",
                        "string"
                      ],
                      "firebase": [
                        "map",
                        "string"
                      ],
                      "layer": [
                        "map",
                        "string"
                      ],
                      "mscrm": [
                        "map",
                        "string"
                      ],
                      "newrelic": [
                        "map",
                        "string"
                      ],
                      "office365": [
                        "map",
                        "string"
                      ],
                      "rms": [
                        "map",
                        "string"
                      ],
                      "salesforce": [
                        "map",
                        "string"
                      ],
                      "salesforce_api": [
                        "map",
                        "string"
                      ],
                      "salesforce_sandbox_api": [
                        "map",
                        "string"
                      ],
                      "samlp": [
                        "list",
                        [
                          "object",
                          {
                            "audience": "string",
                            "authn_context_class_ref": "string",
                            "binding": "string",
                            "create_upn_claim": "bool",
                            "destination": "string",
                            "digest_algorithm": "string",
                            "include_attribute_name_format": "bool",
                            "issuer": "string",
                            "lifetime_in_seconds": "number",
                            "logout": [
                              "map",
                              "string"
                            ],
                            "map_identities": "bool",
                            "map_unknown_claims_as_is": "bool",
                            "mappings": [
                              "map",
                              "string"
                            ],
                            "name_identifier_format": "string",
                            "name_identifier_probes": [
                              "list",
                              "string"
                            ],
                            "passthrough_claims_with_no_mapping": "bool",
                            "recipient": "string",
                            "sign_response": "bool",
                            "signature_algorithm": "string",
                            "signing_cert": "string",
                            "typed_attributes": "bool"
                          }
                        ]
                      ],
                      "sap_api": [
                        "map",
                        "string"
                      ],
                      "sentry": [
                        "map",
                        "string"
                      ],
                      "sharepoint": [
                        "map",
                        "string"
                      ],
                      "slack": [
                        "map",
                        "string"
                      ],
                      "springcm": [
                        "map",
                        "string"
                      ],
                      "wams": [
                        "map",
                        "string"
                      ],
                      "wsfed": [
                        "map",
                        "string"
                      ],
                      "zendesk": [
                        "map",
                        "string"
                      ],
                      "zoom": [
                        "map",
                        "string"
                      ]
                    }
                  ]
                ],
                "description": "Addons enabled for this client and their associated configurations.",
                "description_kind": "markdown",
                "computed": true
              },
              "allowed_clients": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "List of applications ID's that will be allowed to make delegation request. By default, all applications will be allowed.",
                "description_kind": "markdown",
                "computed": true
              },
              "allowed_logout_urls": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "URLs that Auth0 may redirect to after logout.",
                "description_kind": "markdown",
                "computed": true
              },
              "allowed_origins": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "URLs that represent valid origins for cross-origin resource sharing. By default, all your callback URLs will be allowed.",
                "description_kind": "markdown",
                "computed": true
              },
              "app_type": {
                "type": "string",
                "description": "Type of application the client represents. Possible values are: `native`, `spa`, `regular_web`, `non_interactive`, `sso_integration`. Specific SSO integrations types accepted as well are: `rms`, `box`, `cloudbees`, `concur`, `dropbox`, `mscrm`, `echosign`, `egnyte`, `newrelic`, `office365`, `salesforce`, `sentry`, `sharepoint`, `slack`, `springcm`, `zendesk`, `zoom`.",
                "description_kind": "markdown",
                "computed": true
              },
              "callbacks": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "URLs that Auth0 may call back to after a user authenticates for the client. Make sure to specify the protocol (https://) otherwise the callback may fail in some cases. With the exception of custom URI schemes for native clients, all callbacks should use protocol https://.",
                "description_kind": "markdown",
                "computed": true
              },
              "client_aliases": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "List of audiences/realms for SAML protocol. Used by the wsfed addon.",
                "description_kind": "markdown",
                "computed": true
              },
              "client_id": {
                "type": "string",
                "description": "The ID of the client.",
                "description_kind": "markdown",
                "computed": true
              },
              "client_metadata": {
                "type": [
                  "map",
                  "string"
                ],
                "description": "Metadata associated with the client, in the form of an object with string values (max 255 chars). Maximum of 10 metadata properties allowed. Field names (max 255 chars) are alphanumeric and may only include the following special characters: `:,-+=_*?\"/\\()<>@ [Tab] [Space]`.",
                "description_kind": "markdown",
                "computed": true
              },
              "client_secret": {
                "type": "string",
                "description": "Secret for the client. Keep this private. To access this attribute you need to add the `read:client_keys` scope to the Terraform client. Otherwise, the attribute will contain an empty string.",
                "description_kind": "markdown",
                "computed": true
              },
              "cross_origin_auth": {
                "type": "bool",
                "description": "Whether this client can be used to make cross-origin authentication requests (`true`) or it is not allowed to make such requests (`false`). Requires the `coa_toggle_enabled` feature flag to be enabled on the tenant by the support team.",
                "description_kind": "markdown",
                "computed": true
              },
              "cross_origin_loc": {
                "type": "string",
                "description": "URL of the location in your site where the cross-origin verification takes place for the cross-origin auth flow when performing authentication in your own domain instead of Auth0 Universal Login page.",
                "description_kind": "markdown",
                "computed": true
              },
              "custom_login_page": {
                "type": "string",
                "description": "The content (HTML, CSS, JS) of the custom login page.",
                "description_kind": "markdown",
                "computed": true
              },
              "custom_login_page_on": {
                "type": "bool",
                "description": "Indicates whether a custom login page is to be used.",
                "description_kind": "markdown",
                "computed": true
              },
              "description": {
                "type": "string",
                "description": "Description of the purpose of the client.",
                "description_kind": "markdown",
                "computed": true
              },
              "encryption_key": {
                "type": [
                  "map",
                  "string"
                ],
                "description": "Encryption used for WS-Fed responses with this client.",
                "description_kind": "markdown",
                "computed": true
              },
              "form_template": {
                "type": "string",
                "description": "HTML form template to be used for WS-Federation.",
                "description_kind": "markdown",
                "computed": true
              },
              "grant_types": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "Types of grants that this client is authorized to use.",
                "description_kind": "markdown",
                "computed": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "initiate_login_uri": {
                "type": "string",
                "description": "Initiate login URI. Must be HTTPS or an empty string.",
                "description_kind": "markdown",
                "computed": true
              },
              "is_first_party": {
                "type": "bool",
                "description": "Indicates whether this client is a first-party client.",
                "description_kind": "markdown",
                "computed": true
              },
              "is_token_endpoint_ip_header_trusted": {
                "type": "bool",
                "description": "Indicates whether the token endpoint IP header is trusted.",
                "description_kind": "markdown",
                "computed": true
              },
              "jwt_configuration": {
                "type": [
                  "list",
                  [
                    "object",
                    {
                      "alg": "string",
                      "lifetime_in_seconds": "number",
                      "scopes": [
                        "map",
                        "string"
                      ],
                      "secret_encoded": "bool"
                    }
                  ]
                ],
                "description": "Configuration settings for the JWTs issued for this client.",
                "description_kind": "markdown",
                "computed": true
              },
              "logo_uri": {
                "type": "string",
                "description": "URL of the logo for the client. Recommended size is 150px x 150px. If none is set, the default badge for the application type will be shown.",
                "description_kind": "markdown",
                "computed": true
              },
              "mobile": {
                "type": [
                  "list",
                  [
                    "object",
                    {
                      "android": [
                        "list",
                        [
                          "object",
                          {
                            "app_package_name": "string",
                            "sha256_cert_fingerprints": [
                              "list",
                              "string"
                            ]
                          }
                        ]
                      ],
                      "ios": [
                        "list",
                        [
                          "object",
                          {
                            "app_bundle_identifier": "string",
                            "team_id": "string"
                          }
                        ]
                      ]
                    }
                  ]
                ],
                "description": "Additional configuration for native mobile apps.",
                "description_kind": "markdown",
                "computed": true
              },
              "name": {
                "type": "string",
                "description": "Name of the client.",
                "description_kind": "markdown",
                "computed": true
              },
              "native_social_login": {
                "type": [
                  "list",
                  [
                    "object",
                    {
                      "apple": [
                        "list",
                        [
                          "object",
                          {
                            "enabled": "bool"
                          }
                        ]
                      ],
                      "facebook": [
                        "list",
                        [
                          "object",
                          {
                            "enabled": "bool"
                          }
                        ]
                      ]
                    }
                  ]
                ],
                "description": "Configuration settings to toggle native social login for mobile native applications. Once this is set it must stay set, with both resources set to `false` in order to change the `app_type`.",
                "description_kind": "markdown",
                "computed": true
              },
              "oidc_conformant": {
                "type": "bool",
                "description": "Indicates whether this client will conform to strict OIDC specifications.",
                "description_kind": "markdown",
                "computed": true
              },
              "organization_require_behavior": {
                "type": "string",
                "description": "Defines how to proceed during an authentication transaction when `organization_usage = \"require\"`. Can be `no_prompt` (default) or `pre_login_prompt`.",
                "description_kind": "markdown",
                "computed": true
              },
              "organization_usage": {
                "type": "string",
                "description": "Defines how to proceed during an authentication transaction with regards to an organization. Can be `deny` (default), `allow` or `require`.",
                "description_kind": "markdown",
                "computed": true
              },
              "refresh_token": {
                "type": [
                  "list",
                  [
                    "object",
                    {
                      "expiration_type": "string",
                      "idle_token_lifetime": "number",
                      "infinite_idle_token_lifetime": "bool",
                      "infinite_token_lifetime": "bool",
                      "leeway": "number",
                      "rotation_type": "string",
                      "token_lifetime": "number"
                    }
                  ]
                ],
                "description": "Configuration settings for the refresh tokens issued for this client.",
                "description_kind": "markdown",
                "computed": true
              },
              "signing_keys": {
                "type": [
                  "list",
                  [
                    "map",
                    "string"
                  ]
                ],
                "description": "List containing a map of the public cert of the signing key and the public cert of the signing key in PKCS7.",
                "description_kind": "markdown",
                "computed": true
              },
              "sso": {
                "type": "bool",
                "description": "Applies only to SSO clients and determines whether Auth0 will handle Single Sign-On (true) or whether the identity provider will (false).",
                "description_kind": "markdown",
                "computed": true
              },
              "sso_disabled": {
                "type": "bool",
                "description": "Indicates whether or not SSO is disabled.",
                "description_kind": "markdown",
                "computed": true
              },
              "token_endpoint_auth_method": {
                "type": "string",
                "description": "Defines the requested authentication method for the token endpoint. Options include `none` (public client without a client secret), `client_secret_post` (client uses HTTP POST parameters), `client_secret_basic` (client uses HTTP Basic).",
                "description_kind": "markdown",
                "computed": true
              },
              "web_origins": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "URLs that represent valid web origins for use with web message response mode.",
                "description_kind": "markdown",
                "computed": true
              }
            },
            "description": "Retrieve a tenant's global Auth0 application client.",
            "description_kind": "markdown"
          }
        },
        "auth0_organization": {
          "version": 0,
          "block": {
            "attributes": {
              "branding": {
                "type": [
                  "list",
                  [
                    "object",
                    {
                      "colors": [
                        "map",
                        "string"
                      ],
                      "logo_url": "string"
                    }
                  ]
                ],
                "description": "Defines how to style the login pages.",
                "description_kind": "markdown",
                "computed": true
              },
              "connections": {
                "type": [
                  "set",
                  [
                    "object",
                    {
                      "assign_membership_on_login": "bool",
                      "connection_id": "string"
                    }
                  ]
                ],
                "description_kind": "plain",
                "computed": true
              },
              "display_name": {
                "type": "string",
                "description": "Friendly name of this organization.",
                "description_kind": "markdown",
                "computed": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "metadata": {
                "type": [
                  "map",
                  "string"
                ],
                "description": "Metadata associated with the organization. Maximum of 10 metadata properties allowed.",
                "description_kind": "markdown",
                "computed": true
              },
              "name": {
                "type": "string",
                "description": "The name of the organization. If not provided, `organization_id` must be set. For performance, it is advised to use the `organization_id` as a lookup if possible.",
                "description_kind": "markdown",
                "optional": true
              },
              "organization_id": {
                "type": "string",
                "description": "The ID of the organization. If not provided, `name` must be set.",
                "description_kind": "markdown",
                "optional": true
              }
            },
            "description": "Data source to retrieve a specific Auth0 organization by `organization_id` or `name`.",
            "description_kind": "markdown"
          }
        },
        "auth0_resource_server": {
          "version": 0,
          "block": {
            "attributes": {
              "allow_offline_access": {
                "type": "bool",
                "description": "Indicates whether refresh tokens can be issued for this resource server.",
                "description_kind": "markdown",
                "computed": true
              },
              "enforce_policies": {
                "type": "bool",
                "description": "If this setting is enabled, RBAC authorization policies will be enforced for this API. Role and permission assignments will be evaluated during the login transaction.",
                "description_kind": "markdown",
                "computed": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "identifier": {
                "type": "string",
                "description": "The unique identifier for the resource server. If not provided, `resource_server_id` must be set.",
                "description_kind": "markdown",
                "optional": true
              },
              "name": {
                "type": "string",
                "description": "Friendly name for the resource server. Cannot include `<` or `>` characters.",
                "description_kind": "markdown",
                "computed": true
              },
              "resource_server_id": {
                "type": "string",
                "description": "The ID of the resource server. If not provided, `identifier` must be set.",
                "description_kind": "markdown",
                "optional": true
              },
              "scopes": {
                "type": [
                  "set",
                  [
                    "object",
                    {
                      "description": "string",
                      "value": "string"
                    }
                  ]
                ],
                "description": "List of permissions (scopes) used by this resource server.",
                "description_kind": "markdown",
                "computed": true
              },
              "signing_alg": {
                "type": "string",
                "description": "Algorithm used to sign JWTs. Options include `HS256` and `RS256`.",
                "description_kind": "markdown",
                "computed": true
              },
              "signing_secret": {
                "type": "string",
                "description": "Secret used to sign tokens when using symmetric algorithms (HS256).",
                "description_kind": "markdown",
                "computed": true
              },
              "skip_consent_for_verifiable_first_party_clients": {
                "type": "bool",
                "description": "Indicates whether to skip user consent for applications flagged as first party.",
                "description_kind": "markdown",
                "computed": true
              },
              "token_dialect": {
                "type": "string",
                "description": "Dialect of access tokens that should be issued for this resource server. Options include `access_token` or `access_token_authz`. If this setting is set to `access_token_authz`, the Permissions claim will be added to the access token. Only available if RBAC (`enforce_policies`) is enabled for this API.",
                "description_kind": "markdown",
                "computed": true
              },
              "token_lifetime": {
                "type": "number",
                "description": "Number of seconds during which access tokens issued for this resource server from the token endpoint remain valid.",
                "description_kind": "markdown",
                "computed": true
              },
              "token_lifetime_for_web": {
                "type": "number",
                "description": "Number of seconds during which access tokens issued for this resource server via implicit or hybrid flows remain valid. Cannot be greater than the `token_lifetime` value.",
                "description_kind": "markdown",
                "computed": true
              },
              "verification_location": {
                "type": "string",
                "description": "URL from which to retrieve JWKs for this resource server. Used for verifying the JWT sent to Auth0 for token introspection.",
                "description_kind": "markdown",
                "computed": true
              }
            },
            "description": "Data source to retrieve a specific Auth0 resource server by `resource_server_id` or `identifier`.",
            "description_kind": "markdown"
          }
        },
        "auth0_role": {
          "version": 0,
          "block": {
            "attributes": {
              "description": {
                "type": "string",
                "description": "Description of the role.",
                "description_kind": "markdown",
                "computed": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "description": "The name of the role. If not provided, `role_id` must be set.",
                "description_kind": "markdown",
                "optional": true
              },
              "permissions": {
                "type": [
                  "set",
                  [
                    "object",
                    {
                      "name": "string",
                      "resource_server_identifier": "string"
                    }
                  ]
                ],
                "description": "Configuration settings for permissions (scopes) attached to the role.",
                "description_kind": "markdown",
                "computed": true
              },
              "role_id": {
                "type": "string",
                "description": "The ID of the role. If not provided, `name` must be set.",
                "description_kind": "markdown",
                "optional": true
              }
            },
            "description": "Data source to retrieve a specific Auth0 role by `role_id` or `name`.",
            "description_kind": "markdown"
          }
        },
        "auth0_tenant": {
          "version": 0,
          "block": {
            "attributes": {
              "allowed_logout_urls": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "URLs that Auth0 may redirect to after logout.",
                "description_kind": "markdown",
                "computed": true
              },
              "change_password": {
                "type": [
                  "list",
                  [
                    "object",
                    {
                      "enabled": "bool",
                      "html": "string"
                    }
                  ]
                ],
                "description": "Configuration settings for change password page.",
                "description_kind": "markdown",
                "computed": true
              },
              "default_audience": {
                "type": "string",
                "description": "API Audience to use by default for API Authorization flows. This setting is equivalent to appending the audience to every authorization request made to the tenant for every application.",
                "description_kind": "markdown",
                "computed": true
              },
              "default_directory": {
                "type": "string",
                "description": "Name of the connection to be used for Password Grant exchanges. Options include `auth0-adldap`, `ad`, `auth0`, `email`, `sms`, `waad`, and `adfs`.",
                "description_kind": "markdown",
                "computed": true
              },
              "default_redirection_uri": {
                "type": "string",
                "description": "The default absolute redirection URI. Must be HTTPS or an empty string.",
                "description_kind": "markdown",
                "computed": true
              },
              "domain": {
                "type": "string",
                "description": "Your Auth0 domain name.",
                "description_kind": "markdown",
                "computed": true
              },
              "enabled_locales": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "Supported locales for the user interface. The first locale in the list will be used to set the default locale.",
                "description_kind": "markdown",
                "computed": true
              },
              "error_page": {
                "type": [
                  "list",
                  [
                    "object",
                    {
                      "html": "string",
                      "show_log_link": "bool",
                      "url": "string"
                    }
                  ]
                ],
                "description": "Configuration settings for error pages.",
                "description_kind": "markdown",
                "computed": true
              },
              "flags": {
                "type": [
                  "list",
                  [
                    "object",
                    {
                      "allow_legacy_delegation_grant_types": "bool",
                      "allow_legacy_ro_grant_types": "bool",
                      "allow_legacy_tokeninfo_endpoint": "bool",
                      "dashboard_insights_view": "bool",
                      "dashboard_log_streams_next": "bool",
                      "disable_clickjack_protection_headers": "bool",
                      "disable_fields_map_fix": "bool",
                      "disable_management_api_sms_obfuscation": "bool",
                      "enable_adfs_waad_email_verification": "bool",
                      "enable_apis_section": "bool",
                      "enable_client_connections": "bool",
                      "enable_custom_domain_in_emails": "bool",
                      "enable_dynamic_client_registration": "bool",
                      "enable_idtoken_api2": "bool",
                      "enable_legacy_logs_search_v2": "bool",
                      "enable_legacy_profile": "bool",
                      "enable_pipeline2": "bool",
                      "enable_public_signup_user_exists_error": "bool",
                      "mfa_show_factor_list_on_enrollment": "bool",
                      "no_disclose_enterprise_connections": "bool",
                      "revoke_refresh_token_grant": "bool",
                      "universal_login": "bool",
                      "use_scope_descriptions_for_consent": "bool"
                    }
                  ]
                ],
                "description": "Configuration settings for tenant flags.",
                "description_kind": "markdown",
                "computed": true
              },
              "friendly_name": {
                "type": "string",
                "description": "Friendly name for the tenant.",
                "description_kind": "markdown",
                "computed": true
              },
              "guardian_mfa_page": {
                "type": [
                  "list",
                  [
                    "object",
                    {
                      "enabled": "bool",
                      "html": "string"
                    }
                  ]
                ],
                "description": "Configuration settings for the Guardian MFA page.",
                "description_kind": "markdown",
                "computed": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "idle_session_lifetime": {
                "type": "number",
                "description": "Number of hours during which a session can be inactive before the user must log in again.",
                "description_kind": "markdown",
                "computed": true
              },
              "management_api_identifier": {
                "type": "string",
                "description": "The identifier value of the built-in Management API resource server, which can be used as an audience when configuring client grants.",
                "description_kind": "markdown",
                "computed": true
              },
              "picture_url": {
                "type": "string",
                "description": "URL of logo to be shown for the tenant. Recommended size is 150px x 150px. If no URL is provided, the Auth0 logo will be used.",
                "description_kind": "markdown",
                "computed": true
              },
              "sandbox_version": {
                "type": "string",
                "description": "Selected sandbox version for the extensibility environment, which allows you to use custom scripts to extend parts of Auth0's functionality.",
                "description_kind": "markdown",
                "computed": true
              },
              "session_cookie": {
                "type": [
                  "list",
                  [
                    "object",
                    {
                      "mode": "string"
                    }
                  ]
                ],
                "description": "Alters behavior of tenant's session cookie. Contains a single `mode` property.",
                "description_kind": "markdown",
                "computed": true
              },
              "session_lifetime": {
                "type": "number",
                "description": "Number of hours during which a session will stay valid.",
                "description_kind": "markdown",
                "computed": true
              },
              "support_email": {
                "type": "string",
                "description": "Support email address for authenticating users.",
                "description_kind": "markdown",
                "computed": true
              },
              "support_url": {
                "type": "string",
                "description": "Support URL for authenticating users.",
                "description_kind": "markdown",
                "computed": true
              },
              "universal_login": {
                "type": [
                  "list",
                  [
                    "object",
                    {
                      "colors": [
                        "list",
                        [
                          "object",
                          {
                            "page_background": "string",
                            "primary": "string"
                          }
                        ]
                      ]
                    }
                  ]
                ],
                "description": "Configuration settings for Universal Login.",
                "description_kind": "markdown",
                "computed": true
              }
            },
            "description": "Use this data source to access information about the tenant this provider is configured to access.",
            "description_kind": "markdown"
          }
        },
        "auth0_user": {
          "version": 0,
          "block": {
            "attributes": {
              "app_metadata": {
                "type": "string",
                "description": "Custom fields that store info about the user that impact the user's core functionality, such as how an application functions or what the user can access. Examples include support plans and IDs for external accounts.",
                "description_kind": "markdown",
                "computed": true
              },
              "blocked": {
                "type": "bool",
                "description": "Indicates whether the user is blocked or not.",
                "description_kind": "markdown",
                "computed": true
              },
              "connection_name": {
                "type": "string",
                "description": "Name of the connection from which the user information was sourced.",
                "description_kind": "markdown",
                "computed": true
              },
              "email": {
                "type": "string",
                "description": "Email address of the user.",
                "description_kind": "markdown",
                "computed": true
              },
              "email_verified": {
                "type": "bool",
                "description": "Indicates whether the email address has been verified.",
                "description_kind": "markdown",
                "computed": true
              },
              "family_name": {
                "type": "string",
                "description": "Family name of the user. This value can only be updated if the connection is a database connection (using the Auth0 store), a passwordless connection (email or sms) or has disabled 'Sync user profile attributes at each login'. For more information, see: [Configure Identity Provider Connection for User Profile Updates](https://auth0.com/docs/manage-users/user-accounts/user-profiles/configure-connection-sync-with-auth0).",
                "description_kind": "markdown",
                "computed": true
              },
              "given_name": {
                "type": "string",
                "description": "Given name of the user. This value can only be updated if the connection is a database connection (using the Auth0 store), a passwordless connection (email or sms) or has disabled 'Sync user profile attributes at each login'. For more information, see: [Configure Identity Provider Connection for User Profile Updates](https://auth0.com/docs/manage-users/user-accounts/user-profiles/configure-connection-sync-with-auth0).",
                "description_kind": "markdown",
                "computed": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "description": "Name of the user. This value can only be updated if the connection is a database connection (using the Auth0 store), a passwordless connection (email or sms) or has disabled 'Sync user profile attributes at each login'. For more information, see: [Configure Identity Provider Connection for User Profile Updates](https://auth0.com/docs/manage-users/user-accounts/user-profiles/configure-connection-sync-with-auth0).",
                "description_kind": "markdown",
                "computed": true
              },
              "nickname": {
                "type": "string",
                "description": "Preferred nickname or alias of the user. This value can only be updated if the connection is a database connection (using the Auth0 store), a passwordless connection (email or sms) or has disabled 'Sync user profile attributes at each login'. For more information, see: [Configure Identity Provider Connection for User Profile Updates](https://auth0.com/docs/manage-users/user-accounts/user-profiles/configure-connection-sync-with-auth0).",
                "description_kind": "markdown",
                "computed": true
              },
              "password": {
                "type": "string",
                "description": "Initial password for this user. Required for non-passwordless connections (SMS and email).",
                "description_kind": "markdown",
                "computed": true
              },
              "phone_number": {
                "type": "string",
                "description": "Phone number for the user; follows the E.164 recommendation. Used for SMS connections. ",
                "description_kind": "markdown",
                "computed": true
              },
              "phone_verified": {
                "type": "bool",
                "description": "Indicates whether the phone number has been verified.",
                "description_kind": "markdown",
                "computed": true
              },
              "picture": {
                "type": "string",
                "description": "Picture of the user. This value can only be updated if the connection is a database connection (using the Auth0 store), a passwordless connection (email or sms) or has disabled 'Sync user profile attributes at each login'. For more information, see: [Configure Identity Provider Connection for User Profile Updates](https://auth0.com/docs/manage-users/user-accounts/user-profiles/configure-connection-sync-with-auth0).",
                "description_kind": "markdown",
                "computed": true
              },
              "roles": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "Set of IDs of roles assigned to the user.",
                "description_kind": "markdown",
                "computed": true
              },
              "user_id": {
                "type": "string",
                "description": "ID of the user.",
                "description_kind": "markdown",
                "required": true
              },
              "user_metadata": {
                "type": "string",
                "description": "Custom fields that store info about the user that does not impact a user's core functionality. Examples include work address, home address, and user preferences.",
                "description_kind": "markdown",
                "computed": true
              },
              "username": {
                "type": "string",
                "description": "Username of the user. Only valid if the connection requires a username.",
                "description_kind": "markdown",
                "computed": true
              },
              "verify_email": {
                "type": "bool",
                "description": "Indicates whether the user will receive a verification email after creation. Overrides behavior of `email_verified` parameter.",
                "description_kind": "markdown",
                "computed": true
              }
            },
            "description": "Data source to retrieve a specific Auth0 user by `user_id`.",
            "description_kind": "markdown"
          }
        }
      }
    }
  }
}
